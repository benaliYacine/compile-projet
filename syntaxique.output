Terminals unused in grammar

   err


Grammar

    0 $accept: s $end

    1 s: FCTS PRGM_PRIN

    2 PRGM_PRIN: mc_prgrm idf DECS INSTS mc_end

    3 FCTS: VIDE
    4     | ENSFCT

    5 VIDE: /* empty */

    6 ENSFCT: ENSFCT FCT
    7       | FCT

    8 FCT: TYPE mc_rtin idf po IDFS pf DECS ENSINST assignment mc_endr
    9    | TYPE mc_rtin idf po IDFS pf DECS assignment mc_endr

   10 TYPE: mc_int
   11     | mc_real
   12     | mc_char
   13     | mc_logi

   14 DECS: VIDE
   15     | ENSDEC

   16 ENSDEC: ENSDEC DEC
   17       | DEC

   18 DEC: TYPE ENSIDF_dec pvg

   19 $@1: /* empty */

   20 DEC: TYPE idf $@1 mul inti pvg
   21    | TYPE idf mc_dim po TAILLE pf pvg

   22 partie_gauch_affectation: aff valeur
   23                         | VIDE

   24 ENSIDF_dec: ENSIDF_dec verg idf partie_gauch_affectation
   25           | idf partie_gauch_affectation

   26 TAILLE: TAILLE verg inti
   27       | inti

   28 EXPRE: EXPRE lt EXPREt
   29      | EXPRE gt EXPREt
   30      | EXPRE ge EXPREt
   31      | EXPRE eq EXPREt
   32      | EXPRE ne EXPREt
   33      | EXPRE le EXPREt
   34      | EXPREt

   35 EXPREt: EXPREt add TERM
   36       | EXPREt sub TERM
   37       | TERM

   38 TERM: TERM mul FACTOR
   39     | TERM divi FACTOR
   40     | FACTOR

   41 FACTOR: po EXPRE pf
   42       | OPERAND

   43 OPERAND: idf
   44        | LOGI
   45        | inti
   46        | real
   47        | idf po TAILLE pf
   48        | mc_call idf po ENSpara pf

   49 ENSpara: ENSpara verg valeur
   50        | valeur

   51 LOGI: mc_true
   52     | mc_false

   53 IDFS: ENSIDF
   54     | VIDE

   55 ENSIDF: ENSIDF verg idf
   56       | idf

   57 INSTS: VIDE
   58      | ENSINST

   59 ENSINST: ENSINST INST
   60        | INST

   61 INST: if_statement
   62     | read_statement
   63     | write_statement
   64     | dowhile_statement
   65     | assignment
   66     | eqival_statement

   67 eqival_statement: mc_equival ens_list_vars pvg

   68 ens_list_vars: ens_list_var
   69              | VIDE

   70 ens_list_var: ens_list_var verg po list_var pf
   71             | po list_var pf

   72 list_var: list_var verg var
   73         | var

   74 var: idf
   75    | idf po TAILLE pf

   76 if_statement: B_if else_clause mc_endif

   77 B_if: A_if mc_then ENSINST

   78 A_if: mc_if po CONDI pf

   79 else_clause: mc_else ENSINST
   80            | VIDE

   81 assignment: var aff valeur pvg

   82 valeur: str
   83       | EXPRE

   84 read_statement: mc_read po var pf pvg

   85 write_statement: mc_write po ENS_PARA_WRITE pf pvg

   86 ENS_PARA_WRITE: ENS_PARA_WRITE verg str
   87               | ENS_PARA_WRITE verg var
   88               | str
   89               | var

   90 dowhile_statement: B_while ENSINST mc_enddo

   91 B_while: A_while po CONDI pf

   92 A_while: mc_dowhile

   93 CONDI: CONDI mc_or CONDI
   94      | CONDI mc_and CONDIT
   95      | CONDIT

   96 CONDIT: EXPRE


Terminals, with rules where they appear

$end (0) 0
error (256)
idf (258) 2 8 9 20 21 24 25 43 47 48 55 56 74 75
aff (259) 22 81
mc_prgrm (260) 2
mc_rtin (261) 8 9
inti (262) 20 26 27 45
real (263) 46
mc_endr (264) 8 9
mc_call (265) 48
mc_dim (266) 21
mc_logi (267) 13
mc_char (268) 12
mc_true (269) 51
mc_false (270) 52
mc_read (271) 84
mc_write (272) 85
pvg (273) 18 20 21 67 81 84 85
str (274) 82 86 88
mc_int (275) 10
mc_real (276) 11
mc_end (277) 2
mc_if (278) 78
mc_then (279) 77
mc_else (280) 79
mc_dowhile (281) 92
mc_enddo (282) 90
mc_equival (283) 67
mc_or (284) 93
ge (285) 30
eq (286) 31
ne (287) 32
le (288) 33
add (289) 35
sub (290) 36
mul (291) 20 38
divi (292) 39
mc_and (293) 94
mc_endif (294) 76
lt (295) 28
gt (296) 29
po (297) 8 9 21 41 47 48 70 71 75 78 84 85 91
pf (298) 8 9 21 41 47 48 70 71 75 78 84 85 91
verg (299) 24 26 49 55 70 72 86 87
err (300)


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
s (47)
    on left: 1, on right: 0
PRGM_PRIN (48)
    on left: 2, on right: 1
FCTS (49)
    on left: 3 4, on right: 1
VIDE (50)
    on left: 5, on right: 3 14 23 54 57 69 80
ENSFCT (51)
    on left: 6 7, on right: 4 6
FCT (52)
    on left: 8 9, on right: 6 7
TYPE (53)
    on left: 10 11 12 13, on right: 8 9 18 20 21
DECS (54)
    on left: 14 15, on right: 2 8 9
ENSDEC (55)
    on left: 16 17, on right: 15 16
DEC (56)
    on left: 18 20 21, on right: 16 17
$@1 (57)
    on left: 19, on right: 20
partie_gauch_affectation (58)
    on left: 22 23, on right: 24 25
ENSIDF_dec (59)
    on left: 24 25, on right: 18 24
TAILLE (60)
    on left: 26 27, on right: 21 26 47 75
EXPRE (61)
    on left: 28 29 30 31 32 33 34, on right: 28 29 30 31 32 33 41 83
    96
EXPREt (62)
    on left: 35 36 37, on right: 28 29 30 31 32 33 34 35 36
TERM (63)
    on left: 38 39 40, on right: 35 36 37 38 39
FACTOR (64)
    on left: 41 42, on right: 38 39 40
OPERAND (65)
    on left: 43 44 45 46 47 48, on right: 42
ENSpara (66)
    on left: 49 50, on right: 48 49
LOGI (67)
    on left: 51 52, on right: 44
IDFS (68)
    on left: 53 54, on right: 8 9
ENSIDF (69)
    on left: 55 56, on right: 53 55
INSTS (70)
    on left: 57 58, on right: 2
ENSINST (71)
    on left: 59 60, on right: 8 58 59 77 79 90
INST (72)
    on left: 61 62 63 64 65 66, on right: 59 60
eqival_statement (73)
    on left: 67, on right: 66
ens_list_vars (74)
    on left: 68 69, on right: 67
ens_list_var (75)
    on left: 70 71, on right: 68 70
list_var (76)
    on left: 72 73, on right: 70 71 72
var (77)
    on left: 74 75, on right: 72 73 81 84 87 89
if_statement (78)
    on left: 76, on right: 61
B_if (79)
    on left: 77, on right: 76
A_if (80)
    on left: 78, on right: 77
else_clause (81)
    on left: 79 80, on right: 76
assignment (82)
    on left: 81, on right: 8 9 65
valeur (83)
    on left: 82 83, on right: 22 49 50 81
read_statement (84)
    on left: 84, on right: 62
write_statement (85)
    on left: 85, on right: 63
ENS_PARA_WRITE (86)
    on left: 86 87 88 89, on right: 85 86 87
dowhile_statement (87)
    on left: 90, on right: 64
B_while (88)
    on left: 91, on right: 90
A_while (89)
    on left: 92, on right: 91
CONDI (90)
    on left: 93 94 95, on right: 78 91 93 94
CONDIT (91)
    on left: 96, on right: 94 95


state 0

    0 $accept: . s $end

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 5 (VIDE)

    s       go to state 5
    FCTS    go to state 6
    VIDE    go to state 7
    ENSFCT  go to state 8
    FCT     go to state 9
    TYPE    go to state 10


state 1

   13 TYPE: mc_logi .

    $default  reduce using rule 13 (TYPE)


state 2

   12 TYPE: mc_char .

    $default  reduce using rule 12 (TYPE)


state 3

   10 TYPE: mc_int .

    $default  reduce using rule 10 (TYPE)


state 4

   11 TYPE: mc_real .

    $default  reduce using rule 11 (TYPE)


state 5

    0 $accept: s . $end

    $end  shift, and go to state 11


state 6

    1 s: FCTS . PRGM_PRIN

    mc_prgrm  shift, and go to state 12

    PRGM_PRIN  go to state 13


state 7

    3 FCTS: VIDE .

    $default  reduce using rule 3 (FCTS)


state 8

    4 FCTS: ENSFCT .
    6 ENSFCT: ENSFCT . FCT

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 4 (FCTS)

    FCT   go to state 14
    TYPE  go to state 10


state 9

    7 ENSFCT: FCT .

    $default  reduce using rule 7 (ENSFCT)


state 10

    8 FCT: TYPE . mc_rtin idf po IDFS pf DECS ENSINST assignment mc_endr
    9    | TYPE . mc_rtin idf po IDFS pf DECS assignment mc_endr

    mc_rtin  shift, and go to state 15


state 11

    0 $accept: s $end .

    $default  accept


state 12

    2 PRGM_PRIN: mc_prgrm . idf DECS INSTS mc_end

    idf  shift, and go to state 16


state 13

    1 s: FCTS PRGM_PRIN .

    $default  reduce using rule 1 (s)


state 14

    6 ENSFCT: ENSFCT FCT .

    $default  reduce using rule 6 (ENSFCT)


state 15

    8 FCT: TYPE mc_rtin . idf po IDFS pf DECS ENSINST assignment mc_endr
    9    | TYPE mc_rtin . idf po IDFS pf DECS assignment mc_endr

    idf  shift, and go to state 17


state 16

    2 PRGM_PRIN: mc_prgrm idf . DECS INSTS mc_end

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 5 (VIDE)

    VIDE    go to state 18
    TYPE    go to state 19
    DECS    go to state 20
    ENSDEC  go to state 21
    DEC     go to state 22


state 17

    8 FCT: TYPE mc_rtin idf . po IDFS pf DECS ENSINST assignment mc_endr
    9    | TYPE mc_rtin idf . po IDFS pf DECS assignment mc_endr

    po  shift, and go to state 23


state 18

   14 DECS: VIDE .

    $default  reduce using rule 14 (DECS)


state 19

   18 DEC: TYPE . ENSIDF_dec pvg
   20    | TYPE . idf $@1 mul inti pvg
   21    | TYPE . idf mc_dim po TAILLE pf pvg

    idf  shift, and go to state 24

    ENSIDF_dec  go to state 25


state 20

    2 PRGM_PRIN: mc_prgrm idf DECS . INSTS mc_end

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    $default  reduce using rule 5 (VIDE)

    VIDE               go to state 32
    INSTS              go to state 33
    ENSINST            go to state 34
    INST               go to state 35
    eqival_statement   go to state 36
    var                go to state 37
    if_statement       go to state 38
    B_if               go to state 39
    A_if               go to state 40
    assignment         go to state 41
    read_statement     go to state 42
    write_statement    go to state 43
    dowhile_statement  go to state 44
    B_while            go to state 45
    A_while            go to state 46


state 21

   15 DECS: ENSDEC .
   16 ENSDEC: ENSDEC . DEC

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 15 (DECS)

    TYPE  go to state 19
    DEC   go to state 47


state 22

   17 ENSDEC: DEC .

    $default  reduce using rule 17 (ENSDEC)


state 23

    8 FCT: TYPE mc_rtin idf po . IDFS pf DECS ENSINST assignment mc_endr
    9    | TYPE mc_rtin idf po . IDFS pf DECS assignment mc_endr

    idf  shift, and go to state 48

    $default  reduce using rule 5 (VIDE)

    VIDE    go to state 49
    IDFS    go to state 50
    ENSIDF  go to state 51


state 24

   20 DEC: TYPE idf . $@1 mul inti pvg
   21    | TYPE idf . mc_dim po TAILLE pf pvg
   25 ENSIDF_dec: idf . partie_gauch_affectation

    aff     shift, and go to state 52
    mc_dim  shift, and go to state 53

    mul       reduce using rule 19 ($@1)
    $default  reduce using rule 5 (VIDE)

    VIDE                      go to state 54
    $@1                       go to state 55
    partie_gauch_affectation  go to state 56


state 25

   18 DEC: TYPE ENSIDF_dec . pvg
   24 ENSIDF_dec: ENSIDF_dec . verg idf partie_gauch_affectation

    pvg   shift, and go to state 57
    verg  shift, and go to state 58


state 26

   74 var: idf .
   75    | idf . po TAILLE pf

    po  shift, and go to state 59

    $default  reduce using rule 74 (var)


state 27

   84 read_statement: mc_read . po var pf pvg

    po  shift, and go to state 60


state 28

   85 write_statement: mc_write . po ENS_PARA_WRITE pf pvg

    po  shift, and go to state 61


state 29

   78 A_if: mc_if . po CONDI pf

    po  shift, and go to state 62


state 30

   92 A_while: mc_dowhile .

    $default  reduce using rule 92 (A_while)


state 31

   67 eqival_statement: mc_equival . ens_list_vars pvg

    po  shift, and go to state 63

    $default  reduce using rule 5 (VIDE)

    VIDE           go to state 64
    ens_list_vars  go to state 65
    ens_list_var   go to state 66


state 32

   57 INSTS: VIDE .

    $default  reduce using rule 57 (INSTS)


state 33

    2 PRGM_PRIN: mc_prgrm idf DECS INSTS . mc_end

    mc_end  shift, and go to state 67


state 34

   58 INSTS: ENSINST .
   59 ENSINST: ENSINST . INST

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    $default  reduce using rule 58 (INSTS)

    INST               go to state 68
    eqival_statement   go to state 36
    var                go to state 37
    if_statement       go to state 38
    B_if               go to state 39
    A_if               go to state 40
    assignment         go to state 41
    read_statement     go to state 42
    write_statement    go to state 43
    dowhile_statement  go to state 44
    B_while            go to state 45
    A_while            go to state 46


state 35

   60 ENSINST: INST .

    $default  reduce using rule 60 (ENSINST)


state 36

   66 INST: eqival_statement .

    $default  reduce using rule 66 (INST)


state 37

   81 assignment: var . aff valeur pvg

    aff  shift, and go to state 69


state 38

   61 INST: if_statement .

    $default  reduce using rule 61 (INST)


state 39

   76 if_statement: B_if . else_clause mc_endif

    mc_else  shift, and go to state 70

    $default  reduce using rule 5 (VIDE)

    VIDE         go to state 71
    else_clause  go to state 72


state 40

   77 B_if: A_if . mc_then ENSINST

    mc_then  shift, and go to state 73


state 41

   65 INST: assignment .

    $default  reduce using rule 65 (INST)


state 42

   62 INST: read_statement .

    $default  reduce using rule 62 (INST)


state 43

   63 INST: write_statement .

    $default  reduce using rule 63 (INST)


state 44

   64 INST: dowhile_statement .

    $default  reduce using rule 64 (INST)


state 45

   90 dowhile_statement: B_while . ENSINST mc_enddo

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    ENSINST            go to state 74
    INST               go to state 35
    eqival_statement   go to state 36
    var                go to state 37
    if_statement       go to state 38
    B_if               go to state 39
    A_if               go to state 40
    assignment         go to state 41
    read_statement     go to state 42
    write_statement    go to state 43
    dowhile_statement  go to state 44
    B_while            go to state 45
    A_while            go to state 46


state 46

   91 B_while: A_while . po CONDI pf

    po  shift, and go to state 75


state 47

   16 ENSDEC: ENSDEC DEC .

    $default  reduce using rule 16 (ENSDEC)


state 48

   56 ENSIDF: idf .

    $default  reduce using rule 56 (ENSIDF)


state 49

   54 IDFS: VIDE .

    $default  reduce using rule 54 (IDFS)


state 50

    8 FCT: TYPE mc_rtin idf po IDFS . pf DECS ENSINST assignment mc_endr
    9    | TYPE mc_rtin idf po IDFS . pf DECS assignment mc_endr

    pf  shift, and go to state 76


state 51

   53 IDFS: ENSIDF .
   55 ENSIDF: ENSIDF . verg idf

    verg  shift, and go to state 77

    $default  reduce using rule 53 (IDFS)


state 52

   22 partie_gauch_affectation: aff . valeur

    idf       shift, and go to state 78
    inti      shift, and go to state 79
    real      shift, and go to state 80
    mc_call   shift, and go to state 81
    mc_true   shift, and go to state 82
    mc_false  shift, and go to state 83
    str       shift, and go to state 84
    po        shift, and go to state 85

    EXPRE    go to state 86
    EXPREt   go to state 87
    TERM     go to state 88
    FACTOR   go to state 89
    OPERAND  go to state 90
    LOGI     go to state 91
    valeur   go to state 92


state 53

   21 DEC: TYPE idf mc_dim . po TAILLE pf pvg

    po  shift, and go to state 93


state 54

   23 partie_gauch_affectation: VIDE .

    $default  reduce using rule 23 (partie_gauch_affectation)


state 55

   20 DEC: TYPE idf $@1 . mul inti pvg

    mul  shift, and go to state 94


state 56

   25 ENSIDF_dec: idf partie_gauch_affectation .

    $default  reduce using rule 25 (ENSIDF_dec)


state 57

   18 DEC: TYPE ENSIDF_dec pvg .

    $default  reduce using rule 18 (DEC)


state 58

   24 ENSIDF_dec: ENSIDF_dec verg . idf partie_gauch_affectation

    idf  shift, and go to state 95


state 59

   75 var: idf po . TAILLE pf

    inti  shift, and go to state 96

    TAILLE  go to state 97


state 60

   84 read_statement: mc_read po . var pf pvg

    idf  shift, and go to state 26

    var  go to state 98


state 61

   85 write_statement: mc_write po . ENS_PARA_WRITE pf pvg

    idf  shift, and go to state 26
    str  shift, and go to state 99

    var             go to state 100
    ENS_PARA_WRITE  go to state 101


state 62

   78 A_if: mc_if po . CONDI pf

    idf       shift, and go to state 78
    inti      shift, and go to state 79
    real      shift, and go to state 80
    mc_call   shift, and go to state 81
    mc_true   shift, and go to state 82
    mc_false  shift, and go to state 83
    po        shift, and go to state 85

    EXPRE    go to state 102
    EXPREt   go to state 87
    TERM     go to state 88
    FACTOR   go to state 89
    OPERAND  go to state 90
    LOGI     go to state 91
    CONDI    go to state 103
    CONDIT   go to state 104


state 63

   71 ens_list_var: po . list_var pf

    idf  shift, and go to state 26

    list_var  go to state 105
    var       go to state 106


state 64

   69 ens_list_vars: VIDE .

    $default  reduce using rule 69 (ens_list_vars)


state 65

   67 eqival_statement: mc_equival ens_list_vars . pvg

    pvg  shift, and go to state 107


state 66

   68 ens_list_vars: ens_list_var .
   70 ens_list_var: ens_list_var . verg po list_var pf

    verg  shift, and go to state 108

    $default  reduce using rule 68 (ens_list_vars)


state 67

    2 PRGM_PRIN: mc_prgrm idf DECS INSTS mc_end .

    $default  reduce using rule 2 (PRGM_PRIN)


state 68

   59 ENSINST: ENSINST INST .

    $default  reduce using rule 59 (ENSINST)


state 69

   81 assignment: var aff . valeur pvg

    idf       shift, and go to state 78
    inti      shift, and go to state 79
    real      shift, and go to state 80
    mc_call   shift, and go to state 81
    mc_true   shift, and go to state 82
    mc_false  shift, and go to state 83
    str       shift, and go to state 84
    po        shift, and go to state 85

    EXPRE    go to state 86
    EXPREt   go to state 87
    TERM     go to state 88
    FACTOR   go to state 89
    OPERAND  go to state 90
    LOGI     go to state 91
    valeur   go to state 109


state 70

   79 else_clause: mc_else . ENSINST

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    ENSINST            go to state 110
    INST               go to state 35
    eqival_statement   go to state 36
    var                go to state 37
    if_statement       go to state 38
    B_if               go to state 39
    A_if               go to state 40
    assignment         go to state 41
    read_statement     go to state 42
    write_statement    go to state 43
    dowhile_statement  go to state 44
    B_while            go to state 45
    A_while            go to state 46


state 71

   80 else_clause: VIDE .

    $default  reduce using rule 80 (else_clause)


state 72

   76 if_statement: B_if else_clause . mc_endif

    mc_endif  shift, and go to state 111


state 73

   77 B_if: A_if mc_then . ENSINST

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    ENSINST            go to state 112
    INST               go to state 35
    eqival_statement   go to state 36
    var                go to state 37
    if_statement       go to state 38
    B_if               go to state 39
    A_if               go to state 40
    assignment         go to state 41
    read_statement     go to state 42
    write_statement    go to state 43
    dowhile_statement  go to state 44
    B_while            go to state 45
    A_while            go to state 46


state 74

   59 ENSINST: ENSINST . INST
   90 dowhile_statement: B_while ENSINST . mc_enddo

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_enddo    shift, and go to state 113
    mc_equival  shift, and go to state 31

    INST               go to state 68
    eqival_statement   go to state 36
    var                go to state 37
    if_statement       go to state 38
    B_if               go to state 39
    A_if               go to state 40
    assignment         go to state 41
    read_statement     go to state 42
    write_statement    go to state 43
    dowhile_statement  go to state 44
    B_while            go to state 45
    A_while            go to state 46


state 75

   91 B_while: A_while po . CONDI pf

    idf       shift, and go to state 78
    inti      shift, and go to state 79
    real      shift, and go to state 80
    mc_call   shift, and go to state 81
    mc_true   shift, and go to state 82
    mc_false  shift, and go to state 83
    po        shift, and go to state 85

    EXPRE    go to state 102
    EXPREt   go to state 87
    TERM     go to state 88
    FACTOR   go to state 89
    OPERAND  go to state 90
    LOGI     go to state 91
    CONDI    go to state 114
    CONDIT   go to state 104


state 76

    8 FCT: TYPE mc_rtin idf po IDFS pf . DECS ENSINST assignment mc_endr
    9    | TYPE mc_rtin idf po IDFS pf . DECS assignment mc_endr

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 5 (VIDE)

    VIDE    go to state 18
    TYPE    go to state 19
    DECS    go to state 115
    ENSDEC  go to state 21
    DEC     go to state 22


state 77

   55 ENSIDF: ENSIDF verg . idf

    idf  shift, and go to state 116


state 78

   43 OPERAND: idf .
   47        | idf . po TAILLE pf

    po  shift, and go to state 117

    $default  reduce using rule 43 (OPERAND)


state 79

   45 OPERAND: inti .

    $default  reduce using rule 45 (OPERAND)


state 80

   46 OPERAND: real .

    $default  reduce using rule 46 (OPERAND)


state 81

   48 OPERAND: mc_call . idf po ENSpara pf

    idf  shift, and go to state 118


state 82

   51 LOGI: mc_true .

    $default  reduce using rule 51 (LOGI)


state 83

   52 LOGI: mc_false .

    $default  reduce using rule 52 (LOGI)


state 84

   82 valeur: str .

    $default  reduce using rule 82 (valeur)


state 85

   41 FACTOR: po . EXPRE pf

    idf       shift, and go to state 78
    inti      shift, and go to state 79
    real      shift, and go to state 80
    mc_call   shift, and go to state 81
    mc_true   shift, and go to state 82
    mc_false  shift, and go to state 83
    po        shift, and go to state 85

    EXPRE    go to state 119
    EXPREt   go to state 87
    TERM     go to state 88
    FACTOR   go to state 89
    OPERAND  go to state 90
    LOGI     go to state 91


state 86

   28 EXPRE: EXPRE . lt EXPREt
   29      | EXPRE . gt EXPREt
   30      | EXPRE . ge EXPREt
   31      | EXPRE . eq EXPREt
   32      | EXPRE . ne EXPREt
   33      | EXPRE . le EXPREt
   83 valeur: EXPRE .

    ge  shift, and go to state 120
    eq  shift, and go to state 121
    ne  shift, and go to state 122
    le  shift, and go to state 123
    lt  shift, and go to state 124
    gt  shift, and go to state 125

    $default  reduce using rule 83 (valeur)


state 87

   34 EXPRE: EXPREt .
   35 EXPREt: EXPREt . add TERM
   36       | EXPREt . sub TERM

    add  shift, and go to state 126
    sub  shift, and go to state 127

    $default  reduce using rule 34 (EXPRE)


state 88

   37 EXPREt: TERM .
   38 TERM: TERM . mul FACTOR
   39     | TERM . divi FACTOR

    mul   shift, and go to state 128
    divi  shift, and go to state 129

    $default  reduce using rule 37 (EXPREt)


state 89

   40 TERM: FACTOR .

    $default  reduce using rule 40 (TERM)


state 90

   42 FACTOR: OPERAND .

    $default  reduce using rule 42 (FACTOR)


state 91

   44 OPERAND: LOGI .

    $default  reduce using rule 44 (OPERAND)


state 92

   22 partie_gauch_affectation: aff valeur .

    $default  reduce using rule 22 (partie_gauch_affectation)


state 93

   21 DEC: TYPE idf mc_dim po . TAILLE pf pvg

    inti  shift, and go to state 96

    TAILLE  go to state 130


state 94

   20 DEC: TYPE idf $@1 mul . inti pvg

    inti  shift, and go to state 131


state 95

   24 ENSIDF_dec: ENSIDF_dec verg idf . partie_gauch_affectation

    aff  shift, and go to state 52

    $default  reduce using rule 5 (VIDE)

    VIDE                      go to state 54
    partie_gauch_affectation  go to state 132


state 96

   27 TAILLE: inti .

    $default  reduce using rule 27 (TAILLE)


state 97

   26 TAILLE: TAILLE . verg inti
   75 var: idf po TAILLE . pf

    pf    shift, and go to state 133
    verg  shift, and go to state 134


state 98

   84 read_statement: mc_read po var . pf pvg

    pf  shift, and go to state 135


state 99

   88 ENS_PARA_WRITE: str .

    $default  reduce using rule 88 (ENS_PARA_WRITE)


state 100

   89 ENS_PARA_WRITE: var .

    $default  reduce using rule 89 (ENS_PARA_WRITE)


state 101

   85 write_statement: mc_write po ENS_PARA_WRITE . pf pvg
   86 ENS_PARA_WRITE: ENS_PARA_WRITE . verg str
   87               | ENS_PARA_WRITE . verg var

    pf    shift, and go to state 136
    verg  shift, and go to state 137


state 102

   28 EXPRE: EXPRE . lt EXPREt
   29      | EXPRE . gt EXPREt
   30      | EXPRE . ge EXPREt
   31      | EXPRE . eq EXPREt
   32      | EXPRE . ne EXPREt
   33      | EXPRE . le EXPREt
   96 CONDIT: EXPRE .

    ge  shift, and go to state 120
    eq  shift, and go to state 121
    ne  shift, and go to state 122
    le  shift, and go to state 123
    lt  shift, and go to state 124
    gt  shift, and go to state 125

    $default  reduce using rule 96 (CONDIT)


state 103

   78 A_if: mc_if po CONDI . pf
   93 CONDI: CONDI . mc_or CONDI
   94      | CONDI . mc_and CONDIT

    mc_or   shift, and go to state 138
    mc_and  shift, and go to state 139
    pf      shift, and go to state 140


state 104

   95 CONDI: CONDIT .

    $default  reduce using rule 95 (CONDI)


state 105

   71 ens_list_var: po list_var . pf
   72 list_var: list_var . verg var

    pf    shift, and go to state 141
    verg  shift, and go to state 142


state 106

   73 list_var: var .

    $default  reduce using rule 73 (list_var)


state 107

   67 eqival_statement: mc_equival ens_list_vars pvg .

    $default  reduce using rule 67 (eqival_statement)


state 108

   70 ens_list_var: ens_list_var verg . po list_var pf

    po  shift, and go to state 143


state 109

   81 assignment: var aff valeur . pvg

    pvg  shift, and go to state 144


state 110

   59 ENSINST: ENSINST . INST
   79 else_clause: mc_else ENSINST .

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    $default  reduce using rule 79 (else_clause)

    INST               go to state 68
    eqival_statement   go to state 36
    var                go to state 37
    if_statement       go to state 38
    B_if               go to state 39
    A_if               go to state 40
    assignment         go to state 41
    read_statement     go to state 42
    write_statement    go to state 43
    dowhile_statement  go to state 44
    B_while            go to state 45
    A_while            go to state 46


state 111

   76 if_statement: B_if else_clause mc_endif .

    $default  reduce using rule 76 (if_statement)


state 112

   59 ENSINST: ENSINST . INST
   77 B_if: A_if mc_then ENSINST .

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    $default  reduce using rule 77 (B_if)

    INST               go to state 68
    eqival_statement   go to state 36
    var                go to state 37
    if_statement       go to state 38
    B_if               go to state 39
    A_if               go to state 40
    assignment         go to state 41
    read_statement     go to state 42
    write_statement    go to state 43
    dowhile_statement  go to state 44
    B_while            go to state 45
    A_while            go to state 46


state 113

   90 dowhile_statement: B_while ENSINST mc_enddo .

    $default  reduce using rule 90 (dowhile_statement)


state 114

   91 B_while: A_while po CONDI . pf
   93 CONDI: CONDI . mc_or CONDI
   94      | CONDI . mc_and CONDIT

    mc_or   shift, and go to state 138
    mc_and  shift, and go to state 139
    pf      shift, and go to state 145


state 115

    8 FCT: TYPE mc_rtin idf po IDFS pf DECS . ENSINST assignment mc_endr
    9    | TYPE mc_rtin idf po IDFS pf DECS . assignment mc_endr

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    ENSINST            go to state 146
    INST               go to state 35
    eqival_statement   go to state 36
    var                go to state 37
    if_statement       go to state 38
    B_if               go to state 39
    A_if               go to state 40
    assignment         go to state 147
    read_statement     go to state 42
    write_statement    go to state 43
    dowhile_statement  go to state 44
    B_while            go to state 45
    A_while            go to state 46


state 116

   55 ENSIDF: ENSIDF verg idf .

    $default  reduce using rule 55 (ENSIDF)


state 117

   47 OPERAND: idf po . TAILLE pf

    inti  shift, and go to state 96

    TAILLE  go to state 148


state 118

   48 OPERAND: mc_call idf . po ENSpara pf

    po  shift, and go to state 149


state 119

   28 EXPRE: EXPRE . lt EXPREt
   29      | EXPRE . gt EXPREt
   30      | EXPRE . ge EXPREt
   31      | EXPRE . eq EXPREt
   32      | EXPRE . ne EXPREt
   33      | EXPRE . le EXPREt
   41 FACTOR: po EXPRE . pf

    ge  shift, and go to state 120
    eq  shift, and go to state 121
    ne  shift, and go to state 122
    le  shift, and go to state 123
    lt  shift, and go to state 124
    gt  shift, and go to state 125
    pf  shift, and go to state 150


state 120

   30 EXPRE: EXPRE ge . EXPREt

    idf       shift, and go to state 78
    inti      shift, and go to state 79
    real      shift, and go to state 80
    mc_call   shift, and go to state 81
    mc_true   shift, and go to state 82
    mc_false  shift, and go to state 83
    po        shift, and go to state 85

    EXPREt   go to state 151
    TERM     go to state 88
    FACTOR   go to state 89
    OPERAND  go to state 90
    LOGI     go to state 91


state 121

   31 EXPRE: EXPRE eq . EXPREt

    idf       shift, and go to state 78
    inti      shift, and go to state 79
    real      shift, and go to state 80
    mc_call   shift, and go to state 81
    mc_true   shift, and go to state 82
    mc_false  shift, and go to state 83
    po        shift, and go to state 85

    EXPREt   go to state 152
    TERM     go to state 88
    FACTOR   go to state 89
    OPERAND  go to state 90
    LOGI     go to state 91


state 122

   32 EXPRE: EXPRE ne . EXPREt

    idf       shift, and go to state 78
    inti      shift, and go to state 79
    real      shift, and go to state 80
    mc_call   shift, and go to state 81
    mc_true   shift, and go to state 82
    mc_false  shift, and go to state 83
    po        shift, and go to state 85

    EXPREt   go to state 153
    TERM     go to state 88
    FACTOR   go to state 89
    OPERAND  go to state 90
    LOGI     go to state 91


state 123

   33 EXPRE: EXPRE le . EXPREt

    idf       shift, and go to state 78
    inti      shift, and go to state 79
    real      shift, and go to state 80
    mc_call   shift, and go to state 81
    mc_true   shift, and go to state 82
    mc_false  shift, and go to state 83
    po        shift, and go to state 85

    EXPREt   go to state 154
    TERM     go to state 88
    FACTOR   go to state 89
    OPERAND  go to state 90
    LOGI     go to state 91


state 124

   28 EXPRE: EXPRE lt . EXPREt

    idf       shift, and go to state 78
    inti      shift, and go to state 79
    real      shift, and go to state 80
    mc_call   shift, and go to state 81
    mc_true   shift, and go to state 82
    mc_false  shift, and go to state 83
    po        shift, and go to state 85

    EXPREt   go to state 155
    TERM     go to state 88
    FACTOR   go to state 89
    OPERAND  go to state 90
    LOGI     go to state 91


state 125

   29 EXPRE: EXPRE gt . EXPREt

    idf       shift, and go to state 78
    inti      shift, and go to state 79
    real      shift, and go to state 80
    mc_call   shift, and go to state 81
    mc_true   shift, and go to state 82
    mc_false  shift, and go to state 83
    po        shift, and go to state 85

    EXPREt   go to state 156
    TERM     go to state 88
    FACTOR   go to state 89
    OPERAND  go to state 90
    LOGI     go to state 91


state 126

   35 EXPREt: EXPREt add . TERM

    idf       shift, and go to state 78
    inti      shift, and go to state 79
    real      shift, and go to state 80
    mc_call   shift, and go to state 81
    mc_true   shift, and go to state 82
    mc_false  shift, and go to state 83
    po        shift, and go to state 85

    TERM     go to state 157
    FACTOR   go to state 89
    OPERAND  go to state 90
    LOGI     go to state 91


state 127

   36 EXPREt: EXPREt sub . TERM

    idf       shift, and go to state 78
    inti      shift, and go to state 79
    real      shift, and go to state 80
    mc_call   shift, and go to state 81
    mc_true   shift, and go to state 82
    mc_false  shift, and go to state 83
    po        shift, and go to state 85

    TERM     go to state 158
    FACTOR   go to state 89
    OPERAND  go to state 90
    LOGI     go to state 91


state 128

   38 TERM: TERM mul . FACTOR

    idf       shift, and go to state 78
    inti      shift, and go to state 79
    real      shift, and go to state 80
    mc_call   shift, and go to state 81
    mc_true   shift, and go to state 82
    mc_false  shift, and go to state 83
    po        shift, and go to state 85

    FACTOR   go to state 159
    OPERAND  go to state 90
    LOGI     go to state 91


state 129

   39 TERM: TERM divi . FACTOR

    idf       shift, and go to state 78
    inti      shift, and go to state 79
    real      shift, and go to state 80
    mc_call   shift, and go to state 81
    mc_true   shift, and go to state 82
    mc_false  shift, and go to state 83
    po        shift, and go to state 85

    FACTOR   go to state 160
    OPERAND  go to state 90
    LOGI     go to state 91


state 130

   21 DEC: TYPE idf mc_dim po TAILLE . pf pvg
   26 TAILLE: TAILLE . verg inti

    pf    shift, and go to state 161
    verg  shift, and go to state 134


state 131

   20 DEC: TYPE idf $@1 mul inti . pvg

    pvg  shift, and go to state 162


state 132

   24 ENSIDF_dec: ENSIDF_dec verg idf partie_gauch_affectation .

    $default  reduce using rule 24 (ENSIDF_dec)


state 133

   75 var: idf po TAILLE pf .

    $default  reduce using rule 75 (var)


state 134

   26 TAILLE: TAILLE verg . inti

    inti  shift, and go to state 163


state 135

   84 read_statement: mc_read po var pf . pvg

    pvg  shift, and go to state 164


state 136

   85 write_statement: mc_write po ENS_PARA_WRITE pf . pvg

    pvg  shift, and go to state 165


state 137

   86 ENS_PARA_WRITE: ENS_PARA_WRITE verg . str
   87               | ENS_PARA_WRITE verg . var

    idf  shift, and go to state 26
    str  shift, and go to state 166

    var  go to state 167


state 138

   93 CONDI: CONDI mc_or . CONDI

    idf       shift, and go to state 78
    inti      shift, and go to state 79
    real      shift, and go to state 80
    mc_call   shift, and go to state 81
    mc_true   shift, and go to state 82
    mc_false  shift, and go to state 83
    po        shift, and go to state 85

    EXPRE    go to state 102
    EXPREt   go to state 87
    TERM     go to state 88
    FACTOR   go to state 89
    OPERAND  go to state 90
    LOGI     go to state 91
    CONDI    go to state 168
    CONDIT   go to state 104


state 139

   94 CONDI: CONDI mc_and . CONDIT

    idf       shift, and go to state 78
    inti      shift, and go to state 79
    real      shift, and go to state 80
    mc_call   shift, and go to state 81
    mc_true   shift, and go to state 82
    mc_false  shift, and go to state 83
    po        shift, and go to state 85

    EXPRE    go to state 102
    EXPREt   go to state 87
    TERM     go to state 88
    FACTOR   go to state 89
    OPERAND  go to state 90
    LOGI     go to state 91
    CONDIT   go to state 169


state 140

   78 A_if: mc_if po CONDI pf .

    $default  reduce using rule 78 (A_if)


state 141

   71 ens_list_var: po list_var pf .

    $default  reduce using rule 71 (ens_list_var)


state 142

   72 list_var: list_var verg . var

    idf  shift, and go to state 26

    var  go to state 170


state 143

   70 ens_list_var: ens_list_var verg po . list_var pf

    idf  shift, and go to state 26

    list_var  go to state 171
    var       go to state 106


state 144

   81 assignment: var aff valeur pvg .

    $default  reduce using rule 81 (assignment)


state 145

   91 B_while: A_while po CONDI pf .

    $default  reduce using rule 91 (B_while)


state 146

    8 FCT: TYPE mc_rtin idf po IDFS pf DECS ENSINST . assignment mc_endr
   59 ENSINST: ENSINST . INST

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    INST               go to state 68
    eqival_statement   go to state 36
    var                go to state 37
    if_statement       go to state 38
    B_if               go to state 39
    A_if               go to state 40
    assignment         go to state 172
    read_statement     go to state 42
    write_statement    go to state 43
    dowhile_statement  go to state 44
    B_while            go to state 45
    A_while            go to state 46


state 147

    9 FCT: TYPE mc_rtin idf po IDFS pf DECS assignment . mc_endr
   65 INST: assignment .

    mc_endr  shift, and go to state 173

    $default  reduce using rule 65 (INST)


state 148

   26 TAILLE: TAILLE . verg inti
   47 OPERAND: idf po TAILLE . pf

    pf    shift, and go to state 174
    verg  shift, and go to state 134


state 149

   48 OPERAND: mc_call idf po . ENSpara pf

    idf       shift, and go to state 78
    inti      shift, and go to state 79
    real      shift, and go to state 80
    mc_call   shift, and go to state 81
    mc_true   shift, and go to state 82
    mc_false  shift, and go to state 83
    str       shift, and go to state 84
    po        shift, and go to state 85

    EXPRE    go to state 86
    EXPREt   go to state 87
    TERM     go to state 88
    FACTOR   go to state 89
    OPERAND  go to state 90
    ENSpara  go to state 175
    LOGI     go to state 91
    valeur   go to state 176


state 150

   41 FACTOR: po EXPRE pf .

    $default  reduce using rule 41 (FACTOR)


state 151

   30 EXPRE: EXPRE ge EXPREt .
   35 EXPREt: EXPREt . add TERM
   36       | EXPREt . sub TERM

    add  shift, and go to state 126
    sub  shift, and go to state 127

    $default  reduce using rule 30 (EXPRE)


state 152

   31 EXPRE: EXPRE eq EXPREt .
   35 EXPREt: EXPREt . add TERM
   36       | EXPREt . sub TERM

    add  shift, and go to state 126
    sub  shift, and go to state 127

    $default  reduce using rule 31 (EXPRE)


state 153

   32 EXPRE: EXPRE ne EXPREt .
   35 EXPREt: EXPREt . add TERM
   36       | EXPREt . sub TERM

    add  shift, and go to state 126
    sub  shift, and go to state 127

    $default  reduce using rule 32 (EXPRE)


state 154

   33 EXPRE: EXPRE le EXPREt .
   35 EXPREt: EXPREt . add TERM
   36       | EXPREt . sub TERM

    add  shift, and go to state 126
    sub  shift, and go to state 127

    $default  reduce using rule 33 (EXPRE)


state 155

   28 EXPRE: EXPRE lt EXPREt .
   35 EXPREt: EXPREt . add TERM
   36       | EXPREt . sub TERM

    add  shift, and go to state 126
    sub  shift, and go to state 127

    $default  reduce using rule 28 (EXPRE)


state 156

   29 EXPRE: EXPRE gt EXPREt .
   35 EXPREt: EXPREt . add TERM
   36       | EXPREt . sub TERM

    add  shift, and go to state 126
    sub  shift, and go to state 127

    $default  reduce using rule 29 (EXPRE)


state 157

   35 EXPREt: EXPREt add TERM .
   38 TERM: TERM . mul FACTOR
   39     | TERM . divi FACTOR

    mul   shift, and go to state 128
    divi  shift, and go to state 129

    $default  reduce using rule 35 (EXPREt)


state 158

   36 EXPREt: EXPREt sub TERM .
   38 TERM: TERM . mul FACTOR
   39     | TERM . divi FACTOR

    mul   shift, and go to state 128
    divi  shift, and go to state 129

    $default  reduce using rule 36 (EXPREt)


state 159

   38 TERM: TERM mul FACTOR .

    $default  reduce using rule 38 (TERM)


state 160

   39 TERM: TERM divi FACTOR .

    $default  reduce using rule 39 (TERM)


state 161

   21 DEC: TYPE idf mc_dim po TAILLE pf . pvg

    pvg  shift, and go to state 177


state 162

   20 DEC: TYPE idf $@1 mul inti pvg .

    $default  reduce using rule 20 (DEC)


state 163

   26 TAILLE: TAILLE verg inti .

    $default  reduce using rule 26 (TAILLE)


state 164

   84 read_statement: mc_read po var pf pvg .

    $default  reduce using rule 84 (read_statement)


state 165

   85 write_statement: mc_write po ENS_PARA_WRITE pf pvg .

    $default  reduce using rule 85 (write_statement)


state 166

   86 ENS_PARA_WRITE: ENS_PARA_WRITE verg str .

    $default  reduce using rule 86 (ENS_PARA_WRITE)


state 167

   87 ENS_PARA_WRITE: ENS_PARA_WRITE verg var .

    $default  reduce using rule 87 (ENS_PARA_WRITE)


state 168

   93 CONDI: CONDI . mc_or CONDI
   93      | CONDI mc_or CONDI .
   94      | CONDI . mc_and CONDIT

    $default  reduce using rule 93 (CONDI)


state 169

   94 CONDI: CONDI mc_and CONDIT .

    $default  reduce using rule 94 (CONDI)


state 170

   72 list_var: list_var verg var .

    $default  reduce using rule 72 (list_var)


state 171

   70 ens_list_var: ens_list_var verg po list_var . pf
   72 list_var: list_var . verg var

    pf    shift, and go to state 178
    verg  shift, and go to state 142


state 172

    8 FCT: TYPE mc_rtin idf po IDFS pf DECS ENSINST assignment . mc_endr
   65 INST: assignment .

    mc_endr  shift, and go to state 179

    $default  reduce using rule 65 (INST)


state 173

    9 FCT: TYPE mc_rtin idf po IDFS pf DECS assignment mc_endr .

    $default  reduce using rule 9 (FCT)


state 174

   47 OPERAND: idf po TAILLE pf .

    $default  reduce using rule 47 (OPERAND)


state 175

   48 OPERAND: mc_call idf po ENSpara . pf
   49 ENSpara: ENSpara . verg valeur

    pf    shift, and go to state 180
    verg  shift, and go to state 181


state 176

   50 ENSpara: valeur .

    $default  reduce using rule 50 (ENSpara)


state 177

   21 DEC: TYPE idf mc_dim po TAILLE pf pvg .

    $default  reduce using rule 21 (DEC)


state 178

   70 ens_list_var: ens_list_var verg po list_var pf .

    $default  reduce using rule 70 (ens_list_var)


state 179

    8 FCT: TYPE mc_rtin idf po IDFS pf DECS ENSINST assignment mc_endr .

    $default  reduce using rule 8 (FCT)


state 180

   48 OPERAND: mc_call idf po ENSpara pf .

    $default  reduce using rule 48 (OPERAND)


state 181

   49 ENSpara: ENSpara verg . valeur

    idf       shift, and go to state 78
    inti      shift, and go to state 79
    real      shift, and go to state 80
    mc_call   shift, and go to state 81
    mc_true   shift, and go to state 82
    mc_false  shift, and go to state 83
    str       shift, and go to state 84
    po        shift, and go to state 85

    EXPRE    go to state 86
    EXPREt   go to state 87
    TERM     go to state 88
    FACTOR   go to state 89
    OPERAND  go to state 90
    LOGI     go to state 91
    valeur   go to state 182


state 182

   49 ENSpara: ENSpara verg valeur .

    $default  reduce using rule 49 (ENSpara)
