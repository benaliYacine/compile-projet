Terminals unused in grammar

   virg
   err


Grammar

    0 $accept: s $end

    1 s: idf mc_data DECS mc_end mc_code INSTS mc_end mc_end

    2 VIDE: /* empty */

    3 TYPE: mc_integer
    4     | mc_float
    5     | mc_char
    6     | mc_logi
    7     | mc_string

    8 DECS: VIDE
    9     | ENSDEC

   10 ENSDEC: ENSDEC DEC
   11       | DEC

   12 DEC: TYPE deux_points ENSIDF_dec pvg
   13    | mc_const deux_points idf partie_gauch_affectation pvg
   14    | mc_vector deux_points idf crochet_ouv TAILLE deux_points TYPE crochet_ferm pvg

   15 partie_gauch_affectation: aff valeur
   16                         | VIDE

   17 ENSIDF_dec: ENSIDF_dec barre idf partie_gauch_affectation
   18           | idf partie_gauch_affectation

   19 EXPRE: EXPRE mc_or CONDIT
   20      | EXPRE mc_and CONDIT
   21      | CONDIT

   22 CONDIT: CONDIT mc_l EXPREt
   23       | CONDIT mc_g EXPREt
   24       | CONDIT mc_ge EXPREt
   25       | CONDIT mc_eq EXPREt
   26       | CONDIT mc_di EXPREt
   27       | CONDIT mc_le EXPREt
   28       | EXPREt

   29 EXPREt: EXPREt add TERM
   30       | EXPREt sub TERM
   31       | TERM

   32 TERM: TERM mul FACTOR
   33     | TERM divi FACTOR
   34     | FACTOR

   35 FACTOR: po EXPRE pf
   36       | OPERAND
   37       | mc_not FACTOR

   38 OPERAND: idf
   39        | LOGI
   40        | inti
   41        | real
   42        | idf crochet_ouv TAILLE crochet_ferm

   43 TAILLE: TAILLE verg valeur
   44       | valeur

   45 LOGI: mc_true
   46     | mc_false

   47 INSTS: VIDE
   48      | ENSINST

   49 ENSINST: ENSINST INST
   50        | INST

   51 INST: if_statement
   52     | read_statement
   53     | write_statement
   54     | dowhile_statement
   55     | assignment
   56     | for_statement

   57 var: idf
   58    | idf po TAILLE pf

   59 if_statement: B_if else_clause mc_end

   60 B_if: A_if deux_points INSTS

   61 A_if: mc_if po CONDI pf

   62 else_clause: mc_else deux_points INSTS
   63            | VIDE

   64 assignment: var aff valeur pvg

   65 valeur: str
   66       | character
   67       | EXPRE

   68 read_statement: mc_read po str deux_points arobase var pf pvg

   69 write_statement: mc_display po str deux_points var pf pvg
   70                | mc_display po str pf pvg

   71 dowhile_statement: B_while INSTS mc_enddo

   72 B_while: A_while po CONDI pf

   73 A_while: mc_dowhile

   74 CONDI: EXPRE

   75 for_statement: A_for INSTS mc_end

   76 A_for: mc_for po idf deux_points valeur deux_points CONDI pf


Terminals, with rules where they appear

$end (0) 0
error (256)
idf (258) 1 13 14 17 18 38 42 57 58 76
str (259) 65 68 69 70
character (260) 66
inti (261) 40
real (262) 41
mc_logi (263) 6
mc_data (264) 1
mc_end (265) 1 59 75
mc_code (266) 1
mc_integer (267) 3
verg (268) 43
mc_float (269) 4
mc_char (270) 5
mc_string (271) 7
mc_const (272) 13
mc_vector (273) 14
mc_read (274) 68
mc_display (275) 69 70
mc_if (276) 61
mc_else (277) 62
mc_for (278) 76
mc_not (279) 37
mc_true (280) 45
mc_false (281) 46
mc_and (282) 20
mc_or (283) 19
mc_g (284) 23
mc_l (285) 22
mc_ge (286) 24
mc_le (287) 27
mc_eq (288) 25
mc_di (289) 26
add (290) 29
sub (291) 30
mul (292) 32
divi (293) 33
aff (294) 15 64
mc_dowhile (295) 73
mc_enddo (296) 71
pvg (297) 12 13 14 64 68 69 70
deux_points (298) 12 13 14 60 62 68 69 76
crochet_ouv (299) 14 42
crochet_ferm (300) 14 42
po (301) 35 58 61 68 69 70 72 76
pf (302) 35 58 61 68 69 70 72 76
virg (303)
barre (304) 17
arobase (305) 68
err (306)


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
s (53)
    on left: 1, on right: 0
VIDE (54)
    on left: 2, on right: 8 16 47 63
TYPE (55)
    on left: 3 4 5 6 7, on right: 12 14
DECS (56)
    on left: 8 9, on right: 1
ENSDEC (57)
    on left: 10 11, on right: 9 10
DEC (58)
    on left: 12 13 14, on right: 10 11
partie_gauch_affectation (59)
    on left: 15 16, on right: 13 17 18
ENSIDF_dec (60)
    on left: 17 18, on right: 12 17
EXPRE (61)
    on left: 19 20 21, on right: 19 20 35 67 74
CONDIT (62)
    on left: 22 23 24 25 26 27 28, on right: 19 20 21 22 23 24 25 26
    27
EXPREt (63)
    on left: 29 30 31, on right: 22 23 24 25 26 27 28 29 30
TERM (64)
    on left: 32 33 34, on right: 29 30 31 32 33
FACTOR (65)
    on left: 35 36 37, on right: 32 33 34 37
OPERAND (66)
    on left: 38 39 40 41 42, on right: 36
TAILLE (67)
    on left: 43 44, on right: 14 42 43 58
LOGI (68)
    on left: 45 46, on right: 39
INSTS (69)
    on left: 47 48, on right: 1 60 62 71 75
ENSINST (70)
    on left: 49 50, on right: 48 49
INST (71)
    on left: 51 52 53 54 55 56, on right: 49 50
var (72)
    on left: 57 58, on right: 64 68 69
if_statement (73)
    on left: 59, on right: 51
B_if (74)
    on left: 60, on right: 59
A_if (75)
    on left: 61, on right: 60
else_clause (76)
    on left: 62 63, on right: 59
assignment (77)
    on left: 64, on right: 55
valeur (78)
    on left: 65 66 67, on right: 15 43 44 64 76
read_statement (79)
    on left: 68, on right: 52
write_statement (80)
    on left: 69 70, on right: 53
dowhile_statement (81)
    on left: 71, on right: 54
B_while (82)
    on left: 72, on right: 71
A_while (83)
    on left: 73, on right: 72
CONDI (84)
    on left: 74, on right: 61 72 76
for_statement (85)
    on left: 75, on right: 56
A_for (86)
    on left: 76, on right: 75


state 0

    0 $accept: . s $end

    idf  shift, and go to state 1

    s  go to state 2


state 1

    1 s: idf . mc_data DECS mc_end mc_code INSTS mc_end mc_end

    mc_data  shift, and go to state 3


state 2

    0 $accept: s . $end

    $end  shift, and go to state 4


state 3

    1 s: idf mc_data . DECS mc_end mc_code INSTS mc_end mc_end

    mc_logi     shift, and go to state 5
    mc_integer  shift, and go to state 6
    mc_float    shift, and go to state 7
    mc_char     shift, and go to state 8
    mc_string   shift, and go to state 9
    mc_const    shift, and go to state 10
    mc_vector   shift, and go to state 11

    $default  reduce using rule 2 (VIDE)

    VIDE    go to state 12
    TYPE    go to state 13
    DECS    go to state 14
    ENSDEC  go to state 15
    DEC     go to state 16


state 4

    0 $accept: s $end .

    $default  accept


state 5

    6 TYPE: mc_logi .

    $default  reduce using rule 6 (TYPE)


state 6

    3 TYPE: mc_integer .

    $default  reduce using rule 3 (TYPE)


state 7

    4 TYPE: mc_float .

    $default  reduce using rule 4 (TYPE)


state 8

    5 TYPE: mc_char .

    $default  reduce using rule 5 (TYPE)


state 9

    7 TYPE: mc_string .

    $default  reduce using rule 7 (TYPE)


state 10

   13 DEC: mc_const . deux_points idf partie_gauch_affectation pvg

    deux_points  shift, and go to state 17


state 11

   14 DEC: mc_vector . deux_points idf crochet_ouv TAILLE deux_points TYPE crochet_ferm pvg

    deux_points  shift, and go to state 18


state 12

    8 DECS: VIDE .

    $default  reduce using rule 8 (DECS)


state 13

   12 DEC: TYPE . deux_points ENSIDF_dec pvg

    deux_points  shift, and go to state 19


state 14

    1 s: idf mc_data DECS . mc_end mc_code INSTS mc_end mc_end

    mc_end  shift, and go to state 20


state 15

    9 DECS: ENSDEC .
   10 ENSDEC: ENSDEC . DEC

    mc_logi     shift, and go to state 5
    mc_integer  shift, and go to state 6
    mc_float    shift, and go to state 7
    mc_char     shift, and go to state 8
    mc_string   shift, and go to state 9
    mc_const    shift, and go to state 10
    mc_vector   shift, and go to state 11

    $default  reduce using rule 9 (DECS)

    TYPE  go to state 13
    DEC   go to state 21


state 16

   11 ENSDEC: DEC .

    $default  reduce using rule 11 (ENSDEC)


state 17

   13 DEC: mc_const deux_points . idf partie_gauch_affectation pvg

    idf  shift, and go to state 22


state 18

   14 DEC: mc_vector deux_points . idf crochet_ouv TAILLE deux_points TYPE crochet_ferm pvg

    idf  shift, and go to state 23


state 19

   12 DEC: TYPE deux_points . ENSIDF_dec pvg

    idf  shift, and go to state 24

    ENSIDF_dec  go to state 25


state 20

    1 s: idf mc_data DECS mc_end . mc_code INSTS mc_end mc_end

    mc_code  shift, and go to state 26


state 21

   10 ENSDEC: ENSDEC DEC .

    $default  reduce using rule 10 (ENSDEC)


state 22

   13 DEC: mc_const deux_points idf . partie_gauch_affectation pvg

    aff  shift, and go to state 27

    $default  reduce using rule 2 (VIDE)

    VIDE                      go to state 28
    partie_gauch_affectation  go to state 29


state 23

   14 DEC: mc_vector deux_points idf . crochet_ouv TAILLE deux_points TYPE crochet_ferm pvg

    crochet_ouv  shift, and go to state 30


state 24

   18 ENSIDF_dec: idf . partie_gauch_affectation

    aff  shift, and go to state 27

    $default  reduce using rule 2 (VIDE)

    VIDE                      go to state 28
    partie_gauch_affectation  go to state 31


state 25

   12 DEC: TYPE deux_points ENSIDF_dec . pvg
   17 ENSIDF_dec: ENSIDF_dec . barre idf partie_gauch_affectation

    pvg    shift, and go to state 32
    barre  shift, and go to state 33


state 26

    1 s: idf mc_data DECS mc_end mc_code . INSTS mc_end mc_end

    idf         shift, and go to state 34
    mc_read     shift, and go to state 35
    mc_display  shift, and go to state 36
    mc_if       shift, and go to state 37
    mc_for      shift, and go to state 38
    mc_dowhile  shift, and go to state 39

    $default  reduce using rule 2 (VIDE)

    VIDE               go to state 40
    INSTS              go to state 41
    ENSINST            go to state 42
    INST               go to state 43
    var                go to state 44
    if_statement       go to state 45
    B_if               go to state 46
    A_if               go to state 47
    assignment         go to state 48
    read_statement     go to state 49
    write_statement    go to state 50
    dowhile_statement  go to state 51
    B_while            go to state 52
    A_while            go to state 53
    for_statement      go to state 54
    A_for              go to state 55


state 27

   15 partie_gauch_affectation: aff . valeur

    idf        shift, and go to state 56
    str        shift, and go to state 57
    character  shift, and go to state 58
    inti       shift, and go to state 59
    real       shift, and go to state 60
    mc_not     shift, and go to state 61
    mc_true    shift, and go to state 62
    mc_false   shift, and go to state 63
    po         shift, and go to state 64

    EXPRE    go to state 65
    CONDIT   go to state 66
    EXPREt   go to state 67
    TERM     go to state 68
    FACTOR   go to state 69
    OPERAND  go to state 70
    LOGI     go to state 71
    valeur   go to state 72


state 28

   16 partie_gauch_affectation: VIDE .

    $default  reduce using rule 16 (partie_gauch_affectation)


state 29

   13 DEC: mc_const deux_points idf partie_gauch_affectation . pvg

    pvg  shift, and go to state 73


state 30

   14 DEC: mc_vector deux_points idf crochet_ouv . TAILLE deux_points TYPE crochet_ferm pvg

    idf        shift, and go to state 56
    str        shift, and go to state 57
    character  shift, and go to state 58
    inti       shift, and go to state 59
    real       shift, and go to state 60
    mc_not     shift, and go to state 61
    mc_true    shift, and go to state 62
    mc_false   shift, and go to state 63
    po         shift, and go to state 64

    EXPRE    go to state 65
    CONDIT   go to state 66
    EXPREt   go to state 67
    TERM     go to state 68
    FACTOR   go to state 69
    OPERAND  go to state 70
    TAILLE   go to state 74
    LOGI     go to state 71
    valeur   go to state 75


state 31

   18 ENSIDF_dec: idf partie_gauch_affectation .

    $default  reduce using rule 18 (ENSIDF_dec)


state 32

   12 DEC: TYPE deux_points ENSIDF_dec pvg .

    $default  reduce using rule 12 (DEC)


state 33

   17 ENSIDF_dec: ENSIDF_dec barre . idf partie_gauch_affectation

    idf  shift, and go to state 76


state 34

   57 var: idf .
   58    | idf . po TAILLE pf

    po  shift, and go to state 77

    $default  reduce using rule 57 (var)


state 35

   68 read_statement: mc_read . po str deux_points arobase var pf pvg

    po  shift, and go to state 78


state 36

   69 write_statement: mc_display . po str deux_points var pf pvg
   70                | mc_display . po str pf pvg

    po  shift, and go to state 79


state 37

   61 A_if: mc_if . po CONDI pf

    po  shift, and go to state 80


state 38

   76 A_for: mc_for . po idf deux_points valeur deux_points CONDI pf

    po  shift, and go to state 81


state 39

   73 A_while: mc_dowhile .

    $default  reduce using rule 73 (A_while)


state 40

   47 INSTS: VIDE .

    $default  reduce using rule 47 (INSTS)


state 41

    1 s: idf mc_data DECS mc_end mc_code INSTS . mc_end mc_end

    mc_end  shift, and go to state 82


state 42

   48 INSTS: ENSINST .
   49 ENSINST: ENSINST . INST

    idf         shift, and go to state 34
    mc_read     shift, and go to state 35
    mc_display  shift, and go to state 36
    mc_if       shift, and go to state 37
    mc_for      shift, and go to state 38
    mc_dowhile  shift, and go to state 39

    $default  reduce using rule 48 (INSTS)

    INST               go to state 83
    var                go to state 44
    if_statement       go to state 45
    B_if               go to state 46
    A_if               go to state 47
    assignment         go to state 48
    read_statement     go to state 49
    write_statement    go to state 50
    dowhile_statement  go to state 51
    B_while            go to state 52
    A_while            go to state 53
    for_statement      go to state 54
    A_for              go to state 55


state 43

   50 ENSINST: INST .

    $default  reduce using rule 50 (ENSINST)


state 44

   64 assignment: var . aff valeur pvg

    aff  shift, and go to state 84


state 45

   51 INST: if_statement .

    $default  reduce using rule 51 (INST)


state 46

   59 if_statement: B_if . else_clause mc_end

    mc_else  shift, and go to state 85

    $default  reduce using rule 2 (VIDE)

    VIDE         go to state 86
    else_clause  go to state 87


state 47

   60 B_if: A_if . deux_points INSTS

    deux_points  shift, and go to state 88


state 48

   55 INST: assignment .

    $default  reduce using rule 55 (INST)


state 49

   52 INST: read_statement .

    $default  reduce using rule 52 (INST)


state 50

   53 INST: write_statement .

    $default  reduce using rule 53 (INST)


state 51

   54 INST: dowhile_statement .

    $default  reduce using rule 54 (INST)


state 52

   71 dowhile_statement: B_while . INSTS mc_enddo

    idf         shift, and go to state 34
    mc_read     shift, and go to state 35
    mc_display  shift, and go to state 36
    mc_if       shift, and go to state 37
    mc_for      shift, and go to state 38
    mc_dowhile  shift, and go to state 39

    $default  reduce using rule 2 (VIDE)

    VIDE               go to state 40
    INSTS              go to state 89
    ENSINST            go to state 42
    INST               go to state 43
    var                go to state 44
    if_statement       go to state 45
    B_if               go to state 46
    A_if               go to state 47
    assignment         go to state 48
    read_statement     go to state 49
    write_statement    go to state 50
    dowhile_statement  go to state 51
    B_while            go to state 52
    A_while            go to state 53
    for_statement      go to state 54
    A_for              go to state 55


state 53

   72 B_while: A_while . po CONDI pf

    po  shift, and go to state 90


state 54

   56 INST: for_statement .

    $default  reduce using rule 56 (INST)


state 55

   75 for_statement: A_for . INSTS mc_end

    idf         shift, and go to state 34
    mc_read     shift, and go to state 35
    mc_display  shift, and go to state 36
    mc_if       shift, and go to state 37
    mc_for      shift, and go to state 38
    mc_dowhile  shift, and go to state 39

    $default  reduce using rule 2 (VIDE)

    VIDE               go to state 40
    INSTS              go to state 91
    ENSINST            go to state 42
    INST               go to state 43
    var                go to state 44
    if_statement       go to state 45
    B_if               go to state 46
    A_if               go to state 47
    assignment         go to state 48
    read_statement     go to state 49
    write_statement    go to state 50
    dowhile_statement  go to state 51
    B_while            go to state 52
    A_while            go to state 53
    for_statement      go to state 54
    A_for              go to state 55


state 56

   38 OPERAND: idf .
   42        | idf . crochet_ouv TAILLE crochet_ferm

    crochet_ouv  shift, and go to state 92

    $default  reduce using rule 38 (OPERAND)


state 57

   65 valeur: str .

    $default  reduce using rule 65 (valeur)


state 58

   66 valeur: character .

    $default  reduce using rule 66 (valeur)


state 59

   40 OPERAND: inti .

    $default  reduce using rule 40 (OPERAND)


state 60

   41 OPERAND: real .

    $default  reduce using rule 41 (OPERAND)


state 61

   37 FACTOR: mc_not . FACTOR

    idf       shift, and go to state 56
    inti      shift, and go to state 59
    real      shift, and go to state 60
    mc_not    shift, and go to state 61
    mc_true   shift, and go to state 62
    mc_false  shift, and go to state 63
    po        shift, and go to state 64

    FACTOR   go to state 93
    OPERAND  go to state 70
    LOGI     go to state 71


state 62

   45 LOGI: mc_true .

    $default  reduce using rule 45 (LOGI)


state 63

   46 LOGI: mc_false .

    $default  reduce using rule 46 (LOGI)


state 64

   35 FACTOR: po . EXPRE pf

    idf       shift, and go to state 56
    inti      shift, and go to state 59
    real      shift, and go to state 60
    mc_not    shift, and go to state 61
    mc_true   shift, and go to state 62
    mc_false  shift, and go to state 63
    po        shift, and go to state 64

    EXPRE    go to state 94
    CONDIT   go to state 66
    EXPREt   go to state 67
    TERM     go to state 68
    FACTOR   go to state 69
    OPERAND  go to state 70
    LOGI     go to state 71


state 65

   19 EXPRE: EXPRE . mc_or CONDIT
   20      | EXPRE . mc_and CONDIT
   67 valeur: EXPRE .

    mc_and  shift, and go to state 95
    mc_or   shift, and go to state 96

    $default  reduce using rule 67 (valeur)


state 66

   21 EXPRE: CONDIT .
   22 CONDIT: CONDIT . mc_l EXPREt
   23       | CONDIT . mc_g EXPREt
   24       | CONDIT . mc_ge EXPREt
   25       | CONDIT . mc_eq EXPREt
   26       | CONDIT . mc_di EXPREt
   27       | CONDIT . mc_le EXPREt

    mc_g   shift, and go to state 97
    mc_l   shift, and go to state 98
    mc_ge  shift, and go to state 99
    mc_le  shift, and go to state 100
    mc_eq  shift, and go to state 101
    mc_di  shift, and go to state 102

    $default  reduce using rule 21 (EXPRE)


state 67

   28 CONDIT: EXPREt .
   29 EXPREt: EXPREt . add TERM
   30       | EXPREt . sub TERM

    add  shift, and go to state 103
    sub  shift, and go to state 104

    $default  reduce using rule 28 (CONDIT)


state 68

   31 EXPREt: TERM .
   32 TERM: TERM . mul FACTOR
   33     | TERM . divi FACTOR

    mul   shift, and go to state 105
    divi  shift, and go to state 106

    $default  reduce using rule 31 (EXPREt)


state 69

   34 TERM: FACTOR .

    $default  reduce using rule 34 (TERM)


state 70

   36 FACTOR: OPERAND .

    $default  reduce using rule 36 (FACTOR)


state 71

   39 OPERAND: LOGI .

    $default  reduce using rule 39 (OPERAND)


state 72

   15 partie_gauch_affectation: aff valeur .

    $default  reduce using rule 15 (partie_gauch_affectation)


state 73

   13 DEC: mc_const deux_points idf partie_gauch_affectation pvg .

    $default  reduce using rule 13 (DEC)


state 74

   14 DEC: mc_vector deux_points idf crochet_ouv TAILLE . deux_points TYPE crochet_ferm pvg
   43 TAILLE: TAILLE . verg valeur

    verg         shift, and go to state 107
    deux_points  shift, and go to state 108


state 75

   44 TAILLE: valeur .

    $default  reduce using rule 44 (TAILLE)


state 76

   17 ENSIDF_dec: ENSIDF_dec barre idf . partie_gauch_affectation

    aff  shift, and go to state 27

    $default  reduce using rule 2 (VIDE)

    VIDE                      go to state 28
    partie_gauch_affectation  go to state 109


state 77

   58 var: idf po . TAILLE pf

    idf        shift, and go to state 56
    str        shift, and go to state 57
    character  shift, and go to state 58
    inti       shift, and go to state 59
    real       shift, and go to state 60
    mc_not     shift, and go to state 61
    mc_true    shift, and go to state 62
    mc_false   shift, and go to state 63
    po         shift, and go to state 64

    EXPRE    go to state 65
    CONDIT   go to state 66
    EXPREt   go to state 67
    TERM     go to state 68
    FACTOR   go to state 69
    OPERAND  go to state 70
    TAILLE   go to state 110
    LOGI     go to state 71
    valeur   go to state 75


state 78

   68 read_statement: mc_read po . str deux_points arobase var pf pvg

    str  shift, and go to state 111


state 79

   69 write_statement: mc_display po . str deux_points var pf pvg
   70                | mc_display po . str pf pvg

    str  shift, and go to state 112


state 80

   61 A_if: mc_if po . CONDI pf

    idf       shift, and go to state 56
    inti      shift, and go to state 59
    real      shift, and go to state 60
    mc_not    shift, and go to state 61
    mc_true   shift, and go to state 62
    mc_false  shift, and go to state 63
    po        shift, and go to state 64

    EXPRE    go to state 113
    CONDIT   go to state 66
    EXPREt   go to state 67
    TERM     go to state 68
    FACTOR   go to state 69
    OPERAND  go to state 70
    LOGI     go to state 71
    CONDI    go to state 114


state 81

   76 A_for: mc_for po . idf deux_points valeur deux_points CONDI pf

    idf  shift, and go to state 115


state 82

    1 s: idf mc_data DECS mc_end mc_code INSTS mc_end . mc_end

    mc_end  shift, and go to state 116


state 83

   49 ENSINST: ENSINST INST .

    $default  reduce using rule 49 (ENSINST)


state 84

   64 assignment: var aff . valeur pvg

    idf        shift, and go to state 56
    str        shift, and go to state 57
    character  shift, and go to state 58
    inti       shift, and go to state 59
    real       shift, and go to state 60
    mc_not     shift, and go to state 61
    mc_true    shift, and go to state 62
    mc_false   shift, and go to state 63
    po         shift, and go to state 64

    EXPRE    go to state 65
    CONDIT   go to state 66
    EXPREt   go to state 67
    TERM     go to state 68
    FACTOR   go to state 69
    OPERAND  go to state 70
    LOGI     go to state 71
    valeur   go to state 117


state 85

   62 else_clause: mc_else . deux_points INSTS

    deux_points  shift, and go to state 118


state 86

   63 else_clause: VIDE .

    $default  reduce using rule 63 (else_clause)


state 87

   59 if_statement: B_if else_clause . mc_end

    mc_end  shift, and go to state 119


state 88

   60 B_if: A_if deux_points . INSTS

    idf         shift, and go to state 34
    mc_read     shift, and go to state 35
    mc_display  shift, and go to state 36
    mc_if       shift, and go to state 37
    mc_for      shift, and go to state 38
    mc_dowhile  shift, and go to state 39

    $default  reduce using rule 2 (VIDE)

    VIDE               go to state 40
    INSTS              go to state 120
    ENSINST            go to state 42
    INST               go to state 43
    var                go to state 44
    if_statement       go to state 45
    B_if               go to state 46
    A_if               go to state 47
    assignment         go to state 48
    read_statement     go to state 49
    write_statement    go to state 50
    dowhile_statement  go to state 51
    B_while            go to state 52
    A_while            go to state 53
    for_statement      go to state 54
    A_for              go to state 55


state 89

   71 dowhile_statement: B_while INSTS . mc_enddo

    mc_enddo  shift, and go to state 121


state 90

   72 B_while: A_while po . CONDI pf

    idf       shift, and go to state 56
    inti      shift, and go to state 59
    real      shift, and go to state 60
    mc_not    shift, and go to state 61
    mc_true   shift, and go to state 62
    mc_false  shift, and go to state 63
    po        shift, and go to state 64

    EXPRE    go to state 113
    CONDIT   go to state 66
    EXPREt   go to state 67
    TERM     go to state 68
    FACTOR   go to state 69
    OPERAND  go to state 70
    LOGI     go to state 71
    CONDI    go to state 122


state 91

   75 for_statement: A_for INSTS . mc_end

    mc_end  shift, and go to state 123


state 92

   42 OPERAND: idf crochet_ouv . TAILLE crochet_ferm

    idf        shift, and go to state 56
    str        shift, and go to state 57
    character  shift, and go to state 58
    inti       shift, and go to state 59
    real       shift, and go to state 60
    mc_not     shift, and go to state 61
    mc_true    shift, and go to state 62
    mc_false   shift, and go to state 63
    po         shift, and go to state 64

    EXPRE    go to state 65
    CONDIT   go to state 66
    EXPREt   go to state 67
    TERM     go to state 68
    FACTOR   go to state 69
    OPERAND  go to state 70
    TAILLE   go to state 124
    LOGI     go to state 71
    valeur   go to state 75


state 93

   37 FACTOR: mc_not FACTOR .

    $default  reduce using rule 37 (FACTOR)


state 94

   19 EXPRE: EXPRE . mc_or CONDIT
   20      | EXPRE . mc_and CONDIT
   35 FACTOR: po EXPRE . pf

    mc_and  shift, and go to state 95
    mc_or   shift, and go to state 96
    pf      shift, and go to state 125


state 95

   20 EXPRE: EXPRE mc_and . CONDIT

    idf       shift, and go to state 56
    inti      shift, and go to state 59
    real      shift, and go to state 60
    mc_not    shift, and go to state 61
    mc_true   shift, and go to state 62
    mc_false  shift, and go to state 63
    po        shift, and go to state 64

    CONDIT   go to state 126
    EXPREt   go to state 67
    TERM     go to state 68
    FACTOR   go to state 69
    OPERAND  go to state 70
    LOGI     go to state 71


state 96

   19 EXPRE: EXPRE mc_or . CONDIT

    idf       shift, and go to state 56
    inti      shift, and go to state 59
    real      shift, and go to state 60
    mc_not    shift, and go to state 61
    mc_true   shift, and go to state 62
    mc_false  shift, and go to state 63
    po        shift, and go to state 64

    CONDIT   go to state 127
    EXPREt   go to state 67
    TERM     go to state 68
    FACTOR   go to state 69
    OPERAND  go to state 70
    LOGI     go to state 71


state 97

   23 CONDIT: CONDIT mc_g . EXPREt

    idf       shift, and go to state 56
    inti      shift, and go to state 59
    real      shift, and go to state 60
    mc_not    shift, and go to state 61
    mc_true   shift, and go to state 62
    mc_false  shift, and go to state 63
    po        shift, and go to state 64

    EXPREt   go to state 128
    TERM     go to state 68
    FACTOR   go to state 69
    OPERAND  go to state 70
    LOGI     go to state 71


state 98

   22 CONDIT: CONDIT mc_l . EXPREt

    idf       shift, and go to state 56
    inti      shift, and go to state 59
    real      shift, and go to state 60
    mc_not    shift, and go to state 61
    mc_true   shift, and go to state 62
    mc_false  shift, and go to state 63
    po        shift, and go to state 64

    EXPREt   go to state 129
    TERM     go to state 68
    FACTOR   go to state 69
    OPERAND  go to state 70
    LOGI     go to state 71


state 99

   24 CONDIT: CONDIT mc_ge . EXPREt

    idf       shift, and go to state 56
    inti      shift, and go to state 59
    real      shift, and go to state 60
    mc_not    shift, and go to state 61
    mc_true   shift, and go to state 62
    mc_false  shift, and go to state 63
    po        shift, and go to state 64

    EXPREt   go to state 130
    TERM     go to state 68
    FACTOR   go to state 69
    OPERAND  go to state 70
    LOGI     go to state 71


state 100

   27 CONDIT: CONDIT mc_le . EXPREt

    idf       shift, and go to state 56
    inti      shift, and go to state 59
    real      shift, and go to state 60
    mc_not    shift, and go to state 61
    mc_true   shift, and go to state 62
    mc_false  shift, and go to state 63
    po        shift, and go to state 64

    EXPREt   go to state 131
    TERM     go to state 68
    FACTOR   go to state 69
    OPERAND  go to state 70
    LOGI     go to state 71


state 101

   25 CONDIT: CONDIT mc_eq . EXPREt

    idf       shift, and go to state 56
    inti      shift, and go to state 59
    real      shift, and go to state 60
    mc_not    shift, and go to state 61
    mc_true   shift, and go to state 62
    mc_false  shift, and go to state 63
    po        shift, and go to state 64

    EXPREt   go to state 132
    TERM     go to state 68
    FACTOR   go to state 69
    OPERAND  go to state 70
    LOGI     go to state 71


state 102

   26 CONDIT: CONDIT mc_di . EXPREt

    idf       shift, and go to state 56
    inti      shift, and go to state 59
    real      shift, and go to state 60
    mc_not    shift, and go to state 61
    mc_true   shift, and go to state 62
    mc_false  shift, and go to state 63
    po        shift, and go to state 64

    EXPREt   go to state 133
    TERM     go to state 68
    FACTOR   go to state 69
    OPERAND  go to state 70
    LOGI     go to state 71


state 103

   29 EXPREt: EXPREt add . TERM

    idf       shift, and go to state 56
    inti      shift, and go to state 59
    real      shift, and go to state 60
    mc_not    shift, and go to state 61
    mc_true   shift, and go to state 62
    mc_false  shift, and go to state 63
    po        shift, and go to state 64

    TERM     go to state 134
    FACTOR   go to state 69
    OPERAND  go to state 70
    LOGI     go to state 71


state 104

   30 EXPREt: EXPREt sub . TERM

    idf       shift, and go to state 56
    inti      shift, and go to state 59
    real      shift, and go to state 60
    mc_not    shift, and go to state 61
    mc_true   shift, and go to state 62
    mc_false  shift, and go to state 63
    po        shift, and go to state 64

    TERM     go to state 135
    FACTOR   go to state 69
    OPERAND  go to state 70
    LOGI     go to state 71


state 105

   32 TERM: TERM mul . FACTOR

    idf       shift, and go to state 56
    inti      shift, and go to state 59
    real      shift, and go to state 60
    mc_not    shift, and go to state 61
    mc_true   shift, and go to state 62
    mc_false  shift, and go to state 63
    po        shift, and go to state 64

    FACTOR   go to state 136
    OPERAND  go to state 70
    LOGI     go to state 71


state 106

   33 TERM: TERM divi . FACTOR

    idf       shift, and go to state 56
    inti      shift, and go to state 59
    real      shift, and go to state 60
    mc_not    shift, and go to state 61
    mc_true   shift, and go to state 62
    mc_false  shift, and go to state 63
    po        shift, and go to state 64

    FACTOR   go to state 137
    OPERAND  go to state 70
    LOGI     go to state 71


state 107

   43 TAILLE: TAILLE verg . valeur

    idf        shift, and go to state 56
    str        shift, and go to state 57
    character  shift, and go to state 58
    inti       shift, and go to state 59
    real       shift, and go to state 60
    mc_not     shift, and go to state 61
    mc_true    shift, and go to state 62
    mc_false   shift, and go to state 63
    po         shift, and go to state 64

    EXPRE    go to state 65
    CONDIT   go to state 66
    EXPREt   go to state 67
    TERM     go to state 68
    FACTOR   go to state 69
    OPERAND  go to state 70
    LOGI     go to state 71
    valeur   go to state 138


state 108

   14 DEC: mc_vector deux_points idf crochet_ouv TAILLE deux_points . TYPE crochet_ferm pvg

    mc_logi     shift, and go to state 5
    mc_integer  shift, and go to state 6
    mc_float    shift, and go to state 7
    mc_char     shift, and go to state 8
    mc_string   shift, and go to state 9

    TYPE  go to state 139


state 109

   17 ENSIDF_dec: ENSIDF_dec barre idf partie_gauch_affectation .

    $default  reduce using rule 17 (ENSIDF_dec)


state 110

   43 TAILLE: TAILLE . verg valeur
   58 var: idf po TAILLE . pf

    verg  shift, and go to state 107
    pf    shift, and go to state 140


state 111

   68 read_statement: mc_read po str . deux_points arobase var pf pvg

    deux_points  shift, and go to state 141


state 112

   69 write_statement: mc_display po str . deux_points var pf pvg
   70                | mc_display po str . pf pvg

    deux_points  shift, and go to state 142
    pf           shift, and go to state 143


state 113

   19 EXPRE: EXPRE . mc_or CONDIT
   20      | EXPRE . mc_and CONDIT
   74 CONDI: EXPRE .

    mc_and  shift, and go to state 95
    mc_or   shift, and go to state 96

    $default  reduce using rule 74 (CONDI)


state 114

   61 A_if: mc_if po CONDI . pf

    pf  shift, and go to state 144


state 115

   76 A_for: mc_for po idf . deux_points valeur deux_points CONDI pf

    deux_points  shift, and go to state 145


state 116

    1 s: idf mc_data DECS mc_end mc_code INSTS mc_end mc_end .

    $default  reduce using rule 1 (s)


state 117

   64 assignment: var aff valeur . pvg

    pvg  shift, and go to state 146


state 118

   62 else_clause: mc_else deux_points . INSTS

    idf         shift, and go to state 34
    mc_read     shift, and go to state 35
    mc_display  shift, and go to state 36
    mc_if       shift, and go to state 37
    mc_for      shift, and go to state 38
    mc_dowhile  shift, and go to state 39

    $default  reduce using rule 2 (VIDE)

    VIDE               go to state 40
    INSTS              go to state 147
    ENSINST            go to state 42
    INST               go to state 43
    var                go to state 44
    if_statement       go to state 45
    B_if               go to state 46
    A_if               go to state 47
    assignment         go to state 48
    read_statement     go to state 49
    write_statement    go to state 50
    dowhile_statement  go to state 51
    B_while            go to state 52
    A_while            go to state 53
    for_statement      go to state 54
    A_for              go to state 55


state 119

   59 if_statement: B_if else_clause mc_end .

    $default  reduce using rule 59 (if_statement)


state 120

   60 B_if: A_if deux_points INSTS .

    $default  reduce using rule 60 (B_if)


state 121

   71 dowhile_statement: B_while INSTS mc_enddo .

    $default  reduce using rule 71 (dowhile_statement)


state 122

   72 B_while: A_while po CONDI . pf

    pf  shift, and go to state 148


state 123

   75 for_statement: A_for INSTS mc_end .

    $default  reduce using rule 75 (for_statement)


state 124

   42 OPERAND: idf crochet_ouv TAILLE . crochet_ferm
   43 TAILLE: TAILLE . verg valeur

    verg          shift, and go to state 107
    crochet_ferm  shift, and go to state 149


state 125

   35 FACTOR: po EXPRE pf .

    $default  reduce using rule 35 (FACTOR)


state 126

   20 EXPRE: EXPRE mc_and CONDIT .
   22 CONDIT: CONDIT . mc_l EXPREt
   23       | CONDIT . mc_g EXPREt
   24       | CONDIT . mc_ge EXPREt
   25       | CONDIT . mc_eq EXPREt
   26       | CONDIT . mc_di EXPREt
   27       | CONDIT . mc_le EXPREt

    mc_g   shift, and go to state 97
    mc_l   shift, and go to state 98
    mc_ge  shift, and go to state 99
    mc_le  shift, and go to state 100
    mc_eq  shift, and go to state 101
    mc_di  shift, and go to state 102

    $default  reduce using rule 20 (EXPRE)


state 127

   19 EXPRE: EXPRE mc_or CONDIT .
   22 CONDIT: CONDIT . mc_l EXPREt
   23       | CONDIT . mc_g EXPREt
   24       | CONDIT . mc_ge EXPREt
   25       | CONDIT . mc_eq EXPREt
   26       | CONDIT . mc_di EXPREt
   27       | CONDIT . mc_le EXPREt

    mc_g   shift, and go to state 97
    mc_l   shift, and go to state 98
    mc_ge  shift, and go to state 99
    mc_le  shift, and go to state 100
    mc_eq  shift, and go to state 101
    mc_di  shift, and go to state 102

    $default  reduce using rule 19 (EXPRE)


state 128

   23 CONDIT: CONDIT mc_g EXPREt .
   29 EXPREt: EXPREt . add TERM
   30       | EXPREt . sub TERM

    add  shift, and go to state 103
    sub  shift, and go to state 104

    $default  reduce using rule 23 (CONDIT)


state 129

   22 CONDIT: CONDIT mc_l EXPREt .
   29 EXPREt: EXPREt . add TERM
   30       | EXPREt . sub TERM

    add  shift, and go to state 103
    sub  shift, and go to state 104

    $default  reduce using rule 22 (CONDIT)


state 130

   24 CONDIT: CONDIT mc_ge EXPREt .
   29 EXPREt: EXPREt . add TERM
   30       | EXPREt . sub TERM

    add  shift, and go to state 103
    sub  shift, and go to state 104

    $default  reduce using rule 24 (CONDIT)


state 131

   27 CONDIT: CONDIT mc_le EXPREt .
   29 EXPREt: EXPREt . add TERM
   30       | EXPREt . sub TERM

    add  shift, and go to state 103
    sub  shift, and go to state 104

    $default  reduce using rule 27 (CONDIT)


state 132

   25 CONDIT: CONDIT mc_eq EXPREt .
   29 EXPREt: EXPREt . add TERM
   30       | EXPREt . sub TERM

    add  shift, and go to state 103
    sub  shift, and go to state 104

    $default  reduce using rule 25 (CONDIT)


state 133

   26 CONDIT: CONDIT mc_di EXPREt .
   29 EXPREt: EXPREt . add TERM
   30       | EXPREt . sub TERM

    add  shift, and go to state 103
    sub  shift, and go to state 104

    $default  reduce using rule 26 (CONDIT)


state 134

   29 EXPREt: EXPREt add TERM .
   32 TERM: TERM . mul FACTOR
   33     | TERM . divi FACTOR

    mul   shift, and go to state 105
    divi  shift, and go to state 106

    $default  reduce using rule 29 (EXPREt)


state 135

   30 EXPREt: EXPREt sub TERM .
   32 TERM: TERM . mul FACTOR
   33     | TERM . divi FACTOR

    mul   shift, and go to state 105
    divi  shift, and go to state 106

    $default  reduce using rule 30 (EXPREt)


state 136

   32 TERM: TERM mul FACTOR .

    $default  reduce using rule 32 (TERM)


state 137

   33 TERM: TERM divi FACTOR .

    $default  reduce using rule 33 (TERM)


state 138

   43 TAILLE: TAILLE verg valeur .

    $default  reduce using rule 43 (TAILLE)


state 139

   14 DEC: mc_vector deux_points idf crochet_ouv TAILLE deux_points TYPE . crochet_ferm pvg

    crochet_ferm  shift, and go to state 150


state 140

   58 var: idf po TAILLE pf .

    $default  reduce using rule 58 (var)


state 141

   68 read_statement: mc_read po str deux_points . arobase var pf pvg

    arobase  shift, and go to state 151


state 142

   69 write_statement: mc_display po str deux_points . var pf pvg

    idf  shift, and go to state 34

    var  go to state 152


state 143

   70 write_statement: mc_display po str pf . pvg

    pvg  shift, and go to state 153


state 144

   61 A_if: mc_if po CONDI pf .

    $default  reduce using rule 61 (A_if)


state 145

   76 A_for: mc_for po idf deux_points . valeur deux_points CONDI pf

    idf        shift, and go to state 56
    str        shift, and go to state 57
    character  shift, and go to state 58
    inti       shift, and go to state 59
    real       shift, and go to state 60
    mc_not     shift, and go to state 61
    mc_true    shift, and go to state 62
    mc_false   shift, and go to state 63
    po         shift, and go to state 64

    EXPRE    go to state 65
    CONDIT   go to state 66
    EXPREt   go to state 67
    TERM     go to state 68
    FACTOR   go to state 69
    OPERAND  go to state 70
    LOGI     go to state 71
    valeur   go to state 154


state 146

   64 assignment: var aff valeur pvg .

    $default  reduce using rule 64 (assignment)


state 147

   62 else_clause: mc_else deux_points INSTS .

    $default  reduce using rule 62 (else_clause)


state 148

   72 B_while: A_while po CONDI pf .

    $default  reduce using rule 72 (B_while)


state 149

   42 OPERAND: idf crochet_ouv TAILLE crochet_ferm .

    $default  reduce using rule 42 (OPERAND)


state 150

   14 DEC: mc_vector deux_points idf crochet_ouv TAILLE deux_points TYPE crochet_ferm . pvg

    pvg  shift, and go to state 155


state 151

   68 read_statement: mc_read po str deux_points arobase . var pf pvg

    idf  shift, and go to state 34

    var  go to state 156


state 152

   69 write_statement: mc_display po str deux_points var . pf pvg

    pf  shift, and go to state 157


state 153

   70 write_statement: mc_display po str pf pvg .

    $default  reduce using rule 70 (write_statement)


state 154

   76 A_for: mc_for po idf deux_points valeur . deux_points CONDI pf

    deux_points  shift, and go to state 158


state 155

   14 DEC: mc_vector deux_points idf crochet_ouv TAILLE deux_points TYPE crochet_ferm pvg .

    $default  reduce using rule 14 (DEC)


state 156

   68 read_statement: mc_read po str deux_points arobase var . pf pvg

    pf  shift, and go to state 159


state 157

   69 write_statement: mc_display po str deux_points var pf . pvg

    pvg  shift, and go to state 160


state 158

   76 A_for: mc_for po idf deux_points valeur deux_points . CONDI pf

    idf       shift, and go to state 56
    inti      shift, and go to state 59
    real      shift, and go to state 60
    mc_not    shift, and go to state 61
    mc_true   shift, and go to state 62
    mc_false  shift, and go to state 63
    po        shift, and go to state 64

    EXPRE    go to state 113
    CONDIT   go to state 66
    EXPREt   go to state 67
    TERM     go to state 68
    FACTOR   go to state 69
    OPERAND  go to state 70
    LOGI     go to state 71
    CONDI    go to state 161


state 159

   68 read_statement: mc_read po str deux_points arobase var pf . pvg

    pvg  shift, and go to state 162


state 160

   69 write_statement: mc_display po str deux_points var pf pvg .

    $default  reduce using rule 69 (write_statement)


state 161

   76 A_for: mc_for po idf deux_points valeur deux_points CONDI . pf

    pf  shift, and go to state 163


state 162

   68 read_statement: mc_read po str deux_points arobase var pf pvg .

    $default  reduce using rule 68 (read_statement)


state 163

   76 A_for: mc_for po idf deux_points valeur deux_points CONDI pf .

    $default  reduce using rule 76 (A_for)
