Terminals unused in grammar

   err


Grammar

    0 $accept: PROGRAM $end

    1 PROGRAM: PROGRAM_NAME mc_data DECLARATIONS mc_end mc_code INSTRUCTIONS mc_end mc_end

    2 PROGRAM_NAME: idf

    3 DECLARATIONS: /* empty */
    4             | DECLARATIONS DECLARATION

    5 DECLARATION: VARIABLE_DECLARATION
    6            | VECTOR_DECLARATION
    7            | CONSTANT_DECLARATION

    8 VARIABLE_DECLARATION: TYPE deux_points LIST_VARIABLES pvg

    9 LIST_VARIABLES: VAR
   10               | LIST_VARIABLES barre VAR

   11 VECTOR_DECLARATION: mc_vector deux_points idf crochet_ouv EXPRESSION virgule EXPRESSION deux_points TYPE crochet_ferm pvg

   12 CONSTANT_DECLARATION: mc_const deux_points idf eq VALUE pvg

   13 TYPE: mc_integer
   14     | mc_float
   15     | mc_char
   16     | mc_string

   17 INSTRUCTIONS: /* empty */
   18             | INSTRUCTIONS INSTRUCTION

   19 INSTRUCTION: AFFECTATION
   20            | INPUT
   21            | OUTPUT
   22            | IF_STATEMENT
   23            | FOR_STATEMENT

   24 AFFECTATION: VAR eq EXPRESSION pvg

   25 VAR: idf
   26    | idf crochet_ouv EXPRESSION crochet_ferm

   27 INPUT: mc_read par_ouv str deux_points arobase idf par_ferm pvg

   28 OUTPUT: mc_display par_ouv str deux_points EXPRESSION par_ferm pvg

   29 IF_STATEMENT: IF_START INSTRUCTIONS ELSE_PART mc_end

   30 IF_START: mc_if par_ouv CONDITION par_ferm deux_points

   31 ELSE_PART: /* empty */

   32 $@1: /* empty */

   33 ELSE_PART: mc_else deux_points $@1 INSTRUCTIONS

   34 FOR_STATEMENT: FOR_START INSTRUCTIONS mc_end

   35 FOR_START: mc_for par_ouv idf deux_points EXPRESSION deux_points CONDITION par_ferm

   36 CONDITION: EXPRESSION

   37 EXPRESSION: EXPRESSION mc_or TERM
   38           | EXPRESSION mc_and TERM
   39           | EXPRESSION mc_g TERM
   40           | EXPRESSION mc_l TERM
   41           | EXPRESSION mc_ge TERM
   42           | EXPRESSION mc_le TERM
   43           | EXPRESSION mc_eq TERM
   44           | EXPRESSION mc_di TERM
   45           | TERM

   46 TERM: TERM plus FACTOR
   47     | TERM minus FACTOR
   48     | FACTOR

   49 FACTOR: FACTOR mul PRIMARY
   50       | FACTOR divi PRIMARY
   51       | PRIMARY

   52 PRIMARY: par_ouv EXPRESSION par_ferm
   53        | mc_not PRIMARY
   54        | VALUE
   55        | VAR

   56 VALUE: inti
   57      | real
   58      | ch
   59      | str
   60      | mc_true
   61      | mc_false


Terminals, with rules where they appear

$end (0) 0
error (256)
idf (258) 2 11 12 25 26 27 35
eq (259) 12 24
mc_data (260) 1
mc_code (261) 1
mc_end (262) 1 29 34
mc_vector (263) 11
inti (264) 56
real (265) 57
mc_integer (266) 13
mc_float (267) 14
mc_char (268) 15
mc_string (269) 16
mc_const (270) 12
mc_read (271) 27
mc_display (272) 28
pvg (273) 8 11 12 24 27 28
str (274) 27 28 59
ch (275) 58
mc_if (276) 30
mc_else (277) 33
mc_for (278) 35
mc_not (279) 53
deux_points (280) 8 11 12 27 28 30 33 35
crochet_ouv (281) 11 26
crochet_ferm (282) 11 26
par_ouv (283) 27 28 30 35 52
par_ferm (284) 27 28 30 35 52
virgule (285) 11
barre (286) 10
arobase (287) 27
plus (288) 46
minus (289) 47
mul (290) 49
divi (291) 50
err (292)
mc_and (293) 38
mc_or (294) 37
mc_g (295) 39
mc_l (296) 40
mc_ge (297) 41
mc_le (298) 42
mc_eq (299) 43
mc_di (300) 44
mc_true (301) 60
mc_false (302) 61


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
PROGRAM (49)
    on left: 1, on right: 0
PROGRAM_NAME (50)
    on left: 2, on right: 1
DECLARATIONS (51)
    on left: 3 4, on right: 1 4
DECLARATION (52)
    on left: 5 6 7, on right: 4
VARIABLE_DECLARATION (53)
    on left: 8, on right: 5
LIST_VARIABLES (54)
    on left: 9 10, on right: 8 10
VECTOR_DECLARATION (55)
    on left: 11, on right: 6
CONSTANT_DECLARATION (56)
    on left: 12, on right: 7
TYPE (57)
    on left: 13 14 15 16, on right: 8 11
INSTRUCTIONS (58)
    on left: 17 18, on right: 1 18 29 33 34
INSTRUCTION (59)
    on left: 19 20 21 22 23, on right: 18
AFFECTATION (60)
    on left: 24, on right: 19
VAR (61)
    on left: 25 26, on right: 9 10 24 55
INPUT (62)
    on left: 27, on right: 20
OUTPUT (63)
    on left: 28, on right: 21
IF_STATEMENT (64)
    on left: 29, on right: 22
IF_START (65)
    on left: 30, on right: 29
ELSE_PART (66)
    on left: 31 33, on right: 29
$@1 (67)
    on left: 32, on right: 33
FOR_STATEMENT (68)
    on left: 34, on right: 23
FOR_START (69)
    on left: 35, on right: 34
CONDITION (70)
    on left: 36, on right: 30 35
EXPRESSION (71)
    on left: 37 38 39 40 41 42 43 44 45, on right: 11 24 26 28 35 36
    37 38 39 40 41 42 43 44 52
TERM (72)
    on left: 46 47 48, on right: 37 38 39 40 41 42 43 44 45 46 47
FACTOR (73)
    on left: 49 50 51, on right: 46 47 48 49 50
PRIMARY (74)
    on left: 52 53 54 55, on right: 49 50 51 53
VALUE (75)
    on left: 56 57 58 59 60 61, on right: 12 54


state 0

    0 $accept: . PROGRAM $end

    idf  shift, and go to state 1

    PROGRAM       go to state 2
    PROGRAM_NAME  go to state 3


state 1

    2 PROGRAM_NAME: idf .

    $default  reduce using rule 2 (PROGRAM_NAME)


state 2

    0 $accept: PROGRAM . $end

    $end  shift, and go to state 4


state 3

    1 PROGRAM: PROGRAM_NAME . mc_data DECLARATIONS mc_end mc_code INSTRUCTIONS mc_end mc_end

    mc_data  shift, and go to state 5


state 4

    0 $accept: PROGRAM $end .

    $default  accept


state 5

    1 PROGRAM: PROGRAM_NAME mc_data . DECLARATIONS mc_end mc_code INSTRUCTIONS mc_end mc_end

    $default  reduce using rule 3 (DECLARATIONS)

    DECLARATIONS  go to state 6


state 6

    1 PROGRAM: PROGRAM_NAME mc_data DECLARATIONS . mc_end mc_code INSTRUCTIONS mc_end mc_end
    4 DECLARATIONS: DECLARATIONS . DECLARATION

    mc_end      shift, and go to state 7
    mc_vector   shift, and go to state 8
    mc_integer  shift, and go to state 9
    mc_float    shift, and go to state 10
    mc_char     shift, and go to state 11
    mc_string   shift, and go to state 12
    mc_const    shift, and go to state 13

    DECLARATION           go to state 14
    VARIABLE_DECLARATION  go to state 15
    VECTOR_DECLARATION    go to state 16
    CONSTANT_DECLARATION  go to state 17
    TYPE                  go to state 18


state 7

    1 PROGRAM: PROGRAM_NAME mc_data DECLARATIONS mc_end . mc_code INSTRUCTIONS mc_end mc_end

    mc_code  shift, and go to state 19


state 8

   11 VECTOR_DECLARATION: mc_vector . deux_points idf crochet_ouv EXPRESSION virgule EXPRESSION deux_points TYPE crochet_ferm pvg

    deux_points  shift, and go to state 20


state 9

   13 TYPE: mc_integer .

    $default  reduce using rule 13 (TYPE)


state 10

   14 TYPE: mc_float .

    $default  reduce using rule 14 (TYPE)


state 11

   15 TYPE: mc_char .

    $default  reduce using rule 15 (TYPE)


state 12

   16 TYPE: mc_string .

    $default  reduce using rule 16 (TYPE)


state 13

   12 CONSTANT_DECLARATION: mc_const . deux_points idf eq VALUE pvg

    deux_points  shift, and go to state 21


state 14

    4 DECLARATIONS: DECLARATIONS DECLARATION .

    $default  reduce using rule 4 (DECLARATIONS)


state 15

    5 DECLARATION: VARIABLE_DECLARATION .

    $default  reduce using rule 5 (DECLARATION)


state 16

    6 DECLARATION: VECTOR_DECLARATION .

    $default  reduce using rule 6 (DECLARATION)


state 17

    7 DECLARATION: CONSTANT_DECLARATION .

    $default  reduce using rule 7 (DECLARATION)


state 18

    8 VARIABLE_DECLARATION: TYPE . deux_points LIST_VARIABLES pvg

    deux_points  shift, and go to state 22


state 19

    1 PROGRAM: PROGRAM_NAME mc_data DECLARATIONS mc_end mc_code . INSTRUCTIONS mc_end mc_end

    $default  reduce using rule 17 (INSTRUCTIONS)

    INSTRUCTIONS  go to state 23


state 20

   11 VECTOR_DECLARATION: mc_vector deux_points . idf crochet_ouv EXPRESSION virgule EXPRESSION deux_points TYPE crochet_ferm pvg

    idf  shift, and go to state 24


state 21

   12 CONSTANT_DECLARATION: mc_const deux_points . idf eq VALUE pvg

    idf  shift, and go to state 25


state 22

    8 VARIABLE_DECLARATION: TYPE deux_points . LIST_VARIABLES pvg

    idf  shift, and go to state 26

    LIST_VARIABLES  go to state 27
    VAR             go to state 28


state 23

    1 PROGRAM: PROGRAM_NAME mc_data DECLARATIONS mc_end mc_code INSTRUCTIONS . mc_end mc_end
   18 INSTRUCTIONS: INSTRUCTIONS . INSTRUCTION

    idf         shift, and go to state 26
    mc_end      shift, and go to state 29
    mc_read     shift, and go to state 30
    mc_display  shift, and go to state 31
    mc_if       shift, and go to state 32
    mc_for      shift, and go to state 33

    INSTRUCTION    go to state 34
    AFFECTATION    go to state 35
    VAR            go to state 36
    INPUT          go to state 37
    OUTPUT         go to state 38
    IF_STATEMENT   go to state 39
    IF_START       go to state 40
    FOR_STATEMENT  go to state 41
    FOR_START      go to state 42


state 24

   11 VECTOR_DECLARATION: mc_vector deux_points idf . crochet_ouv EXPRESSION virgule EXPRESSION deux_points TYPE crochet_ferm pvg

    crochet_ouv  shift, and go to state 43


state 25

   12 CONSTANT_DECLARATION: mc_const deux_points idf . eq VALUE pvg

    eq  shift, and go to state 44


state 26

   25 VAR: idf .
   26    | idf . crochet_ouv EXPRESSION crochet_ferm

    crochet_ouv  shift, and go to state 45

    $default  reduce using rule 25 (VAR)


state 27

    8 VARIABLE_DECLARATION: TYPE deux_points LIST_VARIABLES . pvg
   10 LIST_VARIABLES: LIST_VARIABLES . barre VAR

    pvg    shift, and go to state 46
    barre  shift, and go to state 47


state 28

    9 LIST_VARIABLES: VAR .

    $default  reduce using rule 9 (LIST_VARIABLES)


state 29

    1 PROGRAM: PROGRAM_NAME mc_data DECLARATIONS mc_end mc_code INSTRUCTIONS mc_end . mc_end

    mc_end  shift, and go to state 48


state 30

   27 INPUT: mc_read . par_ouv str deux_points arobase idf par_ferm pvg

    par_ouv  shift, and go to state 49


state 31

   28 OUTPUT: mc_display . par_ouv str deux_points EXPRESSION par_ferm pvg

    par_ouv  shift, and go to state 50


state 32

   30 IF_START: mc_if . par_ouv CONDITION par_ferm deux_points

    par_ouv  shift, and go to state 51


state 33

   35 FOR_START: mc_for . par_ouv idf deux_points EXPRESSION deux_points CONDITION par_ferm

    par_ouv  shift, and go to state 52


state 34

   18 INSTRUCTIONS: INSTRUCTIONS INSTRUCTION .

    $default  reduce using rule 18 (INSTRUCTIONS)


state 35

   19 INSTRUCTION: AFFECTATION .

    $default  reduce using rule 19 (INSTRUCTION)


state 36

   24 AFFECTATION: VAR . eq EXPRESSION pvg

    eq  shift, and go to state 53


state 37

   20 INSTRUCTION: INPUT .

    $default  reduce using rule 20 (INSTRUCTION)


state 38

   21 INSTRUCTION: OUTPUT .

    $default  reduce using rule 21 (INSTRUCTION)


state 39

   22 INSTRUCTION: IF_STATEMENT .

    $default  reduce using rule 22 (INSTRUCTION)


state 40

   29 IF_STATEMENT: IF_START . INSTRUCTIONS ELSE_PART mc_end

    $default  reduce using rule 17 (INSTRUCTIONS)

    INSTRUCTIONS  go to state 54


state 41

   23 INSTRUCTION: FOR_STATEMENT .

    $default  reduce using rule 23 (INSTRUCTION)


state 42

   34 FOR_STATEMENT: FOR_START . INSTRUCTIONS mc_end

    $default  reduce using rule 17 (INSTRUCTIONS)

    INSTRUCTIONS  go to state 55


state 43

   11 VECTOR_DECLARATION: mc_vector deux_points idf crochet_ouv . EXPRESSION virgule EXPRESSION deux_points TYPE crochet_ferm pvg

    idf       shift, and go to state 26
    inti      shift, and go to state 56
    real      shift, and go to state 57
    str       shift, and go to state 58
    ch        shift, and go to state 59
    mc_not    shift, and go to state 60
    par_ouv   shift, and go to state 61
    mc_true   shift, and go to state 62
    mc_false  shift, and go to state 63

    VAR         go to state 64
    EXPRESSION  go to state 65
    TERM        go to state 66
    FACTOR      go to state 67
    PRIMARY     go to state 68
    VALUE       go to state 69


state 44

   12 CONSTANT_DECLARATION: mc_const deux_points idf eq . VALUE pvg

    inti      shift, and go to state 56
    real      shift, and go to state 57
    str       shift, and go to state 58
    ch        shift, and go to state 59
    mc_true   shift, and go to state 62
    mc_false  shift, and go to state 63

    VALUE  go to state 70


state 45

   26 VAR: idf crochet_ouv . EXPRESSION crochet_ferm

    idf       shift, and go to state 26
    inti      shift, and go to state 56
    real      shift, and go to state 57
    str       shift, and go to state 58
    ch        shift, and go to state 59
    mc_not    shift, and go to state 60
    par_ouv   shift, and go to state 61
    mc_true   shift, and go to state 62
    mc_false  shift, and go to state 63

    VAR         go to state 64
    EXPRESSION  go to state 71
    TERM        go to state 66
    FACTOR      go to state 67
    PRIMARY     go to state 68
    VALUE       go to state 69


state 46

    8 VARIABLE_DECLARATION: TYPE deux_points LIST_VARIABLES pvg .

    $default  reduce using rule 8 (VARIABLE_DECLARATION)


state 47

   10 LIST_VARIABLES: LIST_VARIABLES barre . VAR

    idf  shift, and go to state 26

    VAR  go to state 72


state 48

    1 PROGRAM: PROGRAM_NAME mc_data DECLARATIONS mc_end mc_code INSTRUCTIONS mc_end mc_end .

    $default  reduce using rule 1 (PROGRAM)


state 49

   27 INPUT: mc_read par_ouv . str deux_points arobase idf par_ferm pvg

    str  shift, and go to state 73


state 50

   28 OUTPUT: mc_display par_ouv . str deux_points EXPRESSION par_ferm pvg

    str  shift, and go to state 74


state 51

   30 IF_START: mc_if par_ouv . CONDITION par_ferm deux_points

    idf       shift, and go to state 26
    inti      shift, and go to state 56
    real      shift, and go to state 57
    str       shift, and go to state 58
    ch        shift, and go to state 59
    mc_not    shift, and go to state 60
    par_ouv   shift, and go to state 61
    mc_true   shift, and go to state 62
    mc_false  shift, and go to state 63

    VAR         go to state 64
    CONDITION   go to state 75
    EXPRESSION  go to state 76
    TERM        go to state 66
    FACTOR      go to state 67
    PRIMARY     go to state 68
    VALUE       go to state 69


state 52

   35 FOR_START: mc_for par_ouv . idf deux_points EXPRESSION deux_points CONDITION par_ferm

    idf  shift, and go to state 77


state 53

   24 AFFECTATION: VAR eq . EXPRESSION pvg

    idf       shift, and go to state 26
    inti      shift, and go to state 56
    real      shift, and go to state 57
    str       shift, and go to state 58
    ch        shift, and go to state 59
    mc_not    shift, and go to state 60
    par_ouv   shift, and go to state 61
    mc_true   shift, and go to state 62
    mc_false  shift, and go to state 63

    VAR         go to state 64
    EXPRESSION  go to state 78
    TERM        go to state 66
    FACTOR      go to state 67
    PRIMARY     go to state 68
    VALUE       go to state 69


state 54

   18 INSTRUCTIONS: INSTRUCTIONS . INSTRUCTION
   29 IF_STATEMENT: IF_START INSTRUCTIONS . ELSE_PART mc_end

    idf         shift, and go to state 26
    mc_read     shift, and go to state 30
    mc_display  shift, and go to state 31
    mc_if       shift, and go to state 32
    mc_else     shift, and go to state 79
    mc_for      shift, and go to state 33

    $default  reduce using rule 31 (ELSE_PART)

    INSTRUCTION    go to state 34
    AFFECTATION    go to state 35
    VAR            go to state 36
    INPUT          go to state 37
    OUTPUT         go to state 38
    IF_STATEMENT   go to state 39
    IF_START       go to state 40
    ELSE_PART      go to state 80
    FOR_STATEMENT  go to state 41
    FOR_START      go to state 42


state 55

   18 INSTRUCTIONS: INSTRUCTIONS . INSTRUCTION
   34 FOR_STATEMENT: FOR_START INSTRUCTIONS . mc_end

    idf         shift, and go to state 26
    mc_end      shift, and go to state 81
    mc_read     shift, and go to state 30
    mc_display  shift, and go to state 31
    mc_if       shift, and go to state 32
    mc_for      shift, and go to state 33

    INSTRUCTION    go to state 34
    AFFECTATION    go to state 35
    VAR            go to state 36
    INPUT          go to state 37
    OUTPUT         go to state 38
    IF_STATEMENT   go to state 39
    IF_START       go to state 40
    FOR_STATEMENT  go to state 41
    FOR_START      go to state 42


state 56

   56 VALUE: inti .

    $default  reduce using rule 56 (VALUE)


state 57

   57 VALUE: real .

    $default  reduce using rule 57 (VALUE)


state 58

   59 VALUE: str .

    $default  reduce using rule 59 (VALUE)


state 59

   58 VALUE: ch .

    $default  reduce using rule 58 (VALUE)


state 60

   53 PRIMARY: mc_not . PRIMARY

    idf       shift, and go to state 26
    inti      shift, and go to state 56
    real      shift, and go to state 57
    str       shift, and go to state 58
    ch        shift, and go to state 59
    mc_not    shift, and go to state 60
    par_ouv   shift, and go to state 61
    mc_true   shift, and go to state 62
    mc_false  shift, and go to state 63

    VAR      go to state 64
    PRIMARY  go to state 82
    VALUE    go to state 69


state 61

   52 PRIMARY: par_ouv . EXPRESSION par_ferm

    idf       shift, and go to state 26
    inti      shift, and go to state 56
    real      shift, and go to state 57
    str       shift, and go to state 58
    ch        shift, and go to state 59
    mc_not    shift, and go to state 60
    par_ouv   shift, and go to state 61
    mc_true   shift, and go to state 62
    mc_false  shift, and go to state 63

    VAR         go to state 64
    EXPRESSION  go to state 83
    TERM        go to state 66
    FACTOR      go to state 67
    PRIMARY     go to state 68
    VALUE       go to state 69


state 62

   60 VALUE: mc_true .

    $default  reduce using rule 60 (VALUE)


state 63

   61 VALUE: mc_false .

    $default  reduce using rule 61 (VALUE)


state 64

   55 PRIMARY: VAR .

    $default  reduce using rule 55 (PRIMARY)


state 65

   11 VECTOR_DECLARATION: mc_vector deux_points idf crochet_ouv EXPRESSION . virgule EXPRESSION deux_points TYPE crochet_ferm pvg
   37 EXPRESSION: EXPRESSION . mc_or TERM
   38           | EXPRESSION . mc_and TERM
   39           | EXPRESSION . mc_g TERM
   40           | EXPRESSION . mc_l TERM
   41           | EXPRESSION . mc_ge TERM
   42           | EXPRESSION . mc_le TERM
   43           | EXPRESSION . mc_eq TERM
   44           | EXPRESSION . mc_di TERM

    virgule  shift, and go to state 84
    mc_and   shift, and go to state 85
    mc_or    shift, and go to state 86
    mc_g     shift, and go to state 87
    mc_l     shift, and go to state 88
    mc_ge    shift, and go to state 89
    mc_le    shift, and go to state 90
    mc_eq    shift, and go to state 91
    mc_di    shift, and go to state 92


state 66

   45 EXPRESSION: TERM .
   46 TERM: TERM . plus FACTOR
   47     | TERM . minus FACTOR

    plus   shift, and go to state 93
    minus  shift, and go to state 94

    $default  reduce using rule 45 (EXPRESSION)


state 67

   48 TERM: FACTOR .
   49 FACTOR: FACTOR . mul PRIMARY
   50       | FACTOR . divi PRIMARY

    mul   shift, and go to state 95
    divi  shift, and go to state 96

    $default  reduce using rule 48 (TERM)


state 68

   51 FACTOR: PRIMARY .

    $default  reduce using rule 51 (FACTOR)


state 69

   54 PRIMARY: VALUE .

    $default  reduce using rule 54 (PRIMARY)


state 70

   12 CONSTANT_DECLARATION: mc_const deux_points idf eq VALUE . pvg

    pvg  shift, and go to state 97


state 71

   26 VAR: idf crochet_ouv EXPRESSION . crochet_ferm
   37 EXPRESSION: EXPRESSION . mc_or TERM
   38           | EXPRESSION . mc_and TERM
   39           | EXPRESSION . mc_g TERM
   40           | EXPRESSION . mc_l TERM
   41           | EXPRESSION . mc_ge TERM
   42           | EXPRESSION . mc_le TERM
   43           | EXPRESSION . mc_eq TERM
   44           | EXPRESSION . mc_di TERM

    crochet_ferm  shift, and go to state 98
    mc_and        shift, and go to state 85
    mc_or         shift, and go to state 86
    mc_g          shift, and go to state 87
    mc_l          shift, and go to state 88
    mc_ge         shift, and go to state 89
    mc_le         shift, and go to state 90
    mc_eq         shift, and go to state 91
    mc_di         shift, and go to state 92


state 72

   10 LIST_VARIABLES: LIST_VARIABLES barre VAR .

    $default  reduce using rule 10 (LIST_VARIABLES)


state 73

   27 INPUT: mc_read par_ouv str . deux_points arobase idf par_ferm pvg

    deux_points  shift, and go to state 99


state 74

   28 OUTPUT: mc_display par_ouv str . deux_points EXPRESSION par_ferm pvg

    deux_points  shift, and go to state 100


state 75

   30 IF_START: mc_if par_ouv CONDITION . par_ferm deux_points

    par_ferm  shift, and go to state 101


state 76

   36 CONDITION: EXPRESSION .
   37 EXPRESSION: EXPRESSION . mc_or TERM
   38           | EXPRESSION . mc_and TERM
   39           | EXPRESSION . mc_g TERM
   40           | EXPRESSION . mc_l TERM
   41           | EXPRESSION . mc_ge TERM
   42           | EXPRESSION . mc_le TERM
   43           | EXPRESSION . mc_eq TERM
   44           | EXPRESSION . mc_di TERM

    mc_and  shift, and go to state 85
    mc_or   shift, and go to state 86
    mc_g    shift, and go to state 87
    mc_l    shift, and go to state 88
    mc_ge   shift, and go to state 89
    mc_le   shift, and go to state 90
    mc_eq   shift, and go to state 91
    mc_di   shift, and go to state 92

    $default  reduce using rule 36 (CONDITION)


state 77

   35 FOR_START: mc_for par_ouv idf . deux_points EXPRESSION deux_points CONDITION par_ferm

    deux_points  shift, and go to state 102


state 78

   24 AFFECTATION: VAR eq EXPRESSION . pvg
   37 EXPRESSION: EXPRESSION . mc_or TERM
   38           | EXPRESSION . mc_and TERM
   39           | EXPRESSION . mc_g TERM
   40           | EXPRESSION . mc_l TERM
   41           | EXPRESSION . mc_ge TERM
   42           | EXPRESSION . mc_le TERM
   43           | EXPRESSION . mc_eq TERM
   44           | EXPRESSION . mc_di TERM

    pvg     shift, and go to state 103
    mc_and  shift, and go to state 85
    mc_or   shift, and go to state 86
    mc_g    shift, and go to state 87
    mc_l    shift, and go to state 88
    mc_ge   shift, and go to state 89
    mc_le   shift, and go to state 90
    mc_eq   shift, and go to state 91
    mc_di   shift, and go to state 92


state 79

   33 ELSE_PART: mc_else . deux_points $@1 INSTRUCTIONS

    deux_points  shift, and go to state 104


state 80

   29 IF_STATEMENT: IF_START INSTRUCTIONS ELSE_PART . mc_end

    mc_end  shift, and go to state 105


state 81

   34 FOR_STATEMENT: FOR_START INSTRUCTIONS mc_end .

    $default  reduce using rule 34 (FOR_STATEMENT)


state 82

   53 PRIMARY: mc_not PRIMARY .

    $default  reduce using rule 53 (PRIMARY)


state 83

   37 EXPRESSION: EXPRESSION . mc_or TERM
   38           | EXPRESSION . mc_and TERM
   39           | EXPRESSION . mc_g TERM
   40           | EXPRESSION . mc_l TERM
   41           | EXPRESSION . mc_ge TERM
   42           | EXPRESSION . mc_le TERM
   43           | EXPRESSION . mc_eq TERM
   44           | EXPRESSION . mc_di TERM
   52 PRIMARY: par_ouv EXPRESSION . par_ferm

    par_ferm  shift, and go to state 106
    mc_and    shift, and go to state 85
    mc_or     shift, and go to state 86
    mc_g      shift, and go to state 87
    mc_l      shift, and go to state 88
    mc_ge     shift, and go to state 89
    mc_le     shift, and go to state 90
    mc_eq     shift, and go to state 91
    mc_di     shift, and go to state 92


state 84

   11 VECTOR_DECLARATION: mc_vector deux_points idf crochet_ouv EXPRESSION virgule . EXPRESSION deux_points TYPE crochet_ferm pvg

    idf       shift, and go to state 26
    inti      shift, and go to state 56
    real      shift, and go to state 57
    str       shift, and go to state 58
    ch        shift, and go to state 59
    mc_not    shift, and go to state 60
    par_ouv   shift, and go to state 61
    mc_true   shift, and go to state 62
    mc_false  shift, and go to state 63

    VAR         go to state 64
    EXPRESSION  go to state 107
    TERM        go to state 66
    FACTOR      go to state 67
    PRIMARY     go to state 68
    VALUE       go to state 69


state 85

   38 EXPRESSION: EXPRESSION mc_and . TERM

    idf       shift, and go to state 26
    inti      shift, and go to state 56
    real      shift, and go to state 57
    str       shift, and go to state 58
    ch        shift, and go to state 59
    mc_not    shift, and go to state 60
    par_ouv   shift, and go to state 61
    mc_true   shift, and go to state 62
    mc_false  shift, and go to state 63

    VAR      go to state 64
    TERM     go to state 108
    FACTOR   go to state 67
    PRIMARY  go to state 68
    VALUE    go to state 69


state 86

   37 EXPRESSION: EXPRESSION mc_or . TERM

    idf       shift, and go to state 26
    inti      shift, and go to state 56
    real      shift, and go to state 57
    str       shift, and go to state 58
    ch        shift, and go to state 59
    mc_not    shift, and go to state 60
    par_ouv   shift, and go to state 61
    mc_true   shift, and go to state 62
    mc_false  shift, and go to state 63

    VAR      go to state 64
    TERM     go to state 109
    FACTOR   go to state 67
    PRIMARY  go to state 68
    VALUE    go to state 69


state 87

   39 EXPRESSION: EXPRESSION mc_g . TERM

    idf       shift, and go to state 26
    inti      shift, and go to state 56
    real      shift, and go to state 57
    str       shift, and go to state 58
    ch        shift, and go to state 59
    mc_not    shift, and go to state 60
    par_ouv   shift, and go to state 61
    mc_true   shift, and go to state 62
    mc_false  shift, and go to state 63

    VAR      go to state 64
    TERM     go to state 110
    FACTOR   go to state 67
    PRIMARY  go to state 68
    VALUE    go to state 69


state 88

   40 EXPRESSION: EXPRESSION mc_l . TERM

    idf       shift, and go to state 26
    inti      shift, and go to state 56
    real      shift, and go to state 57
    str       shift, and go to state 58
    ch        shift, and go to state 59
    mc_not    shift, and go to state 60
    par_ouv   shift, and go to state 61
    mc_true   shift, and go to state 62
    mc_false  shift, and go to state 63

    VAR      go to state 64
    TERM     go to state 111
    FACTOR   go to state 67
    PRIMARY  go to state 68
    VALUE    go to state 69


state 89

   41 EXPRESSION: EXPRESSION mc_ge . TERM

    idf       shift, and go to state 26
    inti      shift, and go to state 56
    real      shift, and go to state 57
    str       shift, and go to state 58
    ch        shift, and go to state 59
    mc_not    shift, and go to state 60
    par_ouv   shift, and go to state 61
    mc_true   shift, and go to state 62
    mc_false  shift, and go to state 63

    VAR      go to state 64
    TERM     go to state 112
    FACTOR   go to state 67
    PRIMARY  go to state 68
    VALUE    go to state 69


state 90

   42 EXPRESSION: EXPRESSION mc_le . TERM

    idf       shift, and go to state 26
    inti      shift, and go to state 56
    real      shift, and go to state 57
    str       shift, and go to state 58
    ch        shift, and go to state 59
    mc_not    shift, and go to state 60
    par_ouv   shift, and go to state 61
    mc_true   shift, and go to state 62
    mc_false  shift, and go to state 63

    VAR      go to state 64
    TERM     go to state 113
    FACTOR   go to state 67
    PRIMARY  go to state 68
    VALUE    go to state 69


state 91

   43 EXPRESSION: EXPRESSION mc_eq . TERM

    idf       shift, and go to state 26
    inti      shift, and go to state 56
    real      shift, and go to state 57
    str       shift, and go to state 58
    ch        shift, and go to state 59
    mc_not    shift, and go to state 60
    par_ouv   shift, and go to state 61
    mc_true   shift, and go to state 62
    mc_false  shift, and go to state 63

    VAR      go to state 64
    TERM     go to state 114
    FACTOR   go to state 67
    PRIMARY  go to state 68
    VALUE    go to state 69


state 92

   44 EXPRESSION: EXPRESSION mc_di . TERM

    idf       shift, and go to state 26
    inti      shift, and go to state 56
    real      shift, and go to state 57
    str       shift, and go to state 58
    ch        shift, and go to state 59
    mc_not    shift, and go to state 60
    par_ouv   shift, and go to state 61
    mc_true   shift, and go to state 62
    mc_false  shift, and go to state 63

    VAR      go to state 64
    TERM     go to state 115
    FACTOR   go to state 67
    PRIMARY  go to state 68
    VALUE    go to state 69


state 93

   46 TERM: TERM plus . FACTOR

    idf       shift, and go to state 26
    inti      shift, and go to state 56
    real      shift, and go to state 57
    str       shift, and go to state 58
    ch        shift, and go to state 59
    mc_not    shift, and go to state 60
    par_ouv   shift, and go to state 61
    mc_true   shift, and go to state 62
    mc_false  shift, and go to state 63

    VAR      go to state 64
    FACTOR   go to state 116
    PRIMARY  go to state 68
    VALUE    go to state 69


state 94

   47 TERM: TERM minus . FACTOR

    idf       shift, and go to state 26
    inti      shift, and go to state 56
    real      shift, and go to state 57
    str       shift, and go to state 58
    ch        shift, and go to state 59
    mc_not    shift, and go to state 60
    par_ouv   shift, and go to state 61
    mc_true   shift, and go to state 62
    mc_false  shift, and go to state 63

    VAR      go to state 64
    FACTOR   go to state 117
    PRIMARY  go to state 68
    VALUE    go to state 69


state 95

   49 FACTOR: FACTOR mul . PRIMARY

    idf       shift, and go to state 26
    inti      shift, and go to state 56
    real      shift, and go to state 57
    str       shift, and go to state 58
    ch        shift, and go to state 59
    mc_not    shift, and go to state 60
    par_ouv   shift, and go to state 61
    mc_true   shift, and go to state 62
    mc_false  shift, and go to state 63

    VAR      go to state 64
    PRIMARY  go to state 118
    VALUE    go to state 69


state 96

   50 FACTOR: FACTOR divi . PRIMARY

    idf       shift, and go to state 26
    inti      shift, and go to state 56
    real      shift, and go to state 57
    str       shift, and go to state 58
    ch        shift, and go to state 59
    mc_not    shift, and go to state 60
    par_ouv   shift, and go to state 61
    mc_true   shift, and go to state 62
    mc_false  shift, and go to state 63

    VAR      go to state 64
    PRIMARY  go to state 119
    VALUE    go to state 69


state 97

   12 CONSTANT_DECLARATION: mc_const deux_points idf eq VALUE pvg .

    $default  reduce using rule 12 (CONSTANT_DECLARATION)


state 98

   26 VAR: idf crochet_ouv EXPRESSION crochet_ferm .

    $default  reduce using rule 26 (VAR)


state 99

   27 INPUT: mc_read par_ouv str deux_points . arobase idf par_ferm pvg

    arobase  shift, and go to state 120


state 100

   28 OUTPUT: mc_display par_ouv str deux_points . EXPRESSION par_ferm pvg

    idf       shift, and go to state 26
    inti      shift, and go to state 56
    real      shift, and go to state 57
    str       shift, and go to state 58
    ch        shift, and go to state 59
    mc_not    shift, and go to state 60
    par_ouv   shift, and go to state 61
    mc_true   shift, and go to state 62
    mc_false  shift, and go to state 63

    VAR         go to state 64
    EXPRESSION  go to state 121
    TERM        go to state 66
    FACTOR      go to state 67
    PRIMARY     go to state 68
    VALUE       go to state 69


state 101

   30 IF_START: mc_if par_ouv CONDITION par_ferm . deux_points

    deux_points  shift, and go to state 122


state 102

   35 FOR_START: mc_for par_ouv idf deux_points . EXPRESSION deux_points CONDITION par_ferm

    idf       shift, and go to state 26
    inti      shift, and go to state 56
    real      shift, and go to state 57
    str       shift, and go to state 58
    ch        shift, and go to state 59
    mc_not    shift, and go to state 60
    par_ouv   shift, and go to state 61
    mc_true   shift, and go to state 62
    mc_false  shift, and go to state 63

    VAR         go to state 64
    EXPRESSION  go to state 123
    TERM        go to state 66
    FACTOR      go to state 67
    PRIMARY     go to state 68
    VALUE       go to state 69


state 103

   24 AFFECTATION: VAR eq EXPRESSION pvg .

    $default  reduce using rule 24 (AFFECTATION)


state 104

   33 ELSE_PART: mc_else deux_points . $@1 INSTRUCTIONS

    $default  reduce using rule 32 ($@1)

    $@1  go to state 124


state 105

   29 IF_STATEMENT: IF_START INSTRUCTIONS ELSE_PART mc_end .

    $default  reduce using rule 29 (IF_STATEMENT)


state 106

   52 PRIMARY: par_ouv EXPRESSION par_ferm .

    $default  reduce using rule 52 (PRIMARY)


state 107

   11 VECTOR_DECLARATION: mc_vector deux_points idf crochet_ouv EXPRESSION virgule EXPRESSION . deux_points TYPE crochet_ferm pvg
   37 EXPRESSION: EXPRESSION . mc_or TERM
   38           | EXPRESSION . mc_and TERM
   39           | EXPRESSION . mc_g TERM
   40           | EXPRESSION . mc_l TERM
   41           | EXPRESSION . mc_ge TERM
   42           | EXPRESSION . mc_le TERM
   43           | EXPRESSION . mc_eq TERM
   44           | EXPRESSION . mc_di TERM

    deux_points  shift, and go to state 125
    mc_and       shift, and go to state 85
    mc_or        shift, and go to state 86
    mc_g         shift, and go to state 87
    mc_l         shift, and go to state 88
    mc_ge        shift, and go to state 89
    mc_le        shift, and go to state 90
    mc_eq        shift, and go to state 91
    mc_di        shift, and go to state 92


state 108

   38 EXPRESSION: EXPRESSION mc_and TERM .
   46 TERM: TERM . plus FACTOR
   47     | TERM . minus FACTOR

    plus   shift, and go to state 93
    minus  shift, and go to state 94

    $default  reduce using rule 38 (EXPRESSION)


state 109

   37 EXPRESSION: EXPRESSION mc_or TERM .
   46 TERM: TERM . plus FACTOR
   47     | TERM . minus FACTOR

    plus   shift, and go to state 93
    minus  shift, and go to state 94

    $default  reduce using rule 37 (EXPRESSION)


state 110

   39 EXPRESSION: EXPRESSION mc_g TERM .
   46 TERM: TERM . plus FACTOR
   47     | TERM . minus FACTOR

    plus   shift, and go to state 93
    minus  shift, and go to state 94

    $default  reduce using rule 39 (EXPRESSION)


state 111

   40 EXPRESSION: EXPRESSION mc_l TERM .
   46 TERM: TERM . plus FACTOR
   47     | TERM . minus FACTOR

    plus   shift, and go to state 93
    minus  shift, and go to state 94

    $default  reduce using rule 40 (EXPRESSION)


state 112

   41 EXPRESSION: EXPRESSION mc_ge TERM .
   46 TERM: TERM . plus FACTOR
   47     | TERM . minus FACTOR

    plus   shift, and go to state 93
    minus  shift, and go to state 94

    $default  reduce using rule 41 (EXPRESSION)


state 113

   42 EXPRESSION: EXPRESSION mc_le TERM .
   46 TERM: TERM . plus FACTOR
   47     | TERM . minus FACTOR

    plus   shift, and go to state 93
    minus  shift, and go to state 94

    $default  reduce using rule 42 (EXPRESSION)


state 114

   43 EXPRESSION: EXPRESSION mc_eq TERM .
   46 TERM: TERM . plus FACTOR
   47     | TERM . minus FACTOR

    plus   shift, and go to state 93
    minus  shift, and go to state 94

    $default  reduce using rule 43 (EXPRESSION)


state 115

   44 EXPRESSION: EXPRESSION mc_di TERM .
   46 TERM: TERM . plus FACTOR
   47     | TERM . minus FACTOR

    plus   shift, and go to state 93
    minus  shift, and go to state 94

    $default  reduce using rule 44 (EXPRESSION)


state 116

   46 TERM: TERM plus FACTOR .
   49 FACTOR: FACTOR . mul PRIMARY
   50       | FACTOR . divi PRIMARY

    mul   shift, and go to state 95
    divi  shift, and go to state 96

    $default  reduce using rule 46 (TERM)


state 117

   47 TERM: TERM minus FACTOR .
   49 FACTOR: FACTOR . mul PRIMARY
   50       | FACTOR . divi PRIMARY

    mul   shift, and go to state 95
    divi  shift, and go to state 96

    $default  reduce using rule 47 (TERM)


state 118

   49 FACTOR: FACTOR mul PRIMARY .

    $default  reduce using rule 49 (FACTOR)


state 119

   50 FACTOR: FACTOR divi PRIMARY .

    $default  reduce using rule 50 (FACTOR)


state 120

   27 INPUT: mc_read par_ouv str deux_points arobase . idf par_ferm pvg

    idf  shift, and go to state 126


state 121

   28 OUTPUT: mc_display par_ouv str deux_points EXPRESSION . par_ferm pvg
   37 EXPRESSION: EXPRESSION . mc_or TERM
   38           | EXPRESSION . mc_and TERM
   39           | EXPRESSION . mc_g TERM
   40           | EXPRESSION . mc_l TERM
   41           | EXPRESSION . mc_ge TERM
   42           | EXPRESSION . mc_le TERM
   43           | EXPRESSION . mc_eq TERM
   44           | EXPRESSION . mc_di TERM

    par_ferm  shift, and go to state 127
    mc_and    shift, and go to state 85
    mc_or     shift, and go to state 86
    mc_g      shift, and go to state 87
    mc_l      shift, and go to state 88
    mc_ge     shift, and go to state 89
    mc_le     shift, and go to state 90
    mc_eq     shift, and go to state 91
    mc_di     shift, and go to state 92


state 122

   30 IF_START: mc_if par_ouv CONDITION par_ferm deux_points .

    $default  reduce using rule 30 (IF_START)


state 123

   35 FOR_START: mc_for par_ouv idf deux_points EXPRESSION . deux_points CONDITION par_ferm
   37 EXPRESSION: EXPRESSION . mc_or TERM
   38           | EXPRESSION . mc_and TERM
   39           | EXPRESSION . mc_g TERM
   40           | EXPRESSION . mc_l TERM
   41           | EXPRESSION . mc_ge TERM
   42           | EXPRESSION . mc_le TERM
   43           | EXPRESSION . mc_eq TERM
   44           | EXPRESSION . mc_di TERM

    deux_points  shift, and go to state 128
    mc_and       shift, and go to state 85
    mc_or        shift, and go to state 86
    mc_g         shift, and go to state 87
    mc_l         shift, and go to state 88
    mc_ge        shift, and go to state 89
    mc_le        shift, and go to state 90
    mc_eq        shift, and go to state 91
    mc_di        shift, and go to state 92


state 124

   33 ELSE_PART: mc_else deux_points $@1 . INSTRUCTIONS

    $default  reduce using rule 17 (INSTRUCTIONS)

    INSTRUCTIONS  go to state 129


state 125

   11 VECTOR_DECLARATION: mc_vector deux_points idf crochet_ouv EXPRESSION virgule EXPRESSION deux_points . TYPE crochet_ferm pvg

    mc_integer  shift, and go to state 9
    mc_float    shift, and go to state 10
    mc_char     shift, and go to state 11
    mc_string   shift, and go to state 12

    TYPE  go to state 130


state 126

   27 INPUT: mc_read par_ouv str deux_points arobase idf . par_ferm pvg

    par_ferm  shift, and go to state 131


state 127

   28 OUTPUT: mc_display par_ouv str deux_points EXPRESSION par_ferm . pvg

    pvg  shift, and go to state 132


state 128

   35 FOR_START: mc_for par_ouv idf deux_points EXPRESSION deux_points . CONDITION par_ferm

    idf       shift, and go to state 26
    inti      shift, and go to state 56
    real      shift, and go to state 57
    str       shift, and go to state 58
    ch        shift, and go to state 59
    mc_not    shift, and go to state 60
    par_ouv   shift, and go to state 61
    mc_true   shift, and go to state 62
    mc_false  shift, and go to state 63

    VAR         go to state 64
    CONDITION   go to state 133
    EXPRESSION  go to state 76
    TERM        go to state 66
    FACTOR      go to state 67
    PRIMARY     go to state 68
    VALUE       go to state 69


state 129

   18 INSTRUCTIONS: INSTRUCTIONS . INSTRUCTION
   33 ELSE_PART: mc_else deux_points $@1 INSTRUCTIONS .

    idf         shift, and go to state 26
    mc_read     shift, and go to state 30
    mc_display  shift, and go to state 31
    mc_if       shift, and go to state 32
    mc_for      shift, and go to state 33

    $default  reduce using rule 33 (ELSE_PART)

    INSTRUCTION    go to state 34
    AFFECTATION    go to state 35
    VAR            go to state 36
    INPUT          go to state 37
    OUTPUT         go to state 38
    IF_STATEMENT   go to state 39
    IF_START       go to state 40
    FOR_STATEMENT  go to state 41
    FOR_START      go to state 42


state 130

   11 VECTOR_DECLARATION: mc_vector deux_points idf crochet_ouv EXPRESSION virgule EXPRESSION deux_points TYPE . crochet_ferm pvg

    crochet_ferm  shift, and go to state 134


state 131

   27 INPUT: mc_read par_ouv str deux_points arobase idf par_ferm . pvg

    pvg  shift, and go to state 135


state 132

   28 OUTPUT: mc_display par_ouv str deux_points EXPRESSION par_ferm pvg .

    $default  reduce using rule 28 (OUTPUT)


state 133

   35 FOR_START: mc_for par_ouv idf deux_points EXPRESSION deux_points CONDITION . par_ferm

    par_ferm  shift, and go to state 136


state 134

   11 VECTOR_DECLARATION: mc_vector deux_points idf crochet_ouv EXPRESSION virgule EXPRESSION deux_points TYPE crochet_ferm . pvg

    pvg  shift, and go to state 137


state 135

   27 INPUT: mc_read par_ouv str deux_points arobase idf par_ferm pvg .

    $default  reduce using rule 27 (INPUT)


state 136

   35 FOR_START: mc_for par_ouv idf deux_points EXPRESSION deux_points CONDITION par_ferm .

    $default  reduce using rule 35 (FOR_START)


state 137

   11 VECTOR_DECLARATION: mc_vector deux_points idf crochet_ouv EXPRESSION virgule EXPRESSION deux_points TYPE crochet_ferm pvg .

    $default  reduce using rule 11 (VECTOR_DECLARATION)
