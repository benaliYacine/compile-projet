Terminals unused in grammar

   err


Grammar

    0 $accept: s $end

    1 s: FCTS PRGM_PRIN

    2 PRGM_PRIN: mc_prgrm idf DECS INSTS mc_end

    3 FCTS: VIDE
    4     | ENSFCT

    5 VIDE: /* empty */

    6 ENSFCT: ENSFCT FCT
    7       | FCT

    8 FCT: TYPE mc_rtin idf po IDFS pf DECS ENSINST assignment mc_endr
    9    | TYPE mc_rtin idf po IDFS pf DECS assignment mc_endr

   10 TYPE: mc_int
   11     | mc_real
   12     | mc_char
   13     | mc_logi

   14 DECS: VIDE
   15     | ENSDEC

   16 ENSDEC: ENSDEC DEC
   17       | DEC

   18 DEC: TYPE ENSIDF_dec pvg

   19 $@1: /* empty */

   20 DEC: TYPE idf $@1 mul inti pvg
   21    | TYPE idf mc_dim po TAILLE pf pvg

   22 partie_gauch_affectation: aff valeur
   23                         | VIDE

   24 ENSIDF_dec: ENSIDF_dec verg idf partie_gauch_affectation
   25           | idf partie_gauch_affectation

   26 TAILLE: TAILLE verg inti
   27       | inti

   28 EXPRE: EXPRE mc_or CONDIT
   29      | EXPRE mc_and CONDIT
   30      | CONDIT

   31 CONDIT: CONDIT lt EXPREt
   32       | CONDIT gt EXPREt
   33       | CONDIT ge EXPREt
   34       | CONDIT eq EXPREt
   35       | CONDIT ne EXPREt
   36       | CONDIT le EXPREt
   37       | EXPREt

   38 EXPREt: EXPREt add TERM
   39       | EXPREt sub TERM
   40       | TERM

   41 TERM: TERM mul FACTOR
   42     | TERM divi FACTOR
   43     | FACTOR

   44 FACTOR: po EXPRE pf
   45       | OPERAND

   46 OPERAND: idf
   47        | LOGI
   48        | inti
   49        | real
   50        | idf po TAILLE pf
   51        | mc_call idf po ENSpara pf

   52 ENSpara: ENSpara verg valeur
   53        | valeur

   54 LOGI: mc_true
   55     | mc_false

   56 IDFS: ENSIDF
   57     | VIDE

   58 ENSIDF: ENSIDF verg idf
   59       | idf

   60 INSTS: VIDE
   61      | ENSINST

   62 ENSINST: ENSINST INST
   63        | INST

   64 INST: if_statement
   65     | read_statement
   66     | write_statement
   67     | dowhile_statement
   68     | assignment
   69     | eqival_statement

   70 eqival_statement: mc_equival ens_list_vars pvg

   71 ens_list_vars: ens_list_var
   72              | VIDE

   73 ens_list_var: ens_list_var verg po list_var pf
   74             | po list_var pf

   75 list_var: list_var verg var
   76         | var

   77 var: idf
   78    | idf po TAILLE pf

   79 if_statement: B_if else_clause mc_endif

   80 B_if: A_if mc_then ENSINST

   81 A_if: mc_if po CONDI pf

   82 else_clause: mc_else ENSINST
   83            | VIDE

   84 assignment: var aff valeur pvg

   85 valeur: str
   86       | EXPRE

   87 read_statement: mc_read po var pf pvg

   88 write_statement: mc_write po ENS_PARA_WRITE pf pvg

   89 ENS_PARA_WRITE: ENS_PARA_WRITE verg str
   90               | ENS_PARA_WRITE verg var
   91               | str
   92               | var

   93 dowhile_statement: B_while ENSINST mc_enddo

   94 B_while: A_while po CONDI pf

   95 A_while: mc_dowhile

   96 CONDI: EXPRE


Terminals, with rules where they appear

$end (0) 0
error (256)
idf (258) 2 8 9 20 21 24 25 46 50 51 58 59 77 78
aff (259) 22 84
mc_prgrm (260) 2
mc_rtin (261) 8 9
inti (262) 20 26 27 48
real (263) 49
mc_endr (264) 8 9
mc_call (265) 51
mc_dim (266) 21
mc_logi (267) 13
mc_char (268) 12
mc_true (269) 54
mc_false (270) 55
mc_read (271) 87
mc_write (272) 88
pvg (273) 18 20 21 70 84 87 88
str (274) 85 89 91
mc_int (275) 10
mc_real (276) 11
mc_end (277) 2
mc_if (278) 81
mc_then (279) 80
mc_else (280) 82
mc_dowhile (281) 95
mc_enddo (282) 93
mc_equival (283) 70
mc_or (284) 28
ge (285) 33
eq (286) 34
ne (287) 35
le (288) 36
add (289) 38
sub (290) 39
mul (291) 20 41
divi (292) 42
mc_and (293) 29
mc_endif (294) 79
lt (295) 31
gt (296) 32
po (297) 8 9 21 44 50 51 73 74 78 81 87 88 94
pf (298) 8 9 21 44 50 51 73 74 78 81 87 88 94
verg (299) 24 26 52 58 73 75 89 90
err (300)


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
s (47)
    on left: 1, on right: 0
PRGM_PRIN (48)
    on left: 2, on right: 1
FCTS (49)
    on left: 3 4, on right: 1
VIDE (50)
    on left: 5, on right: 3 14 23 57 60 72 83
ENSFCT (51)
    on left: 6 7, on right: 4 6
FCT (52)
    on left: 8 9, on right: 6 7
TYPE (53)
    on left: 10 11 12 13, on right: 8 9 18 20 21
DECS (54)
    on left: 14 15, on right: 2 8 9
ENSDEC (55)
    on left: 16 17, on right: 15 16
DEC (56)
    on left: 18 20 21, on right: 16 17
$@1 (57)
    on left: 19, on right: 20
partie_gauch_affectation (58)
    on left: 22 23, on right: 24 25
ENSIDF_dec (59)
    on left: 24 25, on right: 18 24
TAILLE (60)
    on left: 26 27, on right: 21 26 50 78
EXPRE (61)
    on left: 28 29 30, on right: 28 29 44 86 96
CONDIT (62)
    on left: 31 32 33 34 35 36 37, on right: 28 29 30 31 32 33 34 35
    36
EXPREt (63)
    on left: 38 39 40, on right: 31 32 33 34 35 36 37 38 39
TERM (64)
    on left: 41 42 43, on right: 38 39 40 41 42
FACTOR (65)
    on left: 44 45, on right: 41 42 43
OPERAND (66)
    on left: 46 47 48 49 50 51, on right: 45
ENSpara (67)
    on left: 52 53, on right: 51 52
LOGI (68)
    on left: 54 55, on right: 47
IDFS (69)
    on left: 56 57, on right: 8 9
ENSIDF (70)
    on left: 58 59, on right: 56 58
INSTS (71)
    on left: 60 61, on right: 2
ENSINST (72)
    on left: 62 63, on right: 8 61 62 80 82 93
INST (73)
    on left: 64 65 66 67 68 69, on right: 62 63
eqival_statement (74)
    on left: 70, on right: 69
ens_list_vars (75)
    on left: 71 72, on right: 70
ens_list_var (76)
    on left: 73 74, on right: 71 73
list_var (77)
    on left: 75 76, on right: 73 74 75
var (78)
    on left: 77 78, on right: 75 76 84 87 90 92
if_statement (79)
    on left: 79, on right: 64
B_if (80)
    on left: 80, on right: 79
A_if (81)
    on left: 81, on right: 80
else_clause (82)
    on left: 82 83, on right: 79
assignment (83)
    on left: 84, on right: 8 9 68
valeur (84)
    on left: 85 86, on right: 22 52 53 84
read_statement (85)
    on left: 87, on right: 65
write_statement (86)
    on left: 88, on right: 66
ENS_PARA_WRITE (87)
    on left: 89 90 91 92, on right: 88 89 90
dowhile_statement (88)
    on left: 93, on right: 67
B_while (89)
    on left: 94, on right: 93
A_while (90)
    on left: 95, on right: 94
CONDI (91)
    on left: 96, on right: 81 94


state 0

    0 $accept: . s $end

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 5 (VIDE)

    s       go to state 5
    FCTS    go to state 6
    VIDE    go to state 7
    ENSFCT  go to state 8
    FCT     go to state 9
    TYPE    go to state 10


state 1

   13 TYPE: mc_logi .

    $default  reduce using rule 13 (TYPE)


state 2

   12 TYPE: mc_char .

    $default  reduce using rule 12 (TYPE)


state 3

   10 TYPE: mc_int .

    $default  reduce using rule 10 (TYPE)


state 4

   11 TYPE: mc_real .

    $default  reduce using rule 11 (TYPE)


state 5

    0 $accept: s . $end

    $end  shift, and go to state 11


state 6

    1 s: FCTS . PRGM_PRIN

    mc_prgrm  shift, and go to state 12

    PRGM_PRIN  go to state 13


state 7

    3 FCTS: VIDE .

    $default  reduce using rule 3 (FCTS)


state 8

    4 FCTS: ENSFCT .
    6 ENSFCT: ENSFCT . FCT

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 4 (FCTS)

    FCT   go to state 14
    TYPE  go to state 10


state 9

    7 ENSFCT: FCT .

    $default  reduce using rule 7 (ENSFCT)


state 10

    8 FCT: TYPE . mc_rtin idf po IDFS pf DECS ENSINST assignment mc_endr
    9    | TYPE . mc_rtin idf po IDFS pf DECS assignment mc_endr

    mc_rtin  shift, and go to state 15


state 11

    0 $accept: s $end .

    $default  accept


state 12

    2 PRGM_PRIN: mc_prgrm . idf DECS INSTS mc_end

    idf  shift, and go to state 16


state 13

    1 s: FCTS PRGM_PRIN .

    $default  reduce using rule 1 (s)


state 14

    6 ENSFCT: ENSFCT FCT .

    $default  reduce using rule 6 (ENSFCT)


state 15

    8 FCT: TYPE mc_rtin . idf po IDFS pf DECS ENSINST assignment mc_endr
    9    | TYPE mc_rtin . idf po IDFS pf DECS assignment mc_endr

    idf  shift, and go to state 17


state 16

    2 PRGM_PRIN: mc_prgrm idf . DECS INSTS mc_end

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 5 (VIDE)

    VIDE    go to state 18
    TYPE    go to state 19
    DECS    go to state 20
    ENSDEC  go to state 21
    DEC     go to state 22


state 17

    8 FCT: TYPE mc_rtin idf . po IDFS pf DECS ENSINST assignment mc_endr
    9    | TYPE mc_rtin idf . po IDFS pf DECS assignment mc_endr

    po  shift, and go to state 23


state 18

   14 DECS: VIDE .

    $default  reduce using rule 14 (DECS)


state 19

   18 DEC: TYPE . ENSIDF_dec pvg
   20    | TYPE . idf $@1 mul inti pvg
   21    | TYPE . idf mc_dim po TAILLE pf pvg

    idf  shift, and go to state 24

    ENSIDF_dec  go to state 25


state 20

    2 PRGM_PRIN: mc_prgrm idf DECS . INSTS mc_end

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    $default  reduce using rule 5 (VIDE)

    VIDE               go to state 32
    INSTS              go to state 33
    ENSINST            go to state 34
    INST               go to state 35
    eqival_statement   go to state 36
    var                go to state 37
    if_statement       go to state 38
    B_if               go to state 39
    A_if               go to state 40
    assignment         go to state 41
    read_statement     go to state 42
    write_statement    go to state 43
    dowhile_statement  go to state 44
    B_while            go to state 45
    A_while            go to state 46


state 21

   15 DECS: ENSDEC .
   16 ENSDEC: ENSDEC . DEC

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 15 (DECS)

    TYPE  go to state 19
    DEC   go to state 47


state 22

   17 ENSDEC: DEC .

    $default  reduce using rule 17 (ENSDEC)


state 23

    8 FCT: TYPE mc_rtin idf po . IDFS pf DECS ENSINST assignment mc_endr
    9    | TYPE mc_rtin idf po . IDFS pf DECS assignment mc_endr

    idf  shift, and go to state 48

    $default  reduce using rule 5 (VIDE)

    VIDE    go to state 49
    IDFS    go to state 50
    ENSIDF  go to state 51


state 24

   20 DEC: TYPE idf . $@1 mul inti pvg
   21    | TYPE idf . mc_dim po TAILLE pf pvg
   25 ENSIDF_dec: idf . partie_gauch_affectation

    aff     shift, and go to state 52
    mc_dim  shift, and go to state 53

    mul       reduce using rule 19 ($@1)
    $default  reduce using rule 5 (VIDE)

    VIDE                      go to state 54
    $@1                       go to state 55
    partie_gauch_affectation  go to state 56


state 25

   18 DEC: TYPE ENSIDF_dec . pvg
   24 ENSIDF_dec: ENSIDF_dec . verg idf partie_gauch_affectation

    pvg   shift, and go to state 57
    verg  shift, and go to state 58


state 26

   77 var: idf .
   78    | idf . po TAILLE pf

    po  shift, and go to state 59

    $default  reduce using rule 77 (var)


state 27

   87 read_statement: mc_read . po var pf pvg

    po  shift, and go to state 60


state 28

   88 write_statement: mc_write . po ENS_PARA_WRITE pf pvg

    po  shift, and go to state 61


state 29

   81 A_if: mc_if . po CONDI pf

    po  shift, and go to state 62


state 30

   95 A_while: mc_dowhile .

    $default  reduce using rule 95 (A_while)


state 31

   70 eqival_statement: mc_equival . ens_list_vars pvg

    po  shift, and go to state 63

    $default  reduce using rule 5 (VIDE)

    VIDE           go to state 64
    ens_list_vars  go to state 65
    ens_list_var   go to state 66


state 32

   60 INSTS: VIDE .

    $default  reduce using rule 60 (INSTS)


state 33

    2 PRGM_PRIN: mc_prgrm idf DECS INSTS . mc_end

    mc_end  shift, and go to state 67


state 34

   61 INSTS: ENSINST .
   62 ENSINST: ENSINST . INST

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    $default  reduce using rule 61 (INSTS)

    INST               go to state 68
    eqival_statement   go to state 36
    var                go to state 37
    if_statement       go to state 38
    B_if               go to state 39
    A_if               go to state 40
    assignment         go to state 41
    read_statement     go to state 42
    write_statement    go to state 43
    dowhile_statement  go to state 44
    B_while            go to state 45
    A_while            go to state 46


state 35

   63 ENSINST: INST .

    $default  reduce using rule 63 (ENSINST)


state 36

   69 INST: eqival_statement .

    $default  reduce using rule 69 (INST)


state 37

   84 assignment: var . aff valeur pvg

    aff  shift, and go to state 69


state 38

   64 INST: if_statement .

    $default  reduce using rule 64 (INST)


state 39

   79 if_statement: B_if . else_clause mc_endif

    mc_else  shift, and go to state 70

    $default  reduce using rule 5 (VIDE)

    VIDE         go to state 71
    else_clause  go to state 72


state 40

   80 B_if: A_if . mc_then ENSINST

    mc_then  shift, and go to state 73


state 41

   68 INST: assignment .

    $default  reduce using rule 68 (INST)


state 42

   65 INST: read_statement .

    $default  reduce using rule 65 (INST)


state 43

   66 INST: write_statement .

    $default  reduce using rule 66 (INST)


state 44

   67 INST: dowhile_statement .

    $default  reduce using rule 67 (INST)


state 45

   93 dowhile_statement: B_while . ENSINST mc_enddo

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    ENSINST            go to state 74
    INST               go to state 35
    eqival_statement   go to state 36
    var                go to state 37
    if_statement       go to state 38
    B_if               go to state 39
    A_if               go to state 40
    assignment         go to state 41
    read_statement     go to state 42
    write_statement    go to state 43
    dowhile_statement  go to state 44
    B_while            go to state 45
    A_while            go to state 46


state 46

   94 B_while: A_while . po CONDI pf

    po  shift, and go to state 75


state 47

   16 ENSDEC: ENSDEC DEC .

    $default  reduce using rule 16 (ENSDEC)


state 48

   59 ENSIDF: idf .

    $default  reduce using rule 59 (ENSIDF)


state 49

   57 IDFS: VIDE .

    $default  reduce using rule 57 (IDFS)


state 50

    8 FCT: TYPE mc_rtin idf po IDFS . pf DECS ENSINST assignment mc_endr
    9    | TYPE mc_rtin idf po IDFS . pf DECS assignment mc_endr

    pf  shift, and go to state 76


state 51

   56 IDFS: ENSIDF .
   58 ENSIDF: ENSIDF . verg idf

    verg  shift, and go to state 77

    $default  reduce using rule 56 (IDFS)


state 52

   22 partie_gauch_affectation: aff . valeur

    idf       shift, and go to state 78
    inti      shift, and go to state 79
    real      shift, and go to state 80
    mc_call   shift, and go to state 81
    mc_true   shift, and go to state 82
    mc_false  shift, and go to state 83
    str       shift, and go to state 84
    po        shift, and go to state 85

    EXPRE    go to state 86
    CONDIT   go to state 87
    EXPREt   go to state 88
    TERM     go to state 89
    FACTOR   go to state 90
    OPERAND  go to state 91
    LOGI     go to state 92
    valeur   go to state 93


state 53

   21 DEC: TYPE idf mc_dim . po TAILLE pf pvg

    po  shift, and go to state 94


state 54

   23 partie_gauch_affectation: VIDE .

    $default  reduce using rule 23 (partie_gauch_affectation)


state 55

   20 DEC: TYPE idf $@1 . mul inti pvg

    mul  shift, and go to state 95


state 56

   25 ENSIDF_dec: idf partie_gauch_affectation .

    $default  reduce using rule 25 (ENSIDF_dec)


state 57

   18 DEC: TYPE ENSIDF_dec pvg .

    $default  reduce using rule 18 (DEC)


state 58

   24 ENSIDF_dec: ENSIDF_dec verg . idf partie_gauch_affectation

    idf  shift, and go to state 96


state 59

   78 var: idf po . TAILLE pf

    inti  shift, and go to state 97

    TAILLE  go to state 98


state 60

   87 read_statement: mc_read po . var pf pvg

    idf  shift, and go to state 26

    var  go to state 99


state 61

   88 write_statement: mc_write po . ENS_PARA_WRITE pf pvg

    idf  shift, and go to state 26
    str  shift, and go to state 100

    var             go to state 101
    ENS_PARA_WRITE  go to state 102


state 62

   81 A_if: mc_if po . CONDI pf

    idf       shift, and go to state 78
    inti      shift, and go to state 79
    real      shift, and go to state 80
    mc_call   shift, and go to state 81
    mc_true   shift, and go to state 82
    mc_false  shift, and go to state 83
    po        shift, and go to state 85

    EXPRE    go to state 103
    CONDIT   go to state 87
    EXPREt   go to state 88
    TERM     go to state 89
    FACTOR   go to state 90
    OPERAND  go to state 91
    LOGI     go to state 92
    CONDI    go to state 104


state 63

   74 ens_list_var: po . list_var pf

    idf  shift, and go to state 26

    list_var  go to state 105
    var       go to state 106


state 64

   72 ens_list_vars: VIDE .

    $default  reduce using rule 72 (ens_list_vars)


state 65

   70 eqival_statement: mc_equival ens_list_vars . pvg

    pvg  shift, and go to state 107


state 66

   71 ens_list_vars: ens_list_var .
   73 ens_list_var: ens_list_var . verg po list_var pf

    verg  shift, and go to state 108

    $default  reduce using rule 71 (ens_list_vars)


state 67

    2 PRGM_PRIN: mc_prgrm idf DECS INSTS mc_end .

    $default  reduce using rule 2 (PRGM_PRIN)


state 68

   62 ENSINST: ENSINST INST .

    $default  reduce using rule 62 (ENSINST)


state 69

   84 assignment: var aff . valeur pvg

    idf       shift, and go to state 78
    inti      shift, and go to state 79
    real      shift, and go to state 80
    mc_call   shift, and go to state 81
    mc_true   shift, and go to state 82
    mc_false  shift, and go to state 83
    str       shift, and go to state 84
    po        shift, and go to state 85

    EXPRE    go to state 86
    CONDIT   go to state 87
    EXPREt   go to state 88
    TERM     go to state 89
    FACTOR   go to state 90
    OPERAND  go to state 91
    LOGI     go to state 92
    valeur   go to state 109


state 70

   82 else_clause: mc_else . ENSINST

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    ENSINST            go to state 110
    INST               go to state 35
    eqival_statement   go to state 36
    var                go to state 37
    if_statement       go to state 38
    B_if               go to state 39
    A_if               go to state 40
    assignment         go to state 41
    read_statement     go to state 42
    write_statement    go to state 43
    dowhile_statement  go to state 44
    B_while            go to state 45
    A_while            go to state 46


state 71

   83 else_clause: VIDE .

    $default  reduce using rule 83 (else_clause)


state 72

   79 if_statement: B_if else_clause . mc_endif

    mc_endif  shift, and go to state 111


state 73

   80 B_if: A_if mc_then . ENSINST

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    ENSINST            go to state 112
    INST               go to state 35
    eqival_statement   go to state 36
    var                go to state 37
    if_statement       go to state 38
    B_if               go to state 39
    A_if               go to state 40
    assignment         go to state 41
    read_statement     go to state 42
    write_statement    go to state 43
    dowhile_statement  go to state 44
    B_while            go to state 45
    A_while            go to state 46


state 74

   62 ENSINST: ENSINST . INST
   93 dowhile_statement: B_while ENSINST . mc_enddo

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_enddo    shift, and go to state 113
    mc_equival  shift, and go to state 31

    INST               go to state 68
    eqival_statement   go to state 36
    var                go to state 37
    if_statement       go to state 38
    B_if               go to state 39
    A_if               go to state 40
    assignment         go to state 41
    read_statement     go to state 42
    write_statement    go to state 43
    dowhile_statement  go to state 44
    B_while            go to state 45
    A_while            go to state 46


state 75

   94 B_while: A_while po . CONDI pf

    idf       shift, and go to state 78
    inti      shift, and go to state 79
    real      shift, and go to state 80
    mc_call   shift, and go to state 81
    mc_true   shift, and go to state 82
    mc_false  shift, and go to state 83
    po        shift, and go to state 85

    EXPRE    go to state 103
    CONDIT   go to state 87
    EXPREt   go to state 88
    TERM     go to state 89
    FACTOR   go to state 90
    OPERAND  go to state 91
    LOGI     go to state 92
    CONDI    go to state 114


state 76

    8 FCT: TYPE mc_rtin idf po IDFS pf . DECS ENSINST assignment mc_endr
    9    | TYPE mc_rtin idf po IDFS pf . DECS assignment mc_endr

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 5 (VIDE)

    VIDE    go to state 18
    TYPE    go to state 19
    DECS    go to state 115
    ENSDEC  go to state 21
    DEC     go to state 22


state 77

   58 ENSIDF: ENSIDF verg . idf

    idf  shift, and go to state 116


state 78

   46 OPERAND: idf .
   50        | idf . po TAILLE pf

    po  shift, and go to state 117

    $default  reduce using rule 46 (OPERAND)


state 79

   48 OPERAND: inti .

    $default  reduce using rule 48 (OPERAND)


state 80

   49 OPERAND: real .

    $default  reduce using rule 49 (OPERAND)


state 81

   51 OPERAND: mc_call . idf po ENSpara pf

    idf  shift, and go to state 118


state 82

   54 LOGI: mc_true .

    $default  reduce using rule 54 (LOGI)


state 83

   55 LOGI: mc_false .

    $default  reduce using rule 55 (LOGI)


state 84

   85 valeur: str .

    $default  reduce using rule 85 (valeur)


state 85

   44 FACTOR: po . EXPRE pf

    idf       shift, and go to state 78
    inti      shift, and go to state 79
    real      shift, and go to state 80
    mc_call   shift, and go to state 81
    mc_true   shift, and go to state 82
    mc_false  shift, and go to state 83
    po        shift, and go to state 85

    EXPRE    go to state 119
    CONDIT   go to state 87
    EXPREt   go to state 88
    TERM     go to state 89
    FACTOR   go to state 90
    OPERAND  go to state 91
    LOGI     go to state 92


state 86

   28 EXPRE: EXPRE . mc_or CONDIT
   29      | EXPRE . mc_and CONDIT
   86 valeur: EXPRE .

    mc_or   shift, and go to state 120
    mc_and  shift, and go to state 121

    $default  reduce using rule 86 (valeur)


state 87

   30 EXPRE: CONDIT .
   31 CONDIT: CONDIT . lt EXPREt
   32       | CONDIT . gt EXPREt
   33       | CONDIT . ge EXPREt
   34       | CONDIT . eq EXPREt
   35       | CONDIT . ne EXPREt
   36       | CONDIT . le EXPREt

    ge  shift, and go to state 122
    eq  shift, and go to state 123
    ne  shift, and go to state 124
    le  shift, and go to state 125
    lt  shift, and go to state 126
    gt  shift, and go to state 127

    $default  reduce using rule 30 (EXPRE)


state 88

   37 CONDIT: EXPREt .
   38 EXPREt: EXPREt . add TERM
   39       | EXPREt . sub TERM

    add  shift, and go to state 128
    sub  shift, and go to state 129

    $default  reduce using rule 37 (CONDIT)


state 89

   40 EXPREt: TERM .
   41 TERM: TERM . mul FACTOR
   42     | TERM . divi FACTOR

    mul   shift, and go to state 130
    divi  shift, and go to state 131

    $default  reduce using rule 40 (EXPREt)


state 90

   43 TERM: FACTOR .

    $default  reduce using rule 43 (TERM)


state 91

   45 FACTOR: OPERAND .

    $default  reduce using rule 45 (FACTOR)


state 92

   47 OPERAND: LOGI .

    $default  reduce using rule 47 (OPERAND)


state 93

   22 partie_gauch_affectation: aff valeur .

    $default  reduce using rule 22 (partie_gauch_affectation)


state 94

   21 DEC: TYPE idf mc_dim po . TAILLE pf pvg

    inti  shift, and go to state 97

    TAILLE  go to state 132


state 95

   20 DEC: TYPE idf $@1 mul . inti pvg

    inti  shift, and go to state 133


state 96

   24 ENSIDF_dec: ENSIDF_dec verg idf . partie_gauch_affectation

    aff  shift, and go to state 52

    $default  reduce using rule 5 (VIDE)

    VIDE                      go to state 54
    partie_gauch_affectation  go to state 134


state 97

   27 TAILLE: inti .

    $default  reduce using rule 27 (TAILLE)


state 98

   26 TAILLE: TAILLE . verg inti
   78 var: idf po TAILLE . pf

    pf    shift, and go to state 135
    verg  shift, and go to state 136


state 99

   87 read_statement: mc_read po var . pf pvg

    pf  shift, and go to state 137


state 100

   91 ENS_PARA_WRITE: str .

    $default  reduce using rule 91 (ENS_PARA_WRITE)


state 101

   92 ENS_PARA_WRITE: var .

    $default  reduce using rule 92 (ENS_PARA_WRITE)


state 102

   88 write_statement: mc_write po ENS_PARA_WRITE . pf pvg
   89 ENS_PARA_WRITE: ENS_PARA_WRITE . verg str
   90               | ENS_PARA_WRITE . verg var

    pf    shift, and go to state 138
    verg  shift, and go to state 139


state 103

   28 EXPRE: EXPRE . mc_or CONDIT
   29      | EXPRE . mc_and CONDIT
   96 CONDI: EXPRE .

    mc_or   shift, and go to state 120
    mc_and  shift, and go to state 121

    $default  reduce using rule 96 (CONDI)


state 104

   81 A_if: mc_if po CONDI . pf

    pf  shift, and go to state 140


state 105

   74 ens_list_var: po list_var . pf
   75 list_var: list_var . verg var

    pf    shift, and go to state 141
    verg  shift, and go to state 142


state 106

   76 list_var: var .

    $default  reduce using rule 76 (list_var)


state 107

   70 eqival_statement: mc_equival ens_list_vars pvg .

    $default  reduce using rule 70 (eqival_statement)


state 108

   73 ens_list_var: ens_list_var verg . po list_var pf

    po  shift, and go to state 143


state 109

   84 assignment: var aff valeur . pvg

    pvg  shift, and go to state 144


state 110

   62 ENSINST: ENSINST . INST
   82 else_clause: mc_else ENSINST .

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    $default  reduce using rule 82 (else_clause)

    INST               go to state 68
    eqival_statement   go to state 36
    var                go to state 37
    if_statement       go to state 38
    B_if               go to state 39
    A_if               go to state 40
    assignment         go to state 41
    read_statement     go to state 42
    write_statement    go to state 43
    dowhile_statement  go to state 44
    B_while            go to state 45
    A_while            go to state 46


state 111

   79 if_statement: B_if else_clause mc_endif .

    $default  reduce using rule 79 (if_statement)


state 112

   62 ENSINST: ENSINST . INST
   80 B_if: A_if mc_then ENSINST .

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    $default  reduce using rule 80 (B_if)

    INST               go to state 68
    eqival_statement   go to state 36
    var                go to state 37
    if_statement       go to state 38
    B_if               go to state 39
    A_if               go to state 40
    assignment         go to state 41
    read_statement     go to state 42
    write_statement    go to state 43
    dowhile_statement  go to state 44
    B_while            go to state 45
    A_while            go to state 46


state 113

   93 dowhile_statement: B_while ENSINST mc_enddo .

    $default  reduce using rule 93 (dowhile_statement)


state 114

   94 B_while: A_while po CONDI . pf

    pf  shift, and go to state 145


state 115

    8 FCT: TYPE mc_rtin idf po IDFS pf DECS . ENSINST assignment mc_endr
    9    | TYPE mc_rtin idf po IDFS pf DECS . assignment mc_endr

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    ENSINST            go to state 146
    INST               go to state 35
    eqival_statement   go to state 36
    var                go to state 37
    if_statement       go to state 38
    B_if               go to state 39
    A_if               go to state 40
    assignment         go to state 147
    read_statement     go to state 42
    write_statement    go to state 43
    dowhile_statement  go to state 44
    B_while            go to state 45
    A_while            go to state 46


state 116

   58 ENSIDF: ENSIDF verg idf .

    $default  reduce using rule 58 (ENSIDF)


state 117

   50 OPERAND: idf po . TAILLE pf

    inti  shift, and go to state 97

    TAILLE  go to state 148


state 118

   51 OPERAND: mc_call idf . po ENSpara pf

    po  shift, and go to state 149


state 119

   28 EXPRE: EXPRE . mc_or CONDIT
   29      | EXPRE . mc_and CONDIT
   44 FACTOR: po EXPRE . pf

    mc_or   shift, and go to state 120
    mc_and  shift, and go to state 121
    pf      shift, and go to state 150


state 120

   28 EXPRE: EXPRE mc_or . CONDIT

    idf       shift, and go to state 78
    inti      shift, and go to state 79
    real      shift, and go to state 80
    mc_call   shift, and go to state 81
    mc_true   shift, and go to state 82
    mc_false  shift, and go to state 83
    po        shift, and go to state 85

    CONDIT   go to state 151
    EXPREt   go to state 88
    TERM     go to state 89
    FACTOR   go to state 90
    OPERAND  go to state 91
    LOGI     go to state 92


state 121

   29 EXPRE: EXPRE mc_and . CONDIT

    idf       shift, and go to state 78
    inti      shift, and go to state 79
    real      shift, and go to state 80
    mc_call   shift, and go to state 81
    mc_true   shift, and go to state 82
    mc_false  shift, and go to state 83
    po        shift, and go to state 85

    CONDIT   go to state 152
    EXPREt   go to state 88
    TERM     go to state 89
    FACTOR   go to state 90
    OPERAND  go to state 91
    LOGI     go to state 92


state 122

   33 CONDIT: CONDIT ge . EXPREt

    idf       shift, and go to state 78
    inti      shift, and go to state 79
    real      shift, and go to state 80
    mc_call   shift, and go to state 81
    mc_true   shift, and go to state 82
    mc_false  shift, and go to state 83
    po        shift, and go to state 85

    EXPREt   go to state 153
    TERM     go to state 89
    FACTOR   go to state 90
    OPERAND  go to state 91
    LOGI     go to state 92


state 123

   34 CONDIT: CONDIT eq . EXPREt

    idf       shift, and go to state 78
    inti      shift, and go to state 79
    real      shift, and go to state 80
    mc_call   shift, and go to state 81
    mc_true   shift, and go to state 82
    mc_false  shift, and go to state 83
    po        shift, and go to state 85

    EXPREt   go to state 154
    TERM     go to state 89
    FACTOR   go to state 90
    OPERAND  go to state 91
    LOGI     go to state 92


state 124

   35 CONDIT: CONDIT ne . EXPREt

    idf       shift, and go to state 78
    inti      shift, and go to state 79
    real      shift, and go to state 80
    mc_call   shift, and go to state 81
    mc_true   shift, and go to state 82
    mc_false  shift, and go to state 83
    po        shift, and go to state 85

    EXPREt   go to state 155
    TERM     go to state 89
    FACTOR   go to state 90
    OPERAND  go to state 91
    LOGI     go to state 92


state 125

   36 CONDIT: CONDIT le . EXPREt

    idf       shift, and go to state 78
    inti      shift, and go to state 79
    real      shift, and go to state 80
    mc_call   shift, and go to state 81
    mc_true   shift, and go to state 82
    mc_false  shift, and go to state 83
    po        shift, and go to state 85

    EXPREt   go to state 156
    TERM     go to state 89
    FACTOR   go to state 90
    OPERAND  go to state 91
    LOGI     go to state 92


state 126

   31 CONDIT: CONDIT lt . EXPREt

    idf       shift, and go to state 78
    inti      shift, and go to state 79
    real      shift, and go to state 80
    mc_call   shift, and go to state 81
    mc_true   shift, and go to state 82
    mc_false  shift, and go to state 83
    po        shift, and go to state 85

    EXPREt   go to state 157
    TERM     go to state 89
    FACTOR   go to state 90
    OPERAND  go to state 91
    LOGI     go to state 92


state 127

   32 CONDIT: CONDIT gt . EXPREt

    idf       shift, and go to state 78
    inti      shift, and go to state 79
    real      shift, and go to state 80
    mc_call   shift, and go to state 81
    mc_true   shift, and go to state 82
    mc_false  shift, and go to state 83
    po        shift, and go to state 85

    EXPREt   go to state 158
    TERM     go to state 89
    FACTOR   go to state 90
    OPERAND  go to state 91
    LOGI     go to state 92


state 128

   38 EXPREt: EXPREt add . TERM

    idf       shift, and go to state 78
    inti      shift, and go to state 79
    real      shift, and go to state 80
    mc_call   shift, and go to state 81
    mc_true   shift, and go to state 82
    mc_false  shift, and go to state 83
    po        shift, and go to state 85

    TERM     go to state 159
    FACTOR   go to state 90
    OPERAND  go to state 91
    LOGI     go to state 92


state 129

   39 EXPREt: EXPREt sub . TERM

    idf       shift, and go to state 78
    inti      shift, and go to state 79
    real      shift, and go to state 80
    mc_call   shift, and go to state 81
    mc_true   shift, and go to state 82
    mc_false  shift, and go to state 83
    po        shift, and go to state 85

    TERM     go to state 160
    FACTOR   go to state 90
    OPERAND  go to state 91
    LOGI     go to state 92


state 130

   41 TERM: TERM mul . FACTOR

    idf       shift, and go to state 78
    inti      shift, and go to state 79
    real      shift, and go to state 80
    mc_call   shift, and go to state 81
    mc_true   shift, and go to state 82
    mc_false  shift, and go to state 83
    po        shift, and go to state 85

    FACTOR   go to state 161
    OPERAND  go to state 91
    LOGI     go to state 92


state 131

   42 TERM: TERM divi . FACTOR

    idf       shift, and go to state 78
    inti      shift, and go to state 79
    real      shift, and go to state 80
    mc_call   shift, and go to state 81
    mc_true   shift, and go to state 82
    mc_false  shift, and go to state 83
    po        shift, and go to state 85

    FACTOR   go to state 162
    OPERAND  go to state 91
    LOGI     go to state 92


state 132

   21 DEC: TYPE idf mc_dim po TAILLE . pf pvg
   26 TAILLE: TAILLE . verg inti

    pf    shift, and go to state 163
    verg  shift, and go to state 136


state 133

   20 DEC: TYPE idf $@1 mul inti . pvg

    pvg  shift, and go to state 164


state 134

   24 ENSIDF_dec: ENSIDF_dec verg idf partie_gauch_affectation .

    $default  reduce using rule 24 (ENSIDF_dec)


state 135

   78 var: idf po TAILLE pf .

    $default  reduce using rule 78 (var)


state 136

   26 TAILLE: TAILLE verg . inti

    inti  shift, and go to state 165


state 137

   87 read_statement: mc_read po var pf . pvg

    pvg  shift, and go to state 166


state 138

   88 write_statement: mc_write po ENS_PARA_WRITE pf . pvg

    pvg  shift, and go to state 167


state 139

   89 ENS_PARA_WRITE: ENS_PARA_WRITE verg . str
   90               | ENS_PARA_WRITE verg . var

    idf  shift, and go to state 26
    str  shift, and go to state 168

    var  go to state 169


state 140

   81 A_if: mc_if po CONDI pf .

    $default  reduce using rule 81 (A_if)


state 141

   74 ens_list_var: po list_var pf .

    $default  reduce using rule 74 (ens_list_var)


state 142

   75 list_var: list_var verg . var

    idf  shift, and go to state 26

    var  go to state 170


state 143

   73 ens_list_var: ens_list_var verg po . list_var pf

    idf  shift, and go to state 26

    list_var  go to state 171
    var       go to state 106


state 144

   84 assignment: var aff valeur pvg .

    $default  reduce using rule 84 (assignment)


state 145

   94 B_while: A_while po CONDI pf .

    $default  reduce using rule 94 (B_while)


state 146

    8 FCT: TYPE mc_rtin idf po IDFS pf DECS ENSINST . assignment mc_endr
   62 ENSINST: ENSINST . INST

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    INST               go to state 68
    eqival_statement   go to state 36
    var                go to state 37
    if_statement       go to state 38
    B_if               go to state 39
    A_if               go to state 40
    assignment         go to state 172
    read_statement     go to state 42
    write_statement    go to state 43
    dowhile_statement  go to state 44
    B_while            go to state 45
    A_while            go to state 46


state 147

    9 FCT: TYPE mc_rtin idf po IDFS pf DECS assignment . mc_endr
   68 INST: assignment .

    mc_endr  shift, and go to state 173

    $default  reduce using rule 68 (INST)


state 148

   26 TAILLE: TAILLE . verg inti
   50 OPERAND: idf po TAILLE . pf

    pf    shift, and go to state 174
    verg  shift, and go to state 136


state 149

   51 OPERAND: mc_call idf po . ENSpara pf

    idf       shift, and go to state 78
    inti      shift, and go to state 79
    real      shift, and go to state 80
    mc_call   shift, and go to state 81
    mc_true   shift, and go to state 82
    mc_false  shift, and go to state 83
    str       shift, and go to state 84
    po        shift, and go to state 85

    EXPRE    go to state 86
    CONDIT   go to state 87
    EXPREt   go to state 88
    TERM     go to state 89
    FACTOR   go to state 90
    OPERAND  go to state 91
    ENSpara  go to state 175
    LOGI     go to state 92
    valeur   go to state 176


state 150

   44 FACTOR: po EXPRE pf .

    $default  reduce using rule 44 (FACTOR)


state 151

   28 EXPRE: EXPRE mc_or CONDIT .
   31 CONDIT: CONDIT . lt EXPREt
   32       | CONDIT . gt EXPREt
   33       | CONDIT . ge EXPREt
   34       | CONDIT . eq EXPREt
   35       | CONDIT . ne EXPREt
   36       | CONDIT . le EXPREt

    ge  shift, and go to state 122
    eq  shift, and go to state 123
    ne  shift, and go to state 124
    le  shift, and go to state 125
    lt  shift, and go to state 126
    gt  shift, and go to state 127

    $default  reduce using rule 28 (EXPRE)


state 152

   29 EXPRE: EXPRE mc_and CONDIT .
   31 CONDIT: CONDIT . lt EXPREt
   32       | CONDIT . gt EXPREt
   33       | CONDIT . ge EXPREt
   34       | CONDIT . eq EXPREt
   35       | CONDIT . ne EXPREt
   36       | CONDIT . le EXPREt

    ge  shift, and go to state 122
    eq  shift, and go to state 123
    ne  shift, and go to state 124
    le  shift, and go to state 125
    lt  shift, and go to state 126
    gt  shift, and go to state 127

    $default  reduce using rule 29 (EXPRE)


state 153

   33 CONDIT: CONDIT ge EXPREt .
   38 EXPREt: EXPREt . add TERM
   39       | EXPREt . sub TERM

    add  shift, and go to state 128
    sub  shift, and go to state 129

    $default  reduce using rule 33 (CONDIT)


state 154

   34 CONDIT: CONDIT eq EXPREt .
   38 EXPREt: EXPREt . add TERM
   39       | EXPREt . sub TERM

    add  shift, and go to state 128
    sub  shift, and go to state 129

    $default  reduce using rule 34 (CONDIT)


state 155

   35 CONDIT: CONDIT ne EXPREt .
   38 EXPREt: EXPREt . add TERM
   39       | EXPREt . sub TERM

    add  shift, and go to state 128
    sub  shift, and go to state 129

    $default  reduce using rule 35 (CONDIT)


state 156

   36 CONDIT: CONDIT le EXPREt .
   38 EXPREt: EXPREt . add TERM
   39       | EXPREt . sub TERM

    add  shift, and go to state 128
    sub  shift, and go to state 129

    $default  reduce using rule 36 (CONDIT)


state 157

   31 CONDIT: CONDIT lt EXPREt .
   38 EXPREt: EXPREt . add TERM
   39       | EXPREt . sub TERM

    add  shift, and go to state 128
    sub  shift, and go to state 129

    $default  reduce using rule 31 (CONDIT)


state 158

   32 CONDIT: CONDIT gt EXPREt .
   38 EXPREt: EXPREt . add TERM
   39       | EXPREt . sub TERM

    add  shift, and go to state 128
    sub  shift, and go to state 129

    $default  reduce using rule 32 (CONDIT)


state 159

   38 EXPREt: EXPREt add TERM .
   41 TERM: TERM . mul FACTOR
   42     | TERM . divi FACTOR

    mul   shift, and go to state 130
    divi  shift, and go to state 131

    $default  reduce using rule 38 (EXPREt)


state 160

   39 EXPREt: EXPREt sub TERM .
   41 TERM: TERM . mul FACTOR
   42     | TERM . divi FACTOR

    mul   shift, and go to state 130
    divi  shift, and go to state 131

    $default  reduce using rule 39 (EXPREt)


state 161

   41 TERM: TERM mul FACTOR .

    $default  reduce using rule 41 (TERM)


state 162

   42 TERM: TERM divi FACTOR .

    $default  reduce using rule 42 (TERM)


state 163

   21 DEC: TYPE idf mc_dim po TAILLE pf . pvg

    pvg  shift, and go to state 177


state 164

   20 DEC: TYPE idf $@1 mul inti pvg .

    $default  reduce using rule 20 (DEC)


state 165

   26 TAILLE: TAILLE verg inti .

    $default  reduce using rule 26 (TAILLE)


state 166

   87 read_statement: mc_read po var pf pvg .

    $default  reduce using rule 87 (read_statement)


state 167

   88 write_statement: mc_write po ENS_PARA_WRITE pf pvg .

    $default  reduce using rule 88 (write_statement)


state 168

   89 ENS_PARA_WRITE: ENS_PARA_WRITE verg str .

    $default  reduce using rule 89 (ENS_PARA_WRITE)


state 169

   90 ENS_PARA_WRITE: ENS_PARA_WRITE verg var .

    $default  reduce using rule 90 (ENS_PARA_WRITE)


state 170

   75 list_var: list_var verg var .

    $default  reduce using rule 75 (list_var)


state 171

   73 ens_list_var: ens_list_var verg po list_var . pf
   75 list_var: list_var . verg var

    pf    shift, and go to state 178
    verg  shift, and go to state 142


state 172

    8 FCT: TYPE mc_rtin idf po IDFS pf DECS ENSINST assignment . mc_endr
   68 INST: assignment .

    mc_endr  shift, and go to state 179

    $default  reduce using rule 68 (INST)


state 173

    9 FCT: TYPE mc_rtin idf po IDFS pf DECS assignment mc_endr .

    $default  reduce using rule 9 (FCT)


state 174

   50 OPERAND: idf po TAILLE pf .

    $default  reduce using rule 50 (OPERAND)


state 175

   51 OPERAND: mc_call idf po ENSpara . pf
   52 ENSpara: ENSpara . verg valeur

    pf    shift, and go to state 180
    verg  shift, and go to state 181


state 176

   53 ENSpara: valeur .

    $default  reduce using rule 53 (ENSpara)


state 177

   21 DEC: TYPE idf mc_dim po TAILLE pf pvg .

    $default  reduce using rule 21 (DEC)


state 178

   73 ens_list_var: ens_list_var verg po list_var pf .

    $default  reduce using rule 73 (ens_list_var)


state 179

    8 FCT: TYPE mc_rtin idf po IDFS pf DECS ENSINST assignment mc_endr .

    $default  reduce using rule 8 (FCT)


state 180

   51 OPERAND: mc_call idf po ENSpara pf .

    $default  reduce using rule 51 (OPERAND)


state 181

   52 ENSpara: ENSpara verg . valeur

    idf       shift, and go to state 78
    inti      shift, and go to state 79
    real      shift, and go to state 80
    mc_call   shift, and go to state 81
    mc_true   shift, and go to state 82
    mc_false  shift, and go to state 83
    str       shift, and go to state 84
    po        shift, and go to state 85

    EXPRE    go to state 86
    CONDIT   go to state 87
    EXPREt   go to state 88
    TERM     go to state 89
    FACTOR   go to state 90
    OPERAND  go to state 91
    LOGI     go to state 92
    valeur   go to state 182


state 182

   52 ENSpara: ENSpara verg valeur .

    $default  reduce using rule 52 (ENSpara)
