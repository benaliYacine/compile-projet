Terminals unused in grammar

   err


Grammar

    0 $accept: s $end

    1 s: FCTS PRGM_PRIN

    2 PRGM_PRIN: mc_prgrm idf DECS INSTS mc_end

    3 FCTS: VIDE
    4     | ENSFCT

    5 VIDE: /* empty */

    6 ENSFCT: ENSFCT FCT
    7       | FCT

    8 FCT: TYPE mc_rtin idf po IDFS pf DECS ENSINST assignment mc_endr
    9    | TYPE mc_rtin idf po IDFS pf DECS assignment mc_endr

   10 TYPE: mc_int
   11     | mc_real
   12     | mc_char
   13     | mc_logi

   14 DECS: VIDE
   15     | ENSDEC

   16 ENSDEC: ENSDEC DEC
   17       | DEC

   18 DEC: TYPE ENSIDF_dec pvg

   19 $@1: /* empty */

   20 DEC: TYPE idf $@1 mul inti pvg
   21    | TYPE idf mc_dim po TAILLE pf pvg

   22 partie_gauch_affectation: aff valeur
   23                         | VIDE

   24 ENSIDF_dec: ENSIDF_dec verg idf partie_gauch_affectation
   25           | idf partie_gauch_affectation

   26 TAILLE: TAILLE verg inti
   27       | inti

   28 EXPRE: EXPRE add TERM
   29      | EXPRE sub TERM
   30      | TERM

   31 TERM: TERM mul FACTOR
   32     | TERM divi FACTOR
   33     | FACTOR

   34 FACTOR: po EXPRE pf
   35       | OPERAND

   36 OPERAND: idf
   37        | LOGI
   38        | inti
   39        | real
   40        | idf po TAILLE pf
   41        | mc_call idf po ENSpara pf

   42 ENSpara: ENSpara verg valeur
   43        | valeur

   44 LOGI: mc_true
   45     | mc_false

   46 IDFS: ENSIDF
   47     | VIDE

   48 ENSIDF: ENSIDF verg idf
   49       | idf

   50 INSTS: VIDE
   51      | ENSINST

   52 ENSINST: ENSINST INST
   53        | INST

   54 INST: if_statement
   55     | read_statement
   56     | write_statement
   57     | dowhile_statement
   58     | assignment
   59     | eqival_statement

   60 eqival_statement: mc_equival ens_list_vars pvg

   61 ens_list_vars: ens_list_var
   62              | VIDE

   63 ens_list_var: ens_list_var verg po list_var pf
   64             | po list_var pf

   65 list_var: list_var verg var
   66         | var

   67 var: idf
   68    | idf po ENSpara pf

   69 if_statement: mc_if po CONDI pf mc_then ENSINST else_clause mc_endif

   70 else_clause: mc_else ENSINST
   71            | /* empty */

   72 assignment: OGassi aff valeur pvg

   73 OGassi: idf
   74       | idf po ENSpara pf

   75 valeur: str
   76       | EXPRE

   77 read_statement: mc_read po var pf pvg

   78 write_statement: mc_write po ENS_PARA_WRITE pf pvg

   79 ENS_PARA_WRITE: ENS_PARA_WRITE verg str
   80               | ENS_PARA_WRITE verg var
   81               | str
   82               | var

   83 dowhile_statement: mc_dowhile po CONDI pf ENSINST mc_enddo

   84 CONDI: CONDI mc_or CONDIT
   85      | CONDI mc_and CONDIT
   86      | CONDIT

   87 CONDIT: po CONDI pf
   88       | EXPLOGI

   89 EXPLOGI: EXPRE lt EXPRE
   90        | EXPRE gt EXPRE
   91        | EXPRE ge EXPRE
   92        | EXPRE eq EXPRE
   93        | EXPRE ne EXPRE
   94        | EXPRE le EXPRE


Terminals, with rules where they appear

$end (0) 0
error (256)
idf (258) 2 8 9 20 21 24 25 36 40 41 48 49 67 68 73 74
aff (259) 22 72
mc_prgrm (260) 2
mc_rtin (261) 8 9
inti (262) 20 26 27 38
real (263) 39
mc_endr (264) 8 9
mc_call (265) 41
mc_dim (266) 21
mc_logi (267) 13
mc_char (268) 12
mc_true (269) 44
mc_false (270) 45
mc_read (271) 77
mc_write (272) 78
pvg (273) 18 20 21 60 72 77 78
str (274) 75 79 81
mc_int (275) 10
mc_real (276) 11
mc_end (277) 2
mc_if (278) 69
mc_then (279) 69
mc_else (280) 70
mc_dowhile (281) 83
mc_enddo (282) 83
mc_equival (283) 60
mc_or (284) 84
ge (285) 91
eq (286) 92
ne (287) 93
le (288) 94
add (289) 28
sub (290) 29
mul (291) 20 31
divi (292) 32
mc_and (293) 85
mc_endif (294) 69
lt (295) 89
gt (296) 90
po (297) 8 9 21 34 40 41 63 64 68 69 74 77 78 83 87
pf (298) 8 9 21 34 40 41 63 64 68 69 74 77 78 83 87
verg (299) 24 26 42 48 63 65 79 80
err (300)


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
s (47)
    on left: 1, on right: 0
PRGM_PRIN (48)
    on left: 2, on right: 1
FCTS (49)
    on left: 3 4, on right: 1
VIDE (50)
    on left: 5, on right: 3 14 23 47 50 62
ENSFCT (51)
    on left: 6 7, on right: 4 6
FCT (52)
    on left: 8 9, on right: 6 7
TYPE (53)
    on left: 10 11 12 13, on right: 8 9 18 20 21
DECS (54)
    on left: 14 15, on right: 2 8 9
ENSDEC (55)
    on left: 16 17, on right: 15 16
DEC (56)
    on left: 18 20 21, on right: 16 17
$@1 (57)
    on left: 19, on right: 20
partie_gauch_affectation (58)
    on left: 22 23, on right: 24 25
ENSIDF_dec (59)
    on left: 24 25, on right: 18 24
TAILLE (60)
    on left: 26 27, on right: 21 26 40
EXPRE (61)
    on left: 28 29 30, on right: 28 29 34 76 89 90 91 92 93 94
TERM (62)
    on left: 31 32 33, on right: 28 29 30 31 32
FACTOR (63)
    on left: 34 35, on right: 31 32 33
OPERAND (64)
    on left: 36 37 38 39 40 41, on right: 35
ENSpara (65)
    on left: 42 43, on right: 41 42 68 74
LOGI (66)
    on left: 44 45, on right: 37
IDFS (67)
    on left: 46 47, on right: 8 9
ENSIDF (68)
    on left: 48 49, on right: 46 48
INSTS (69)
    on left: 50 51, on right: 2
ENSINST (70)
    on left: 52 53, on right: 8 51 52 69 70 83
INST (71)
    on left: 54 55 56 57 58 59, on right: 52 53
eqival_statement (72)
    on left: 60, on right: 59
ens_list_vars (73)
    on left: 61 62, on right: 60
ens_list_var (74)
    on left: 63 64, on right: 61 63
list_var (75)
    on left: 65 66, on right: 63 64 65
var (76)
    on left: 67 68, on right: 65 66 77 80 82
if_statement (77)
    on left: 69, on right: 54
else_clause (78)
    on left: 70 71, on right: 69
assignment (79)
    on left: 72, on right: 8 9 58
OGassi (80)
    on left: 73 74, on right: 72
valeur (81)
    on left: 75 76, on right: 22 42 43 72
read_statement (82)
    on left: 77, on right: 55
write_statement (83)
    on left: 78, on right: 56
ENS_PARA_WRITE (84)
    on left: 79 80 81 82, on right: 78 79 80
dowhile_statement (85)
    on left: 83, on right: 57
CONDI (86)
    on left: 84 85 86, on right: 69 83 84 85 87
CONDIT (87)
    on left: 87 88, on right: 84 85 86
EXPLOGI (88)
    on left: 89 90 91 92 93 94, on right: 88


state 0

    0 $accept: . s $end

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 5 (VIDE)

    s       go to state 5
    FCTS    go to state 6
    VIDE    go to state 7
    ENSFCT  go to state 8
    FCT     go to state 9
    TYPE    go to state 10


state 1

   13 TYPE: mc_logi .

    $default  reduce using rule 13 (TYPE)


state 2

   12 TYPE: mc_char .

    $default  reduce using rule 12 (TYPE)


state 3

   10 TYPE: mc_int .

    $default  reduce using rule 10 (TYPE)


state 4

   11 TYPE: mc_real .

    $default  reduce using rule 11 (TYPE)


state 5

    0 $accept: s . $end

    $end  shift, and go to state 11


state 6

    1 s: FCTS . PRGM_PRIN

    mc_prgrm  shift, and go to state 12

    PRGM_PRIN  go to state 13


state 7

    3 FCTS: VIDE .

    $default  reduce using rule 3 (FCTS)


state 8

    4 FCTS: ENSFCT .
    6 ENSFCT: ENSFCT . FCT

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 4 (FCTS)

    FCT   go to state 14
    TYPE  go to state 10


state 9

    7 ENSFCT: FCT .

    $default  reduce using rule 7 (ENSFCT)


state 10

    8 FCT: TYPE . mc_rtin idf po IDFS pf DECS ENSINST assignment mc_endr
    9    | TYPE . mc_rtin idf po IDFS pf DECS assignment mc_endr

    mc_rtin  shift, and go to state 15


state 11

    0 $accept: s $end .

    $default  accept


state 12

    2 PRGM_PRIN: mc_prgrm . idf DECS INSTS mc_end

    idf  shift, and go to state 16


state 13

    1 s: FCTS PRGM_PRIN .

    $default  reduce using rule 1 (s)


state 14

    6 ENSFCT: ENSFCT FCT .

    $default  reduce using rule 6 (ENSFCT)


state 15

    8 FCT: TYPE mc_rtin . idf po IDFS pf DECS ENSINST assignment mc_endr
    9    | TYPE mc_rtin . idf po IDFS pf DECS assignment mc_endr

    idf  shift, and go to state 17


state 16

    2 PRGM_PRIN: mc_prgrm idf . DECS INSTS mc_end

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 5 (VIDE)

    VIDE    go to state 18
    TYPE    go to state 19
    DECS    go to state 20
    ENSDEC  go to state 21
    DEC     go to state 22


state 17

    8 FCT: TYPE mc_rtin idf . po IDFS pf DECS ENSINST assignment mc_endr
    9    | TYPE mc_rtin idf . po IDFS pf DECS assignment mc_endr

    po  shift, and go to state 23


state 18

   14 DECS: VIDE .

    $default  reduce using rule 14 (DECS)


state 19

   18 DEC: TYPE . ENSIDF_dec pvg
   20    | TYPE . idf $@1 mul inti pvg
   21    | TYPE . idf mc_dim po TAILLE pf pvg

    idf  shift, and go to state 24

    ENSIDF_dec  go to state 25


state 20

    2 PRGM_PRIN: mc_prgrm idf DECS . INSTS mc_end

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    $default  reduce using rule 5 (VIDE)

    VIDE               go to state 32
    INSTS              go to state 33
    ENSINST            go to state 34
    INST               go to state 35
    eqival_statement   go to state 36
    if_statement       go to state 37
    assignment         go to state 38
    OGassi             go to state 39
    read_statement     go to state 40
    write_statement    go to state 41
    dowhile_statement  go to state 42


state 21

   15 DECS: ENSDEC .
   16 ENSDEC: ENSDEC . DEC

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 15 (DECS)

    TYPE  go to state 19
    DEC   go to state 43


state 22

   17 ENSDEC: DEC .

    $default  reduce using rule 17 (ENSDEC)


state 23

    8 FCT: TYPE mc_rtin idf po . IDFS pf DECS ENSINST assignment mc_endr
    9    | TYPE mc_rtin idf po . IDFS pf DECS assignment mc_endr

    idf  shift, and go to state 44

    $default  reduce using rule 5 (VIDE)

    VIDE    go to state 45
    IDFS    go to state 46
    ENSIDF  go to state 47


state 24

   20 DEC: TYPE idf . $@1 mul inti pvg
   21    | TYPE idf . mc_dim po TAILLE pf pvg
   25 ENSIDF_dec: idf . partie_gauch_affectation

    aff     shift, and go to state 48
    mc_dim  shift, and go to state 49

    mul       reduce using rule 19 ($@1)
    $default  reduce using rule 5 (VIDE)

    VIDE                      go to state 50
    $@1                       go to state 51
    partie_gauch_affectation  go to state 52


state 25

   18 DEC: TYPE ENSIDF_dec . pvg
   24 ENSIDF_dec: ENSIDF_dec . verg idf partie_gauch_affectation

    pvg   shift, and go to state 53
    verg  shift, and go to state 54


state 26

   73 OGassi: idf .
   74       | idf . po ENSpara pf

    po  shift, and go to state 55

    $default  reduce using rule 73 (OGassi)


state 27

   77 read_statement: mc_read . po var pf pvg

    po  shift, and go to state 56


state 28

   78 write_statement: mc_write . po ENS_PARA_WRITE pf pvg

    po  shift, and go to state 57


state 29

   69 if_statement: mc_if . po CONDI pf mc_then ENSINST else_clause mc_endif

    po  shift, and go to state 58


state 30

   83 dowhile_statement: mc_dowhile . po CONDI pf ENSINST mc_enddo

    po  shift, and go to state 59


state 31

   60 eqival_statement: mc_equival . ens_list_vars pvg

    po  shift, and go to state 60

    $default  reduce using rule 5 (VIDE)

    VIDE           go to state 61
    ens_list_vars  go to state 62
    ens_list_var   go to state 63


state 32

   50 INSTS: VIDE .

    $default  reduce using rule 50 (INSTS)


state 33

    2 PRGM_PRIN: mc_prgrm idf DECS INSTS . mc_end

    mc_end  shift, and go to state 64


state 34

   51 INSTS: ENSINST .
   52 ENSINST: ENSINST . INST

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    $default  reduce using rule 51 (INSTS)

    INST               go to state 65
    eqival_statement   go to state 36
    if_statement       go to state 37
    assignment         go to state 38
    OGassi             go to state 39
    read_statement     go to state 40
    write_statement    go to state 41
    dowhile_statement  go to state 42


state 35

   53 ENSINST: INST .

    $default  reduce using rule 53 (ENSINST)


state 36

   59 INST: eqival_statement .

    $default  reduce using rule 59 (INST)


state 37

   54 INST: if_statement .

    $default  reduce using rule 54 (INST)


state 38

   58 INST: assignment .

    $default  reduce using rule 58 (INST)


state 39

   72 assignment: OGassi . aff valeur pvg

    aff  shift, and go to state 66


state 40

   55 INST: read_statement .

    $default  reduce using rule 55 (INST)


state 41

   56 INST: write_statement .

    $default  reduce using rule 56 (INST)


state 42

   57 INST: dowhile_statement .

    $default  reduce using rule 57 (INST)


state 43

   16 ENSDEC: ENSDEC DEC .

    $default  reduce using rule 16 (ENSDEC)


state 44

   49 ENSIDF: idf .

    $default  reduce using rule 49 (ENSIDF)


state 45

   47 IDFS: VIDE .

    $default  reduce using rule 47 (IDFS)


state 46

    8 FCT: TYPE mc_rtin idf po IDFS . pf DECS ENSINST assignment mc_endr
    9    | TYPE mc_rtin idf po IDFS . pf DECS assignment mc_endr

    pf  shift, and go to state 67


state 47

   46 IDFS: ENSIDF .
   48 ENSIDF: ENSIDF . verg idf

    verg  shift, and go to state 68

    $default  reduce using rule 46 (IDFS)


state 48

   22 partie_gauch_affectation: aff . valeur

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    str       shift, and go to state 75
    po        shift, and go to state 76

    EXPRE    go to state 77
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    LOGI     go to state 81
    valeur   go to state 82


state 49

   21 DEC: TYPE idf mc_dim . po TAILLE pf pvg

    po  shift, and go to state 83


state 50

   23 partie_gauch_affectation: VIDE .

    $default  reduce using rule 23 (partie_gauch_affectation)


state 51

   20 DEC: TYPE idf $@1 . mul inti pvg

    mul  shift, and go to state 84


state 52

   25 ENSIDF_dec: idf partie_gauch_affectation .

    $default  reduce using rule 25 (ENSIDF_dec)


state 53

   18 DEC: TYPE ENSIDF_dec pvg .

    $default  reduce using rule 18 (DEC)


state 54

   24 ENSIDF_dec: ENSIDF_dec verg . idf partie_gauch_affectation

    idf  shift, and go to state 85


state 55

   74 OGassi: idf po . ENSpara pf

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    str       shift, and go to state 75
    po        shift, and go to state 76

    EXPRE    go to state 77
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    ENSpara  go to state 86
    LOGI     go to state 81
    valeur   go to state 87


state 56

   77 read_statement: mc_read po . var pf pvg

    idf  shift, and go to state 88

    var  go to state 89


state 57

   78 write_statement: mc_write po . ENS_PARA_WRITE pf pvg

    idf  shift, and go to state 88
    str  shift, and go to state 90

    var             go to state 91
    ENS_PARA_WRITE  go to state 92


state 58

   69 if_statement: mc_if po . CONDI pf mc_then ENSINST else_clause mc_endif

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    po        shift, and go to state 93

    EXPRE    go to state 94
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    LOGI     go to state 81
    CONDI    go to state 95
    CONDIT   go to state 96
    EXPLOGI  go to state 97


state 59

   83 dowhile_statement: mc_dowhile po . CONDI pf ENSINST mc_enddo

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    po        shift, and go to state 93

    EXPRE    go to state 94
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    LOGI     go to state 81
    CONDI    go to state 98
    CONDIT   go to state 96
    EXPLOGI  go to state 97


state 60

   64 ens_list_var: po . list_var pf

    idf  shift, and go to state 88

    list_var  go to state 99
    var       go to state 100


state 61

   62 ens_list_vars: VIDE .

    $default  reduce using rule 62 (ens_list_vars)


state 62

   60 eqival_statement: mc_equival ens_list_vars . pvg

    pvg  shift, and go to state 101


state 63

   61 ens_list_vars: ens_list_var .
   63 ens_list_var: ens_list_var . verg po list_var pf

    verg  shift, and go to state 102

    $default  reduce using rule 61 (ens_list_vars)


state 64

    2 PRGM_PRIN: mc_prgrm idf DECS INSTS mc_end .

    $default  reduce using rule 2 (PRGM_PRIN)


state 65

   52 ENSINST: ENSINST INST .

    $default  reduce using rule 52 (ENSINST)


state 66

   72 assignment: OGassi aff . valeur pvg

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    str       shift, and go to state 75
    po        shift, and go to state 76

    EXPRE    go to state 77
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    LOGI     go to state 81
    valeur   go to state 103


state 67

    8 FCT: TYPE mc_rtin idf po IDFS pf . DECS ENSINST assignment mc_endr
    9    | TYPE mc_rtin idf po IDFS pf . DECS assignment mc_endr

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 5 (VIDE)

    VIDE    go to state 18
    TYPE    go to state 19
    DECS    go to state 104
    ENSDEC  go to state 21
    DEC     go to state 22


state 68

   48 ENSIDF: ENSIDF verg . idf

    idf  shift, and go to state 105


state 69

   36 OPERAND: idf .
   40        | idf . po TAILLE pf

    po  shift, and go to state 106

    $default  reduce using rule 36 (OPERAND)


state 70

   38 OPERAND: inti .

    $default  reduce using rule 38 (OPERAND)


state 71

   39 OPERAND: real .

    $default  reduce using rule 39 (OPERAND)


state 72

   41 OPERAND: mc_call . idf po ENSpara pf

    idf  shift, and go to state 107


state 73

   44 LOGI: mc_true .

    $default  reduce using rule 44 (LOGI)


state 74

   45 LOGI: mc_false .

    $default  reduce using rule 45 (LOGI)


state 75

   75 valeur: str .

    $default  reduce using rule 75 (valeur)


state 76

   34 FACTOR: po . EXPRE pf

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    po        shift, and go to state 76

    EXPRE    go to state 108
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    LOGI     go to state 81


state 77

   28 EXPRE: EXPRE . add TERM
   29      | EXPRE . sub TERM
   76 valeur: EXPRE .

    add  shift, and go to state 109
    sub  shift, and go to state 110

    $default  reduce using rule 76 (valeur)


state 78

   30 EXPRE: TERM .
   31 TERM: TERM . mul FACTOR
   32     | TERM . divi FACTOR

    mul   shift, and go to state 111
    divi  shift, and go to state 112

    $default  reduce using rule 30 (EXPRE)


state 79

   33 TERM: FACTOR .

    $default  reduce using rule 33 (TERM)


state 80

   35 FACTOR: OPERAND .

    $default  reduce using rule 35 (FACTOR)


state 81

   37 OPERAND: LOGI .

    $default  reduce using rule 37 (OPERAND)


state 82

   22 partie_gauch_affectation: aff valeur .

    $default  reduce using rule 22 (partie_gauch_affectation)


state 83

   21 DEC: TYPE idf mc_dim po . TAILLE pf pvg

    inti  shift, and go to state 113

    TAILLE  go to state 114


state 84

   20 DEC: TYPE idf $@1 mul . inti pvg

    inti  shift, and go to state 115


state 85

   24 ENSIDF_dec: ENSIDF_dec verg idf . partie_gauch_affectation

    aff  shift, and go to state 48

    $default  reduce using rule 5 (VIDE)

    VIDE                      go to state 50
    partie_gauch_affectation  go to state 116


state 86

   42 ENSpara: ENSpara . verg valeur
   74 OGassi: idf po ENSpara . pf

    pf    shift, and go to state 117
    verg  shift, and go to state 118


state 87

   43 ENSpara: valeur .

    $default  reduce using rule 43 (ENSpara)


state 88

   67 var: idf .
   68    | idf . po ENSpara pf

    po  shift, and go to state 119

    $default  reduce using rule 67 (var)


state 89

   77 read_statement: mc_read po var . pf pvg

    pf  shift, and go to state 120


state 90

   81 ENS_PARA_WRITE: str .

    $default  reduce using rule 81 (ENS_PARA_WRITE)


state 91

   82 ENS_PARA_WRITE: var .

    $default  reduce using rule 82 (ENS_PARA_WRITE)


state 92

   78 write_statement: mc_write po ENS_PARA_WRITE . pf pvg
   79 ENS_PARA_WRITE: ENS_PARA_WRITE . verg str
   80               | ENS_PARA_WRITE . verg var

    pf    shift, and go to state 121
    verg  shift, and go to state 122


state 93

   34 FACTOR: po . EXPRE pf
   87 CONDIT: po . CONDI pf

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    po        shift, and go to state 93

    EXPRE    go to state 123
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    LOGI     go to state 81
    CONDI    go to state 124
    CONDIT   go to state 96
    EXPLOGI  go to state 97


state 94

   28 EXPRE: EXPRE . add TERM
   29      | EXPRE . sub TERM
   89 EXPLOGI: EXPRE . lt EXPRE
   90        | EXPRE . gt EXPRE
   91        | EXPRE . ge EXPRE
   92        | EXPRE . eq EXPRE
   93        | EXPRE . ne EXPRE
   94        | EXPRE . le EXPRE

    ge   shift, and go to state 125
    eq   shift, and go to state 126
    ne   shift, and go to state 127
    le   shift, and go to state 128
    add  shift, and go to state 109
    sub  shift, and go to state 110
    lt   shift, and go to state 129
    gt   shift, and go to state 130


state 95

   69 if_statement: mc_if po CONDI . pf mc_then ENSINST else_clause mc_endif
   84 CONDI: CONDI . mc_or CONDIT
   85      | CONDI . mc_and CONDIT

    mc_or   shift, and go to state 131
    mc_and  shift, and go to state 132
    pf      shift, and go to state 133


state 96

   86 CONDI: CONDIT .

    $default  reduce using rule 86 (CONDI)


state 97

   88 CONDIT: EXPLOGI .

    $default  reduce using rule 88 (CONDIT)


state 98

   83 dowhile_statement: mc_dowhile po CONDI . pf ENSINST mc_enddo
   84 CONDI: CONDI . mc_or CONDIT
   85      | CONDI . mc_and CONDIT

    mc_or   shift, and go to state 131
    mc_and  shift, and go to state 132
    pf      shift, and go to state 134


state 99

   64 ens_list_var: po list_var . pf
   65 list_var: list_var . verg var

    pf    shift, and go to state 135
    verg  shift, and go to state 136


state 100

   66 list_var: var .

    $default  reduce using rule 66 (list_var)


state 101

   60 eqival_statement: mc_equival ens_list_vars pvg .

    $default  reduce using rule 60 (eqival_statement)


state 102

   63 ens_list_var: ens_list_var verg . po list_var pf

    po  shift, and go to state 137


state 103

   72 assignment: OGassi aff valeur . pvg

    pvg  shift, and go to state 138


state 104

    8 FCT: TYPE mc_rtin idf po IDFS pf DECS . ENSINST assignment mc_endr
    9    | TYPE mc_rtin idf po IDFS pf DECS . assignment mc_endr

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    ENSINST            go to state 139
    INST               go to state 35
    eqival_statement   go to state 36
    if_statement       go to state 37
    assignment         go to state 140
    OGassi             go to state 39
    read_statement     go to state 40
    write_statement    go to state 41
    dowhile_statement  go to state 42


state 105

   48 ENSIDF: ENSIDF verg idf .

    $default  reduce using rule 48 (ENSIDF)


state 106

   40 OPERAND: idf po . TAILLE pf

    inti  shift, and go to state 113

    TAILLE  go to state 141


state 107

   41 OPERAND: mc_call idf . po ENSpara pf

    po  shift, and go to state 142


state 108

   28 EXPRE: EXPRE . add TERM
   29      | EXPRE . sub TERM
   34 FACTOR: po EXPRE . pf

    add  shift, and go to state 109
    sub  shift, and go to state 110
    pf   shift, and go to state 143


state 109

   28 EXPRE: EXPRE add . TERM

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    po        shift, and go to state 76

    TERM     go to state 144
    FACTOR   go to state 79
    OPERAND  go to state 80
    LOGI     go to state 81


state 110

   29 EXPRE: EXPRE sub . TERM

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    po        shift, and go to state 76

    TERM     go to state 145
    FACTOR   go to state 79
    OPERAND  go to state 80
    LOGI     go to state 81


state 111

   31 TERM: TERM mul . FACTOR

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    po        shift, and go to state 76

    FACTOR   go to state 146
    OPERAND  go to state 80
    LOGI     go to state 81


state 112

   32 TERM: TERM divi . FACTOR

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    po        shift, and go to state 76

    FACTOR   go to state 147
    OPERAND  go to state 80
    LOGI     go to state 81


state 113

   27 TAILLE: inti .

    $default  reduce using rule 27 (TAILLE)


state 114

   21 DEC: TYPE idf mc_dim po TAILLE . pf pvg
   26 TAILLE: TAILLE . verg inti

    pf    shift, and go to state 148
    verg  shift, and go to state 149


state 115

   20 DEC: TYPE idf $@1 mul inti . pvg

    pvg  shift, and go to state 150


state 116

   24 ENSIDF_dec: ENSIDF_dec verg idf partie_gauch_affectation .

    $default  reduce using rule 24 (ENSIDF_dec)


state 117

   74 OGassi: idf po ENSpara pf .

    $default  reduce using rule 74 (OGassi)


state 118

   42 ENSpara: ENSpara verg . valeur

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    str       shift, and go to state 75
    po        shift, and go to state 76

    EXPRE    go to state 77
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    LOGI     go to state 81
    valeur   go to state 151


state 119

   68 var: idf po . ENSpara pf

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    str       shift, and go to state 75
    po        shift, and go to state 76

    EXPRE    go to state 77
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    ENSpara  go to state 152
    LOGI     go to state 81
    valeur   go to state 87


state 120

   77 read_statement: mc_read po var pf . pvg

    pvg  shift, and go to state 153


state 121

   78 write_statement: mc_write po ENS_PARA_WRITE pf . pvg

    pvg  shift, and go to state 154


state 122

   79 ENS_PARA_WRITE: ENS_PARA_WRITE verg . str
   80               | ENS_PARA_WRITE verg . var

    idf  shift, and go to state 88
    str  shift, and go to state 155

    var  go to state 156


state 123

   28 EXPRE: EXPRE . add TERM
   29      | EXPRE . sub TERM
   34 FACTOR: po EXPRE . pf
   89 EXPLOGI: EXPRE . lt EXPRE
   90        | EXPRE . gt EXPRE
   91        | EXPRE . ge EXPRE
   92        | EXPRE . eq EXPRE
   93        | EXPRE . ne EXPRE
   94        | EXPRE . le EXPRE

    ge   shift, and go to state 125
    eq   shift, and go to state 126
    ne   shift, and go to state 127
    le   shift, and go to state 128
    add  shift, and go to state 109
    sub  shift, and go to state 110
    lt   shift, and go to state 129
    gt   shift, and go to state 130
    pf   shift, and go to state 143


state 124

   84 CONDI: CONDI . mc_or CONDIT
   85      | CONDI . mc_and CONDIT
   87 CONDIT: po CONDI . pf

    mc_or   shift, and go to state 131
    mc_and  shift, and go to state 132
    pf      shift, and go to state 157


state 125

   91 EXPLOGI: EXPRE ge . EXPRE

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    po        shift, and go to state 76

    EXPRE    go to state 158
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    LOGI     go to state 81


state 126

   92 EXPLOGI: EXPRE eq . EXPRE

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    po        shift, and go to state 76

    EXPRE    go to state 159
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    LOGI     go to state 81


state 127

   93 EXPLOGI: EXPRE ne . EXPRE

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    po        shift, and go to state 76

    EXPRE    go to state 160
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    LOGI     go to state 81


state 128

   94 EXPLOGI: EXPRE le . EXPRE

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    po        shift, and go to state 76

    EXPRE    go to state 161
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    LOGI     go to state 81


state 129

   89 EXPLOGI: EXPRE lt . EXPRE

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    po        shift, and go to state 76

    EXPRE    go to state 162
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    LOGI     go to state 81


state 130

   90 EXPLOGI: EXPRE gt . EXPRE

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    po        shift, and go to state 76

    EXPRE    go to state 163
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    LOGI     go to state 81


state 131

   84 CONDI: CONDI mc_or . CONDIT

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    po        shift, and go to state 93

    EXPRE    go to state 94
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    LOGI     go to state 81
    CONDIT   go to state 164
    EXPLOGI  go to state 97


state 132

   85 CONDI: CONDI mc_and . CONDIT

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    po        shift, and go to state 93

    EXPRE    go to state 94
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    LOGI     go to state 81
    CONDIT   go to state 165
    EXPLOGI  go to state 97


state 133

   69 if_statement: mc_if po CONDI pf . mc_then ENSINST else_clause mc_endif

    mc_then  shift, and go to state 166


state 134

   83 dowhile_statement: mc_dowhile po CONDI pf . ENSINST mc_enddo

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    ENSINST            go to state 167
    INST               go to state 35
    eqival_statement   go to state 36
    if_statement       go to state 37
    assignment         go to state 38
    OGassi             go to state 39
    read_statement     go to state 40
    write_statement    go to state 41
    dowhile_statement  go to state 42


state 135

   64 ens_list_var: po list_var pf .

    $default  reduce using rule 64 (ens_list_var)


state 136

   65 list_var: list_var verg . var

    idf  shift, and go to state 88

    var  go to state 168


state 137

   63 ens_list_var: ens_list_var verg po . list_var pf

    idf  shift, and go to state 88

    list_var  go to state 169
    var       go to state 100


state 138

   72 assignment: OGassi aff valeur pvg .

    $default  reduce using rule 72 (assignment)


state 139

    8 FCT: TYPE mc_rtin idf po IDFS pf DECS ENSINST . assignment mc_endr
   52 ENSINST: ENSINST . INST

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    INST               go to state 65
    eqival_statement   go to state 36
    if_statement       go to state 37
    assignment         go to state 170
    OGassi             go to state 39
    read_statement     go to state 40
    write_statement    go to state 41
    dowhile_statement  go to state 42


state 140

    9 FCT: TYPE mc_rtin idf po IDFS pf DECS assignment . mc_endr
   58 INST: assignment .

    mc_endr  shift, and go to state 171

    $default  reduce using rule 58 (INST)


state 141

   26 TAILLE: TAILLE . verg inti
   40 OPERAND: idf po TAILLE . pf

    pf    shift, and go to state 172
    verg  shift, and go to state 149


state 142

   41 OPERAND: mc_call idf po . ENSpara pf

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    str       shift, and go to state 75
    po        shift, and go to state 76

    EXPRE    go to state 77
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    ENSpara  go to state 173
    LOGI     go to state 81
    valeur   go to state 87


state 143

   34 FACTOR: po EXPRE pf .

    $default  reduce using rule 34 (FACTOR)


state 144

   28 EXPRE: EXPRE add TERM .
   31 TERM: TERM . mul FACTOR
   32     | TERM . divi FACTOR

    mul   shift, and go to state 111
    divi  shift, and go to state 112

    $default  reduce using rule 28 (EXPRE)


state 145

   29 EXPRE: EXPRE sub TERM .
   31 TERM: TERM . mul FACTOR
   32     | TERM . divi FACTOR

    mul   shift, and go to state 111
    divi  shift, and go to state 112

    $default  reduce using rule 29 (EXPRE)


state 146

   31 TERM: TERM mul FACTOR .

    $default  reduce using rule 31 (TERM)


state 147

   32 TERM: TERM divi FACTOR .

    $default  reduce using rule 32 (TERM)


state 148

   21 DEC: TYPE idf mc_dim po TAILLE pf . pvg

    pvg  shift, and go to state 174


state 149

   26 TAILLE: TAILLE verg . inti

    inti  shift, and go to state 175


state 150

   20 DEC: TYPE idf $@1 mul inti pvg .

    $default  reduce using rule 20 (DEC)


state 151

   42 ENSpara: ENSpara verg valeur .

    $default  reduce using rule 42 (ENSpara)


state 152

   42 ENSpara: ENSpara . verg valeur
   68 var: idf po ENSpara . pf

    pf    shift, and go to state 176
    verg  shift, and go to state 118


state 153

   77 read_statement: mc_read po var pf pvg .

    $default  reduce using rule 77 (read_statement)


state 154

   78 write_statement: mc_write po ENS_PARA_WRITE pf pvg .

    $default  reduce using rule 78 (write_statement)


state 155

   79 ENS_PARA_WRITE: ENS_PARA_WRITE verg str .

    $default  reduce using rule 79 (ENS_PARA_WRITE)


state 156

   80 ENS_PARA_WRITE: ENS_PARA_WRITE verg var .

    $default  reduce using rule 80 (ENS_PARA_WRITE)


state 157

   87 CONDIT: po CONDI pf .

    $default  reduce using rule 87 (CONDIT)


state 158

   28 EXPRE: EXPRE . add TERM
   29      | EXPRE . sub TERM
   91 EXPLOGI: EXPRE ge EXPRE .

    add  shift, and go to state 109
    sub  shift, and go to state 110

    $default  reduce using rule 91 (EXPLOGI)


state 159

   28 EXPRE: EXPRE . add TERM
   29      | EXPRE . sub TERM
   92 EXPLOGI: EXPRE eq EXPRE .

    add  shift, and go to state 109
    sub  shift, and go to state 110

    $default  reduce using rule 92 (EXPLOGI)


state 160

   28 EXPRE: EXPRE . add TERM
   29      | EXPRE . sub TERM
   93 EXPLOGI: EXPRE ne EXPRE .

    add  shift, and go to state 109
    sub  shift, and go to state 110

    $default  reduce using rule 93 (EXPLOGI)


state 161

   28 EXPRE: EXPRE . add TERM
   29      | EXPRE . sub TERM
   94 EXPLOGI: EXPRE le EXPRE .

    add  shift, and go to state 109
    sub  shift, and go to state 110

    $default  reduce using rule 94 (EXPLOGI)


state 162

   28 EXPRE: EXPRE . add TERM
   29      | EXPRE . sub TERM
   89 EXPLOGI: EXPRE lt EXPRE .

    add  shift, and go to state 109
    sub  shift, and go to state 110

    $default  reduce using rule 89 (EXPLOGI)


state 163

   28 EXPRE: EXPRE . add TERM
   29      | EXPRE . sub TERM
   90 EXPLOGI: EXPRE gt EXPRE .

    add  shift, and go to state 109
    sub  shift, and go to state 110

    $default  reduce using rule 90 (EXPLOGI)


state 164

   84 CONDI: CONDI mc_or CONDIT .

    $default  reduce using rule 84 (CONDI)


state 165

   85 CONDI: CONDI mc_and CONDIT .

    $default  reduce using rule 85 (CONDI)


state 166

   69 if_statement: mc_if po CONDI pf mc_then . ENSINST else_clause mc_endif

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    ENSINST            go to state 177
    INST               go to state 35
    eqival_statement   go to state 36
    if_statement       go to state 37
    assignment         go to state 38
    OGassi             go to state 39
    read_statement     go to state 40
    write_statement    go to state 41
    dowhile_statement  go to state 42


state 167

   52 ENSINST: ENSINST . INST
   83 dowhile_statement: mc_dowhile po CONDI pf ENSINST . mc_enddo

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_enddo    shift, and go to state 178
    mc_equival  shift, and go to state 31

    INST               go to state 65
    eqival_statement   go to state 36
    if_statement       go to state 37
    assignment         go to state 38
    OGassi             go to state 39
    read_statement     go to state 40
    write_statement    go to state 41
    dowhile_statement  go to state 42


state 168

   65 list_var: list_var verg var .

    $default  reduce using rule 65 (list_var)


state 169

   63 ens_list_var: ens_list_var verg po list_var . pf
   65 list_var: list_var . verg var

    pf    shift, and go to state 179
    verg  shift, and go to state 136


state 170

    8 FCT: TYPE mc_rtin idf po IDFS pf DECS ENSINST assignment . mc_endr
   58 INST: assignment .

    mc_endr  shift, and go to state 180

    $default  reduce using rule 58 (INST)


state 171

    9 FCT: TYPE mc_rtin idf po IDFS pf DECS assignment mc_endr .

    $default  reduce using rule 9 (FCT)


state 172

   40 OPERAND: idf po TAILLE pf .

    $default  reduce using rule 40 (OPERAND)


state 173

   41 OPERAND: mc_call idf po ENSpara . pf
   42 ENSpara: ENSpara . verg valeur

    pf    shift, and go to state 181
    verg  shift, and go to state 118


state 174

   21 DEC: TYPE idf mc_dim po TAILLE pf pvg .

    $default  reduce using rule 21 (DEC)


state 175

   26 TAILLE: TAILLE verg inti .

    $default  reduce using rule 26 (TAILLE)


state 176

   68 var: idf po ENSpara pf .

    $default  reduce using rule 68 (var)


state 177

   52 ENSINST: ENSINST . INST
   69 if_statement: mc_if po CONDI pf mc_then ENSINST . else_clause mc_endif

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_else     shift, and go to state 182
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    $default  reduce using rule 71 (else_clause)

    INST               go to state 65
    eqival_statement   go to state 36
    if_statement       go to state 37
    else_clause        go to state 183
    assignment         go to state 38
    OGassi             go to state 39
    read_statement     go to state 40
    write_statement    go to state 41
    dowhile_statement  go to state 42


state 178

   83 dowhile_statement: mc_dowhile po CONDI pf ENSINST mc_enddo .

    $default  reduce using rule 83 (dowhile_statement)


state 179

   63 ens_list_var: ens_list_var verg po list_var pf .

    $default  reduce using rule 63 (ens_list_var)


state 180

    8 FCT: TYPE mc_rtin idf po IDFS pf DECS ENSINST assignment mc_endr .

    $default  reduce using rule 8 (FCT)


state 181

   41 OPERAND: mc_call idf po ENSpara pf .

    $default  reduce using rule 41 (OPERAND)


state 182

   70 else_clause: mc_else . ENSINST

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    ENSINST            go to state 184
    INST               go to state 35
    eqival_statement   go to state 36
    if_statement       go to state 37
    assignment         go to state 38
    OGassi             go to state 39
    read_statement     go to state 40
    write_statement    go to state 41
    dowhile_statement  go to state 42


state 183

   69 if_statement: mc_if po CONDI pf mc_then ENSINST else_clause . mc_endif

    mc_endif  shift, and go to state 185


state 184

   52 ENSINST: ENSINST . INST
   70 else_clause: mc_else ENSINST .

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    $default  reduce using rule 70 (else_clause)

    INST               go to state 65
    eqival_statement   go to state 36
    if_statement       go to state 37
    assignment         go to state 38
    OGassi             go to state 39
    read_statement     go to state 40
    write_statement    go to state 41
    dowhile_statement  go to state 42


state 185

   69 if_statement: mc_if po CONDI pf mc_then ENSINST else_clause mc_endif .

    $default  reduce using rule 69 (if_statement)
