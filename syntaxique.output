Terminals unused in grammar

   mc_equival
   err


State 148 conflicts: 1 shift/reduce


Grammar

    0 $accept: s $end

    1 s: FCTS PRGM_PRIN

    2 PRGM_PRIN: mc_prgrm idf DECS INSTS mc_end

    3 FCTS: VIDE
    4     | ENSFCT

    5 VIDE: /* empty */

    6 ENSFCT: ENSFCT FCT
    7       | FCT

    8 FCT: TYPE mc_rtin idf po ENSIDF pf DEC ENSINST idf aff idf pvg mc_endr

    9 TYPE: mc_int
   10     | mc_real
   11     | mc_char
   12     | mc_logi

   13 DECS: VIDE
   14     | ENSDEC

   15 ENSDEC: ENSDEC DEC
   16       | DEC

   17 DEC: TYPE ENSIDF pvg
   18    | TYPE idf mul inti pvg
   19    | TYPE idf mc_dim po TAILLE pf pvg

   20 TAILLE: TAILLE verg inti
   21       | inti

   22 EXPRE: EXPRE add TERM
   23      | EXPRE sub TERM
   24      | TERM

   25 TERM: TERM mul FACTOR
   26     | TERM divi FACTOR
   27     | FACTOR

   28 FACTOR: po EXPRE pf
   29       | OPERAND

   30 OPERAND: idf
   31        | inti
   32        | real
   33        | idf po TAILLE pf
   34        | mc_call idf po ENSIDF pf

   35 LOGI: mc_true
   36     | mc_false

   37 ENSIDF: ENSIDF verg idf
   38       | idf

   39 INSTS: VIDE
   40      | ENSINST

   41 ENSINST: ENSINST INST
   42        | INST

   43 INST: if_statement
   44     | read_statement
   45     | write_statement
   46     | dowhile_statement
   47     | assignment

   48 if_statement: mc_if po CONDI pf mc_then ENSINST else_clause mc_endif pvg

   49 else_clause: mc_else ENSINST
   50            | /* empty */

   51 assignment: idf aff assi pvg

   52 assi: LOGI
   53     | str
   54     | EXPRE

   55 read_statement: mc_read po idf pf pvg

   56 write_statement: mc_write po str verg ENSIDF pf pvg
   57                | mc_write po str pf pvg

   58 dowhile_statement: mc_dowhile po CONDI pf ENSINST mc_enddo pvg

   59 CONDI: CONDI mc_or CONDIT
   60      | CONDI mc_and CONDIT
   61      | CONDIT

   62 CONDIT: po CONDI pf
   63       | EXPLOGI

   64 EXPLOGI: EXPRE lt EXPRE
   65        | EXPRE gt EXPRE
   66        | EXPRE aff aff EXPRE
   67        | EXPRE ge EXPRE
   68        | EXPRE eq EXPRE
   69        | EXPRE ne EXPRE
   70        | EXPRE le EXPRE


Terminals, with rules where they appear

$end (0) 0
error (256)
idf (258) 2 8 18 19 30 33 34 37 38 51 55
aff (259) 8 51 66
mc_prgrm (260) 2
mc_rtin (261) 8
inti (262) 18 20 21 31
real (263) 32
mc_endr (264) 8
mc_call (265) 34
mc_dim (266) 19
mc_logi (267) 12
mc_char (268) 11
mc_true (269) 35
mc_false (270) 36
mc_read (271) 55
mc_write (272) 56 57
pvg (273) 8 17 18 19 48 51 55 56 57 58
str (274) 53 56 57
mc_int (275) 9
mc_real (276) 10
mc_end (277) 2
mc_if (278) 48
mc_then (279) 48
mc_else (280) 49
mc_dowhile (281) 58
mc_enddo (282) 58
mc_equival (283)
mc_or (284) 59
ge (285) 67
eq (286) 68
ne (287) 69
le (288) 70
add (289) 22
sub (290) 23
mul (291) 18 25
divi (292) 26
mc_and (293) 60
mc_endif (294) 48
lt (295) 64
gt (296) 65
po (297) 8 19 28 33 34 48 55 56 57 58 62
pf (298) 8 19 28 33 34 48 55 56 57 58 62
verg (299) 20 37 56
err (300)


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
s (47)
    on left: 1, on right: 0
PRGM_PRIN (48)
    on left: 2, on right: 1
FCTS (49)
    on left: 3 4, on right: 1
VIDE (50)
    on left: 5, on right: 3 13 39
ENSFCT (51)
    on left: 6 7, on right: 4 6
FCT (52)
    on left: 8, on right: 6 7
TYPE (53)
    on left: 9 10 11 12, on right: 8 17 18 19
DECS (54)
    on left: 13 14, on right: 2
ENSDEC (55)
    on left: 15 16, on right: 14 15
DEC (56)
    on left: 17 18 19, on right: 8 15 16
TAILLE (57)
    on left: 20 21, on right: 19 20 33
EXPRE (58)
    on left: 22 23 24, on right: 22 23 28 54 64 65 66 67 68 69 70
TERM (59)
    on left: 25 26 27, on right: 22 23 24 25 26
FACTOR (60)
    on left: 28 29, on right: 25 26 27
OPERAND (61)
    on left: 30 31 32 33 34, on right: 29
LOGI (62)
    on left: 35 36, on right: 52
ENSIDF (63)
    on left: 37 38, on right: 8 17 34 37 56
INSTS (64)
    on left: 39 40, on right: 2
ENSINST (65)
    on left: 41 42, on right: 8 40 41 48 49 58
INST (66)
    on left: 43 44 45 46 47, on right: 41 42
if_statement (67)
    on left: 48, on right: 43
else_clause (68)
    on left: 49 50, on right: 48
assignment (69)
    on left: 51, on right: 47
assi (70)
    on left: 52 53 54, on right: 51
read_statement (71)
    on left: 55, on right: 44
write_statement (72)
    on left: 56 57, on right: 45
dowhile_statement (73)
    on left: 58, on right: 46
CONDI (74)
    on left: 59 60 61, on right: 48 58 59 60 62
CONDIT (75)
    on left: 62 63, on right: 59 60 61
EXPLOGI (76)
    on left: 64 65 66 67 68 69 70, on right: 63


state 0

    0 $accept: . s $end

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 5 (VIDE)

    s       go to state 5
    FCTS    go to state 6
    VIDE    go to state 7
    ENSFCT  go to state 8
    FCT     go to state 9
    TYPE    go to state 10


state 1

   12 TYPE: mc_logi .

    $default  reduce using rule 12 (TYPE)


state 2

   11 TYPE: mc_char .

    $default  reduce using rule 11 (TYPE)


state 3

    9 TYPE: mc_int .

    $default  reduce using rule 9 (TYPE)


state 4

   10 TYPE: mc_real .

    $default  reduce using rule 10 (TYPE)


state 5

    0 $accept: s . $end

    $end  shift, and go to state 11


state 6

    1 s: FCTS . PRGM_PRIN

    mc_prgrm  shift, and go to state 12

    PRGM_PRIN  go to state 13


state 7

    3 FCTS: VIDE .

    $default  reduce using rule 3 (FCTS)


state 8

    4 FCTS: ENSFCT .
    6 ENSFCT: ENSFCT . FCT

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 4 (FCTS)

    FCT   go to state 14
    TYPE  go to state 10


state 9

    7 ENSFCT: FCT .

    $default  reduce using rule 7 (ENSFCT)


state 10

    8 FCT: TYPE . mc_rtin idf po ENSIDF pf DEC ENSINST idf aff idf pvg mc_endr

    mc_rtin  shift, and go to state 15


state 11

    0 $accept: s $end .

    $default  accept


state 12

    2 PRGM_PRIN: mc_prgrm . idf DECS INSTS mc_end

    idf  shift, and go to state 16


state 13

    1 s: FCTS PRGM_PRIN .

    $default  reduce using rule 1 (s)


state 14

    6 ENSFCT: ENSFCT FCT .

    $default  reduce using rule 6 (ENSFCT)


state 15

    8 FCT: TYPE mc_rtin . idf po ENSIDF pf DEC ENSINST idf aff idf pvg mc_endr

    idf  shift, and go to state 17


state 16

    2 PRGM_PRIN: mc_prgrm idf . DECS INSTS mc_end

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 5 (VIDE)

    VIDE    go to state 18
    TYPE    go to state 19
    DECS    go to state 20
    ENSDEC  go to state 21
    DEC     go to state 22


state 17

    8 FCT: TYPE mc_rtin idf . po ENSIDF pf DEC ENSINST idf aff idf pvg mc_endr

    po  shift, and go to state 23


state 18

   13 DECS: VIDE .

    $default  reduce using rule 13 (DECS)


state 19

   17 DEC: TYPE . ENSIDF pvg
   18    | TYPE . idf mul inti pvg
   19    | TYPE . idf mc_dim po TAILLE pf pvg

    idf  shift, and go to state 24

    ENSIDF  go to state 25


state 20

    2 PRGM_PRIN: mc_prgrm idf DECS . INSTS mc_end

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30

    $default  reduce using rule 5 (VIDE)

    VIDE               go to state 31
    INSTS              go to state 32
    ENSINST            go to state 33
    INST               go to state 34
    if_statement       go to state 35
    assignment         go to state 36
    read_statement     go to state 37
    write_statement    go to state 38
    dowhile_statement  go to state 39


state 21

   14 DECS: ENSDEC .
   15 ENSDEC: ENSDEC . DEC

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 14 (DECS)

    TYPE  go to state 19
    DEC   go to state 40


state 22

   16 ENSDEC: DEC .

    $default  reduce using rule 16 (ENSDEC)


state 23

    8 FCT: TYPE mc_rtin idf po . ENSIDF pf DEC ENSINST idf aff idf pvg mc_endr

    idf  shift, and go to state 41

    ENSIDF  go to state 42


state 24

   18 DEC: TYPE idf . mul inti pvg
   19    | TYPE idf . mc_dim po TAILLE pf pvg
   38 ENSIDF: idf .

    mc_dim  shift, and go to state 43
    mul     shift, and go to state 44

    $default  reduce using rule 38 (ENSIDF)


state 25

   17 DEC: TYPE ENSIDF . pvg
   37 ENSIDF: ENSIDF . verg idf

    pvg   shift, and go to state 45
    verg  shift, and go to state 46


state 26

   51 assignment: idf . aff assi pvg

    aff  shift, and go to state 47


state 27

   55 read_statement: mc_read . po idf pf pvg

    po  shift, and go to state 48


state 28

   56 write_statement: mc_write . po str verg ENSIDF pf pvg
   57                | mc_write . po str pf pvg

    po  shift, and go to state 49


state 29

   48 if_statement: mc_if . po CONDI pf mc_then ENSINST else_clause mc_endif pvg

    po  shift, and go to state 50


state 30

   58 dowhile_statement: mc_dowhile . po CONDI pf ENSINST mc_enddo pvg

    po  shift, and go to state 51


state 31

   39 INSTS: VIDE .

    $default  reduce using rule 39 (INSTS)


state 32

    2 PRGM_PRIN: mc_prgrm idf DECS INSTS . mc_end

    mc_end  shift, and go to state 52


state 33

   40 INSTS: ENSINST .
   41 ENSINST: ENSINST . INST

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30

    $default  reduce using rule 40 (INSTS)

    INST               go to state 53
    if_statement       go to state 35
    assignment         go to state 36
    read_statement     go to state 37
    write_statement    go to state 38
    dowhile_statement  go to state 39


state 34

   42 ENSINST: INST .

    $default  reduce using rule 42 (ENSINST)


state 35

   43 INST: if_statement .

    $default  reduce using rule 43 (INST)


state 36

   47 INST: assignment .

    $default  reduce using rule 47 (INST)


state 37

   44 INST: read_statement .

    $default  reduce using rule 44 (INST)


state 38

   45 INST: write_statement .

    $default  reduce using rule 45 (INST)


state 39

   46 INST: dowhile_statement .

    $default  reduce using rule 46 (INST)


state 40

   15 ENSDEC: ENSDEC DEC .

    $default  reduce using rule 15 (ENSDEC)


state 41

   38 ENSIDF: idf .

    $default  reduce using rule 38 (ENSIDF)


state 42

    8 FCT: TYPE mc_rtin idf po ENSIDF . pf DEC ENSINST idf aff idf pvg mc_endr
   37 ENSIDF: ENSIDF . verg idf

    pf    shift, and go to state 54
    verg  shift, and go to state 46


state 43

   19 DEC: TYPE idf mc_dim . po TAILLE pf pvg

    po  shift, and go to state 55


state 44

   18 DEC: TYPE idf mul . inti pvg

    inti  shift, and go to state 56


state 45

   17 DEC: TYPE ENSIDF pvg .

    $default  reduce using rule 17 (DEC)


state 46

   37 ENSIDF: ENSIDF verg . idf

    idf  shift, and go to state 57


state 47

   51 assignment: idf aff . assi pvg

    idf       shift, and go to state 58
    inti      shift, and go to state 59
    real      shift, and go to state 60
    mc_call   shift, and go to state 61
    mc_true   shift, and go to state 62
    mc_false  shift, and go to state 63
    str       shift, and go to state 64
    po        shift, and go to state 65

    EXPRE    go to state 66
    TERM     go to state 67
    FACTOR   go to state 68
    OPERAND  go to state 69
    LOGI     go to state 70
    assi     go to state 71


state 48

   55 read_statement: mc_read po . idf pf pvg

    idf  shift, and go to state 72


state 49

   56 write_statement: mc_write po . str verg ENSIDF pf pvg
   57                | mc_write po . str pf pvg

    str  shift, and go to state 73


state 50

   48 if_statement: mc_if po . CONDI pf mc_then ENSINST else_clause mc_endif pvg

    idf      shift, and go to state 58
    inti     shift, and go to state 59
    real     shift, and go to state 60
    mc_call  shift, and go to state 61
    po       shift, and go to state 74

    EXPRE    go to state 75
    TERM     go to state 67
    FACTOR   go to state 68
    OPERAND  go to state 69
    CONDI    go to state 76
    CONDIT   go to state 77
    EXPLOGI  go to state 78


state 51

   58 dowhile_statement: mc_dowhile po . CONDI pf ENSINST mc_enddo pvg

    idf      shift, and go to state 58
    inti     shift, and go to state 59
    real     shift, and go to state 60
    mc_call  shift, and go to state 61
    po       shift, and go to state 74

    EXPRE    go to state 75
    TERM     go to state 67
    FACTOR   go to state 68
    OPERAND  go to state 69
    CONDI    go to state 79
    CONDIT   go to state 77
    EXPLOGI  go to state 78


state 52

    2 PRGM_PRIN: mc_prgrm idf DECS INSTS mc_end .

    $default  reduce using rule 2 (PRGM_PRIN)


state 53

   41 ENSINST: ENSINST INST .

    $default  reduce using rule 41 (ENSINST)


state 54

    8 FCT: TYPE mc_rtin idf po ENSIDF pf . DEC ENSINST idf aff idf pvg mc_endr

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    TYPE  go to state 19
    DEC   go to state 80


state 55

   19 DEC: TYPE idf mc_dim po . TAILLE pf pvg

    inti  shift, and go to state 81

    TAILLE  go to state 82


state 56

   18 DEC: TYPE idf mul inti . pvg

    pvg  shift, and go to state 83


state 57

   37 ENSIDF: ENSIDF verg idf .

    $default  reduce using rule 37 (ENSIDF)


state 58

   30 OPERAND: idf .
   33        | idf . po TAILLE pf

    po  shift, and go to state 84

    $default  reduce using rule 30 (OPERAND)


state 59

   31 OPERAND: inti .

    $default  reduce using rule 31 (OPERAND)


state 60

   32 OPERAND: real .

    $default  reduce using rule 32 (OPERAND)


state 61

   34 OPERAND: mc_call . idf po ENSIDF pf

    idf  shift, and go to state 85


state 62

   35 LOGI: mc_true .

    $default  reduce using rule 35 (LOGI)


state 63

   36 LOGI: mc_false .

    $default  reduce using rule 36 (LOGI)


state 64

   53 assi: str .

    $default  reduce using rule 53 (assi)


state 65

   28 FACTOR: po . EXPRE pf

    idf      shift, and go to state 58
    inti     shift, and go to state 59
    real     shift, and go to state 60
    mc_call  shift, and go to state 61
    po       shift, and go to state 65

    EXPRE    go to state 86
    TERM     go to state 67
    FACTOR   go to state 68
    OPERAND  go to state 69


state 66

   22 EXPRE: EXPRE . add TERM
   23      | EXPRE . sub TERM
   54 assi: EXPRE .

    add  shift, and go to state 87
    sub  shift, and go to state 88

    $default  reduce using rule 54 (assi)


state 67

   24 EXPRE: TERM .
   25 TERM: TERM . mul FACTOR
   26     | TERM . divi FACTOR

    mul   shift, and go to state 89
    divi  shift, and go to state 90

    $default  reduce using rule 24 (EXPRE)


state 68

   27 TERM: FACTOR .

    $default  reduce using rule 27 (TERM)


state 69

   29 FACTOR: OPERAND .

    $default  reduce using rule 29 (FACTOR)


state 70

   52 assi: LOGI .

    $default  reduce using rule 52 (assi)


state 71

   51 assignment: idf aff assi . pvg

    pvg  shift, and go to state 91


state 72

   55 read_statement: mc_read po idf . pf pvg

    pf  shift, and go to state 92


state 73

   56 write_statement: mc_write po str . verg ENSIDF pf pvg
   57                | mc_write po str . pf pvg

    pf    shift, and go to state 93
    verg  shift, and go to state 94


state 74

   28 FACTOR: po . EXPRE pf
   62 CONDIT: po . CONDI pf

    idf      shift, and go to state 58
    inti     shift, and go to state 59
    real     shift, and go to state 60
    mc_call  shift, and go to state 61
    po       shift, and go to state 74

    EXPRE    go to state 95
    TERM     go to state 67
    FACTOR   go to state 68
    OPERAND  go to state 69
    CONDI    go to state 96
    CONDIT   go to state 77
    EXPLOGI  go to state 78


state 75

   22 EXPRE: EXPRE . add TERM
   23      | EXPRE . sub TERM
   64 EXPLOGI: EXPRE . lt EXPRE
   65        | EXPRE . gt EXPRE
   66        | EXPRE . aff aff EXPRE
   67        | EXPRE . ge EXPRE
   68        | EXPRE . eq EXPRE
   69        | EXPRE . ne EXPRE
   70        | EXPRE . le EXPRE

    aff  shift, and go to state 97
    ge   shift, and go to state 98
    eq   shift, and go to state 99
    ne   shift, and go to state 100
    le   shift, and go to state 101
    add  shift, and go to state 87
    sub  shift, and go to state 88
    lt   shift, and go to state 102
    gt   shift, and go to state 103


state 76

   48 if_statement: mc_if po CONDI . pf mc_then ENSINST else_clause mc_endif pvg
   59 CONDI: CONDI . mc_or CONDIT
   60      | CONDI . mc_and CONDIT

    mc_or   shift, and go to state 104
    mc_and  shift, and go to state 105
    pf      shift, and go to state 106


state 77

   61 CONDI: CONDIT .

    $default  reduce using rule 61 (CONDI)


state 78

   63 CONDIT: EXPLOGI .

    $default  reduce using rule 63 (CONDIT)


state 79

   58 dowhile_statement: mc_dowhile po CONDI . pf ENSINST mc_enddo pvg
   59 CONDI: CONDI . mc_or CONDIT
   60      | CONDI . mc_and CONDIT

    mc_or   shift, and go to state 104
    mc_and  shift, and go to state 105
    pf      shift, and go to state 107


state 80

    8 FCT: TYPE mc_rtin idf po ENSIDF pf DEC . ENSINST idf aff idf pvg mc_endr

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30

    ENSINST            go to state 108
    INST               go to state 34
    if_statement       go to state 35
    assignment         go to state 36
    read_statement     go to state 37
    write_statement    go to state 38
    dowhile_statement  go to state 39


state 81

   21 TAILLE: inti .

    $default  reduce using rule 21 (TAILLE)


state 82

   19 DEC: TYPE idf mc_dim po TAILLE . pf pvg
   20 TAILLE: TAILLE . verg inti

    pf    shift, and go to state 109
    verg  shift, and go to state 110


state 83

   18 DEC: TYPE idf mul inti pvg .

    $default  reduce using rule 18 (DEC)


state 84

   33 OPERAND: idf po . TAILLE pf

    inti  shift, and go to state 81

    TAILLE  go to state 111


state 85

   34 OPERAND: mc_call idf . po ENSIDF pf

    po  shift, and go to state 112


state 86

   22 EXPRE: EXPRE . add TERM
   23      | EXPRE . sub TERM
   28 FACTOR: po EXPRE . pf

    add  shift, and go to state 87
    sub  shift, and go to state 88
    pf   shift, and go to state 113


state 87

   22 EXPRE: EXPRE add . TERM

    idf      shift, and go to state 58
    inti     shift, and go to state 59
    real     shift, and go to state 60
    mc_call  shift, and go to state 61
    po       shift, and go to state 65

    TERM     go to state 114
    FACTOR   go to state 68
    OPERAND  go to state 69


state 88

   23 EXPRE: EXPRE sub . TERM

    idf      shift, and go to state 58
    inti     shift, and go to state 59
    real     shift, and go to state 60
    mc_call  shift, and go to state 61
    po       shift, and go to state 65

    TERM     go to state 115
    FACTOR   go to state 68
    OPERAND  go to state 69


state 89

   25 TERM: TERM mul . FACTOR

    idf      shift, and go to state 58
    inti     shift, and go to state 59
    real     shift, and go to state 60
    mc_call  shift, and go to state 61
    po       shift, and go to state 65

    FACTOR   go to state 116
    OPERAND  go to state 69


state 90

   26 TERM: TERM divi . FACTOR

    idf      shift, and go to state 58
    inti     shift, and go to state 59
    real     shift, and go to state 60
    mc_call  shift, and go to state 61
    po       shift, and go to state 65

    FACTOR   go to state 117
    OPERAND  go to state 69


state 91

   51 assignment: idf aff assi pvg .

    $default  reduce using rule 51 (assignment)


state 92

   55 read_statement: mc_read po idf pf . pvg

    pvg  shift, and go to state 118


state 93

   57 write_statement: mc_write po str pf . pvg

    pvg  shift, and go to state 119


state 94

   56 write_statement: mc_write po str verg . ENSIDF pf pvg

    idf  shift, and go to state 41

    ENSIDF  go to state 120


state 95

   22 EXPRE: EXPRE . add TERM
   23      | EXPRE . sub TERM
   28 FACTOR: po EXPRE . pf
   64 EXPLOGI: EXPRE . lt EXPRE
   65        | EXPRE . gt EXPRE
   66        | EXPRE . aff aff EXPRE
   67        | EXPRE . ge EXPRE
   68        | EXPRE . eq EXPRE
   69        | EXPRE . ne EXPRE
   70        | EXPRE . le EXPRE

    aff  shift, and go to state 97
    ge   shift, and go to state 98
    eq   shift, and go to state 99
    ne   shift, and go to state 100
    le   shift, and go to state 101
    add  shift, and go to state 87
    sub  shift, and go to state 88
    lt   shift, and go to state 102
    gt   shift, and go to state 103
    pf   shift, and go to state 113


state 96

   59 CONDI: CONDI . mc_or CONDIT
   60      | CONDI . mc_and CONDIT
   62 CONDIT: po CONDI . pf

    mc_or   shift, and go to state 104
    mc_and  shift, and go to state 105
    pf      shift, and go to state 121


state 97

   66 EXPLOGI: EXPRE aff . aff EXPRE

    aff  shift, and go to state 122


state 98

   67 EXPLOGI: EXPRE ge . EXPRE

    idf      shift, and go to state 58
    inti     shift, and go to state 59
    real     shift, and go to state 60
    mc_call  shift, and go to state 61
    po       shift, and go to state 65

    EXPRE    go to state 123
    TERM     go to state 67
    FACTOR   go to state 68
    OPERAND  go to state 69


state 99

   68 EXPLOGI: EXPRE eq . EXPRE

    idf      shift, and go to state 58
    inti     shift, and go to state 59
    real     shift, and go to state 60
    mc_call  shift, and go to state 61
    po       shift, and go to state 65

    EXPRE    go to state 124
    TERM     go to state 67
    FACTOR   go to state 68
    OPERAND  go to state 69


state 100

   69 EXPLOGI: EXPRE ne . EXPRE

    idf      shift, and go to state 58
    inti     shift, and go to state 59
    real     shift, and go to state 60
    mc_call  shift, and go to state 61
    po       shift, and go to state 65

    EXPRE    go to state 125
    TERM     go to state 67
    FACTOR   go to state 68
    OPERAND  go to state 69


state 101

   70 EXPLOGI: EXPRE le . EXPRE

    idf      shift, and go to state 58
    inti     shift, and go to state 59
    real     shift, and go to state 60
    mc_call  shift, and go to state 61
    po       shift, and go to state 65

    EXPRE    go to state 126
    TERM     go to state 67
    FACTOR   go to state 68
    OPERAND  go to state 69


state 102

   64 EXPLOGI: EXPRE lt . EXPRE

    idf      shift, and go to state 58
    inti     shift, and go to state 59
    real     shift, and go to state 60
    mc_call  shift, and go to state 61
    po       shift, and go to state 65

    EXPRE    go to state 127
    TERM     go to state 67
    FACTOR   go to state 68
    OPERAND  go to state 69


state 103

   65 EXPLOGI: EXPRE gt . EXPRE

    idf      shift, and go to state 58
    inti     shift, and go to state 59
    real     shift, and go to state 60
    mc_call  shift, and go to state 61
    po       shift, and go to state 65

    EXPRE    go to state 128
    TERM     go to state 67
    FACTOR   go to state 68
    OPERAND  go to state 69


state 104

   59 CONDI: CONDI mc_or . CONDIT

    idf      shift, and go to state 58
    inti     shift, and go to state 59
    real     shift, and go to state 60
    mc_call  shift, and go to state 61
    po       shift, and go to state 74

    EXPRE    go to state 75
    TERM     go to state 67
    FACTOR   go to state 68
    OPERAND  go to state 69
    CONDIT   go to state 129
    EXPLOGI  go to state 78


state 105

   60 CONDI: CONDI mc_and . CONDIT

    idf      shift, and go to state 58
    inti     shift, and go to state 59
    real     shift, and go to state 60
    mc_call  shift, and go to state 61
    po       shift, and go to state 74

    EXPRE    go to state 75
    TERM     go to state 67
    FACTOR   go to state 68
    OPERAND  go to state 69
    CONDIT   go to state 130
    EXPLOGI  go to state 78


state 106

   48 if_statement: mc_if po CONDI pf . mc_then ENSINST else_clause mc_endif pvg

    mc_then  shift, and go to state 131


state 107

   58 dowhile_statement: mc_dowhile po CONDI pf . ENSINST mc_enddo pvg

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30

    ENSINST            go to state 132
    INST               go to state 34
    if_statement       go to state 35
    assignment         go to state 36
    read_statement     go to state 37
    write_statement    go to state 38
    dowhile_statement  go to state 39


state 108

    8 FCT: TYPE mc_rtin idf po ENSIDF pf DEC ENSINST . idf aff idf pvg mc_endr
   41 ENSINST: ENSINST . INST

    idf         shift, and go to state 133
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30

    INST               go to state 53
    if_statement       go to state 35
    assignment         go to state 36
    read_statement     go to state 37
    write_statement    go to state 38
    dowhile_statement  go to state 39


state 109

   19 DEC: TYPE idf mc_dim po TAILLE pf . pvg

    pvg  shift, and go to state 134


state 110

   20 TAILLE: TAILLE verg . inti

    inti  shift, and go to state 135


state 111

   20 TAILLE: TAILLE . verg inti
   33 OPERAND: idf po TAILLE . pf

    pf    shift, and go to state 136
    verg  shift, and go to state 110


state 112

   34 OPERAND: mc_call idf po . ENSIDF pf

    idf  shift, and go to state 41

    ENSIDF  go to state 137


state 113

   28 FACTOR: po EXPRE pf .

    $default  reduce using rule 28 (FACTOR)


state 114

   22 EXPRE: EXPRE add TERM .
   25 TERM: TERM . mul FACTOR
   26     | TERM . divi FACTOR

    mul   shift, and go to state 89
    divi  shift, and go to state 90

    $default  reduce using rule 22 (EXPRE)


state 115

   23 EXPRE: EXPRE sub TERM .
   25 TERM: TERM . mul FACTOR
   26     | TERM . divi FACTOR

    mul   shift, and go to state 89
    divi  shift, and go to state 90

    $default  reduce using rule 23 (EXPRE)


state 116

   25 TERM: TERM mul FACTOR .

    $default  reduce using rule 25 (TERM)


state 117

   26 TERM: TERM divi FACTOR .

    $default  reduce using rule 26 (TERM)


state 118

   55 read_statement: mc_read po idf pf pvg .

    $default  reduce using rule 55 (read_statement)


state 119

   57 write_statement: mc_write po str pf pvg .

    $default  reduce using rule 57 (write_statement)


state 120

   37 ENSIDF: ENSIDF . verg idf
   56 write_statement: mc_write po str verg ENSIDF . pf pvg

    pf    shift, and go to state 138
    verg  shift, and go to state 46


state 121

   62 CONDIT: po CONDI pf .

    $default  reduce using rule 62 (CONDIT)


state 122

   66 EXPLOGI: EXPRE aff aff . EXPRE

    idf      shift, and go to state 58
    inti     shift, and go to state 59
    real     shift, and go to state 60
    mc_call  shift, and go to state 61
    po       shift, and go to state 65

    EXPRE    go to state 139
    TERM     go to state 67
    FACTOR   go to state 68
    OPERAND  go to state 69


state 123

   22 EXPRE: EXPRE . add TERM
   23      | EXPRE . sub TERM
   67 EXPLOGI: EXPRE ge EXPRE .

    add  shift, and go to state 87
    sub  shift, and go to state 88

    $default  reduce using rule 67 (EXPLOGI)


state 124

   22 EXPRE: EXPRE . add TERM
   23      | EXPRE . sub TERM
   68 EXPLOGI: EXPRE eq EXPRE .

    add  shift, and go to state 87
    sub  shift, and go to state 88

    $default  reduce using rule 68 (EXPLOGI)


state 125

   22 EXPRE: EXPRE . add TERM
   23      | EXPRE . sub TERM
   69 EXPLOGI: EXPRE ne EXPRE .

    add  shift, and go to state 87
    sub  shift, and go to state 88

    $default  reduce using rule 69 (EXPLOGI)


state 126

   22 EXPRE: EXPRE . add TERM
   23      | EXPRE . sub TERM
   70 EXPLOGI: EXPRE le EXPRE .

    add  shift, and go to state 87
    sub  shift, and go to state 88

    $default  reduce using rule 70 (EXPLOGI)


state 127

   22 EXPRE: EXPRE . add TERM
   23      | EXPRE . sub TERM
   64 EXPLOGI: EXPRE lt EXPRE .

    add  shift, and go to state 87
    sub  shift, and go to state 88

    $default  reduce using rule 64 (EXPLOGI)


state 128

   22 EXPRE: EXPRE . add TERM
   23      | EXPRE . sub TERM
   65 EXPLOGI: EXPRE gt EXPRE .

    add  shift, and go to state 87
    sub  shift, and go to state 88

    $default  reduce using rule 65 (EXPLOGI)


state 129

   59 CONDI: CONDI mc_or CONDIT .

    $default  reduce using rule 59 (CONDI)


state 130

   60 CONDI: CONDI mc_and CONDIT .

    $default  reduce using rule 60 (CONDI)


state 131

   48 if_statement: mc_if po CONDI pf mc_then . ENSINST else_clause mc_endif pvg

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30

    ENSINST            go to state 140
    INST               go to state 34
    if_statement       go to state 35
    assignment         go to state 36
    read_statement     go to state 37
    write_statement    go to state 38
    dowhile_statement  go to state 39


state 132

   41 ENSINST: ENSINST . INST
   58 dowhile_statement: mc_dowhile po CONDI pf ENSINST . mc_enddo pvg

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_enddo    shift, and go to state 141

    INST               go to state 53
    if_statement       go to state 35
    assignment         go to state 36
    read_statement     go to state 37
    write_statement    go to state 38
    dowhile_statement  go to state 39


state 133

    8 FCT: TYPE mc_rtin idf po ENSIDF pf DEC ENSINST idf . aff idf pvg mc_endr
   51 assignment: idf . aff assi pvg

    aff  shift, and go to state 142


state 134

   19 DEC: TYPE idf mc_dim po TAILLE pf pvg .

    $default  reduce using rule 19 (DEC)


state 135

   20 TAILLE: TAILLE verg inti .

    $default  reduce using rule 20 (TAILLE)


state 136

   33 OPERAND: idf po TAILLE pf .

    $default  reduce using rule 33 (OPERAND)


state 137

   34 OPERAND: mc_call idf po ENSIDF . pf
   37 ENSIDF: ENSIDF . verg idf

    pf    shift, and go to state 143
    verg  shift, and go to state 46


state 138

   56 write_statement: mc_write po str verg ENSIDF pf . pvg

    pvg  shift, and go to state 144


state 139

   22 EXPRE: EXPRE . add TERM
   23      | EXPRE . sub TERM
   66 EXPLOGI: EXPRE aff aff EXPRE .

    add  shift, and go to state 87
    sub  shift, and go to state 88

    $default  reduce using rule 66 (EXPLOGI)


state 140

   41 ENSINST: ENSINST . INST
   48 if_statement: mc_if po CONDI pf mc_then ENSINST . else_clause mc_endif pvg

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_else     shift, and go to state 145
    mc_dowhile  shift, and go to state 30

    $default  reduce using rule 50 (else_clause)

    INST               go to state 53
    if_statement       go to state 35
    else_clause        go to state 146
    assignment         go to state 36
    read_statement     go to state 37
    write_statement    go to state 38
    dowhile_statement  go to state 39


state 141

   58 dowhile_statement: mc_dowhile po CONDI pf ENSINST mc_enddo . pvg

    pvg  shift, and go to state 147


state 142

    8 FCT: TYPE mc_rtin idf po ENSIDF pf DEC ENSINST idf aff . idf pvg mc_endr
   51 assignment: idf aff . assi pvg

    idf       shift, and go to state 148
    inti      shift, and go to state 59
    real      shift, and go to state 60
    mc_call   shift, and go to state 61
    mc_true   shift, and go to state 62
    mc_false  shift, and go to state 63
    str       shift, and go to state 64
    po        shift, and go to state 65

    EXPRE    go to state 66
    TERM     go to state 67
    FACTOR   go to state 68
    OPERAND  go to state 69
    LOGI     go to state 70
    assi     go to state 71


state 143

   34 OPERAND: mc_call idf po ENSIDF pf .

    $default  reduce using rule 34 (OPERAND)


state 144

   56 write_statement: mc_write po str verg ENSIDF pf pvg .

    $default  reduce using rule 56 (write_statement)


state 145

   49 else_clause: mc_else . ENSINST

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30

    ENSINST            go to state 149
    INST               go to state 34
    if_statement       go to state 35
    assignment         go to state 36
    read_statement     go to state 37
    write_statement    go to state 38
    dowhile_statement  go to state 39


state 146

   48 if_statement: mc_if po CONDI pf mc_then ENSINST else_clause . mc_endif pvg

    mc_endif  shift, and go to state 150


state 147

   58 dowhile_statement: mc_dowhile po CONDI pf ENSINST mc_enddo pvg .

    $default  reduce using rule 58 (dowhile_statement)


state 148

    8 FCT: TYPE mc_rtin idf po ENSIDF pf DEC ENSINST idf aff idf . pvg mc_endr
   30 OPERAND: idf .
   33        | idf . po TAILLE pf

    pvg  shift, and go to state 151
    po   shift, and go to state 84

    pvg       [reduce using rule 30 (OPERAND)]
    $default  reduce using rule 30 (OPERAND)


state 149

   41 ENSINST: ENSINST . INST
   49 else_clause: mc_else ENSINST .

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30

    $default  reduce using rule 49 (else_clause)

    INST               go to state 53
    if_statement       go to state 35
    assignment         go to state 36
    read_statement     go to state 37
    write_statement    go to state 38
    dowhile_statement  go to state 39


state 150

   48 if_statement: mc_if po CONDI pf mc_then ENSINST else_clause mc_endif . pvg

    pvg  shift, and go to state 152


state 151

    8 FCT: TYPE mc_rtin idf po ENSIDF pf DEC ENSINST idf aff idf pvg . mc_endr

    mc_endr  shift, and go to state 153


state 152

   48 if_statement: mc_if po CONDI pf mc_then ENSINST else_clause mc_endif pvg .

    $default  reduce using rule 48 (if_statement)


state 153

    8 FCT: TYPE mc_rtin idf po ENSIDF pf DEC ENSINST idf aff idf pvg mc_endr .

    $default  reduce using rule 8 (FCT)
