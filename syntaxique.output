Terminals unused in grammar

   err


Grammar

    0 $accept: s $end

    1 s: FCTS PRGM_PRIN

    2 PRGM_PRIN: mc_prgrm idf DECS INSTS mc_end

    3 FCTS: VIDE
    4     | ENSFCT

    5 VIDE: /* empty */

    6 ENSFCT: ENSFCT FCT
    7       | FCT

    8 FCT: debut_fct ENSINST assignment mc_endr
    9    | debut_fct assignment mc_endr

   10 debut_fct: TYPE mc_rtin idf po IDFS pf DECS

   11 TYPE: mc_int
   12     | mc_real
   13     | mc_char
   14     | mc_logi

   15 DECS: VIDE
   16     | ENSDEC

   17 ENSDEC: ENSDEC DEC
   18       | DEC

   19 DEC: TYPE ENSIDF_dec pvg
   20    | TYPE idf mul inti pvg
   21    | TYPE idf mc_dim po TAILLE pf pvg

   22 partie_gauch_affectation: aff valeur
   23                         | VIDE

   24 ENSIDF_dec: ENSIDF_dec verg idf partie_gauch_affectation
   25           | idf partie_gauch_affectation

   26 EXPRE: EXPRE mc_or CONDIT
   27      | EXPRE mc_and CONDIT
   28      | CONDIT

   29 CONDIT: CONDIT lt EXPREt
   30       | CONDIT gt EXPREt
   31       | CONDIT ge EXPREt
   32       | CONDIT eq EXPREt
   33       | CONDIT ne EXPREt
   34       | CONDIT le EXPREt
   35       | EXPREt

   36 EXPREt: EXPREt add TERM
   37       | EXPREt sub TERM
   38       | TERM

   39 TERM: TERM mul FACTOR
   40     | TERM divi FACTOR
   41     | FACTOR

   42 FACTOR: po EXPRE pf
   43       | OPERAND

   44 OPERAND: idf
   45        | LOGI
   46        | inti
   47        | real
   48        | idf po TAILLE pf
   49        | mc_call idf po ENSpara pf
   50        | mc_call idf po pf

   51 ENSpara: ENSpara verg valeur
   52        | valeur

   53 TAILLE: TAILLE verg valeur
   54       | valeur

   55 LOGI: mc_true
   56     | mc_false

   57 IDFS: ENSIDF
   58     | VIDE

   59 ENSIDF: ENSIDF verg idf
   60       | idf

   61 INSTS: VIDE
   62      | ENSINST

   63 ENSINST: ENSINST INST
   64        | INST

   65 INST: if_statement
   66     | read_statement
   67     | write_statement
   68     | dowhile_statement
   69     | assignment
   70     | eqival_statement

   71 eqival_statement: mc_equival ens_list_vars pvg

   72 ens_list_vars: ens_list_var
   73              | VIDE

   74 ens_list_var: ens_list_var verg po list_var pf
   75             | po list_var pf

   76 list_var: list_var verg var
   77         | var

   78 var: idf
   79    | idf po TAILLE pf

   80 if_statement: B_if else_clause mc_endif

   81 B_if: A_if mc_then ENSINST

   82 A_if: mc_if po CONDI pf

   83 else_clause: mc_else ENSINST
   84            | VIDE

   85 assignment: var aff valeur pvg

   86 valeur: str
   87       | EXPRE

   88 read_statement: mc_read po var pf pvg

   89 write_statement: mc_write po ENS_PARA_WRITE pf pvg

   90 ENS_PARA_WRITE: ENS_PARA_WRITE verg str
   91               | ENS_PARA_WRITE verg var
   92               | str
   93               | var

   94 dowhile_statement: B_while ENSINST mc_enddo

   95 B_while: A_while po CONDI pf

   96 A_while: mc_dowhile

   97 CONDI: EXPRE


Terminals, with rules where they appear

$end (0) 0
error (256)
idf (258) 2 10 20 21 24 25 44 48 49 50 59 60 78 79
aff (259) 22 85
mc_prgrm (260) 2
mc_rtin (261) 10
inti (262) 20 46
real (263) 47
mc_endr (264) 8 9
mc_call (265) 49 50
mc_dim (266) 21
mc_logi (267) 14
mc_char (268) 13
mc_true (269) 55
mc_false (270) 56
mc_read (271) 88
mc_write (272) 89
pvg (273) 19 20 21 71 85 88 89
str (274) 86 90 92
mc_int (275) 11
mc_real (276) 12
mc_end (277) 2
mc_if (278) 82
mc_then (279) 81
mc_else (280) 83
mc_dowhile (281) 96
mc_enddo (282) 94
mc_equival (283) 71
mc_or (284) 26
ge (285) 31
eq (286) 32
ne (287) 33
le (288) 34
add (289) 36
sub (290) 37
mul (291) 20 39
divi (292) 40
mc_and (293) 27
mc_endif (294) 80
lt (295) 29
gt (296) 30
po (297) 10 21 42 48 49 50 74 75 79 82 88 89 95
pf (298) 10 21 42 48 49 50 74 75 79 82 88 89 95
verg (299) 24 51 53 59 74 76 90 91
err (300)


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
s (47)
    on left: 1, on right: 0
PRGM_PRIN (48)
    on left: 2, on right: 1
FCTS (49)
    on left: 3 4, on right: 1
VIDE (50)
    on left: 5, on right: 3 15 23 58 61 73 84
ENSFCT (51)
    on left: 6 7, on right: 4 6
FCT (52)
    on left: 8 9, on right: 6 7
debut_fct (53)
    on left: 10, on right: 8 9
TYPE (54)
    on left: 11 12 13 14, on right: 10 19 20 21
DECS (55)
    on left: 15 16, on right: 2 10
ENSDEC (56)
    on left: 17 18, on right: 16 17
DEC (57)
    on left: 19 20 21, on right: 17 18
partie_gauch_affectation (58)
    on left: 22 23, on right: 24 25
ENSIDF_dec (59)
    on left: 24 25, on right: 19 24
EXPRE (60)
    on left: 26 27 28, on right: 26 27 42 87 97
CONDIT (61)
    on left: 29 30 31 32 33 34 35, on right: 26 27 28 29 30 31 32 33
    34
EXPREt (62)
    on left: 36 37 38, on right: 29 30 31 32 33 34 35 36 37
TERM (63)
    on left: 39 40 41, on right: 36 37 38 39 40
FACTOR (64)
    on left: 42 43, on right: 39 40 41
OPERAND (65)
    on left: 44 45 46 47 48 49 50, on right: 43
ENSpara (66)
    on left: 51 52, on right: 49 51
TAILLE (67)
    on left: 53 54, on right: 21 48 53 79
LOGI (68)
    on left: 55 56, on right: 45
IDFS (69)
    on left: 57 58, on right: 10
ENSIDF (70)
    on left: 59 60, on right: 57 59
INSTS (71)
    on left: 61 62, on right: 2
ENSINST (72)
    on left: 63 64, on right: 8 62 63 81 83 94
INST (73)
    on left: 65 66 67 68 69 70, on right: 63 64
eqival_statement (74)
    on left: 71, on right: 70
ens_list_vars (75)
    on left: 72 73, on right: 71
ens_list_var (76)
    on left: 74 75, on right: 72 74
list_var (77)
    on left: 76 77, on right: 74 75 76
var (78)
    on left: 78 79, on right: 76 77 85 88 91 93
if_statement (79)
    on left: 80, on right: 65
B_if (80)
    on left: 81, on right: 80
A_if (81)
    on left: 82, on right: 81
else_clause (82)
    on left: 83 84, on right: 80
assignment (83)
    on left: 85, on right: 8 9 69
valeur (84)
    on left: 86 87, on right: 22 51 52 53 54 85
read_statement (85)
    on left: 88, on right: 66
write_statement (86)
    on left: 89, on right: 67
ENS_PARA_WRITE (87)
    on left: 90 91 92 93, on right: 89 90 91
dowhile_statement (88)
    on left: 94, on right: 68
B_while (89)
    on left: 95, on right: 94
A_while (90)
    on left: 96, on right: 95
CONDI (91)
    on left: 97, on right: 82 95


state 0

    0 $accept: . s $end

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 5 (VIDE)

    s          go to state 5
    FCTS       go to state 6
    VIDE       go to state 7
    ENSFCT     go to state 8
    FCT        go to state 9
    debut_fct  go to state 10
    TYPE       go to state 11


state 1

   14 TYPE: mc_logi .

    $default  reduce using rule 14 (TYPE)


state 2

   13 TYPE: mc_char .

    $default  reduce using rule 13 (TYPE)


state 3

   11 TYPE: mc_int .

    $default  reduce using rule 11 (TYPE)


state 4

   12 TYPE: mc_real .

    $default  reduce using rule 12 (TYPE)


state 5

    0 $accept: s . $end

    $end  shift, and go to state 12


state 6

    1 s: FCTS . PRGM_PRIN

    mc_prgrm  shift, and go to state 13

    PRGM_PRIN  go to state 14


state 7

    3 FCTS: VIDE .

    $default  reduce using rule 3 (FCTS)


state 8

    4 FCTS: ENSFCT .
    6 ENSFCT: ENSFCT . FCT

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 4 (FCTS)

    FCT        go to state 15
    debut_fct  go to state 10
    TYPE       go to state 11


state 9

    7 ENSFCT: FCT .

    $default  reduce using rule 7 (ENSFCT)


state 10

    8 FCT: debut_fct . ENSINST assignment mc_endr
    9    | debut_fct . assignment mc_endr

    idf         shift, and go to state 16
    mc_read     shift, and go to state 17
    mc_write    shift, and go to state 18
    mc_if       shift, and go to state 19
    mc_dowhile  shift, and go to state 20
    mc_equival  shift, and go to state 21

    ENSINST            go to state 22
    INST               go to state 23
    eqival_statement   go to state 24
    var                go to state 25
    if_statement       go to state 26
    B_if               go to state 27
    A_if               go to state 28
    assignment         go to state 29
    read_statement     go to state 30
    write_statement    go to state 31
    dowhile_statement  go to state 32
    B_while            go to state 33
    A_while            go to state 34


state 11

   10 debut_fct: TYPE . mc_rtin idf po IDFS pf DECS

    mc_rtin  shift, and go to state 35


state 12

    0 $accept: s $end .

    $default  accept


state 13

    2 PRGM_PRIN: mc_prgrm . idf DECS INSTS mc_end

    idf  shift, and go to state 36


state 14

    1 s: FCTS PRGM_PRIN .

    $default  reduce using rule 1 (s)


state 15

    6 ENSFCT: ENSFCT FCT .

    $default  reduce using rule 6 (ENSFCT)


state 16

   78 var: idf .
   79    | idf . po TAILLE pf

    po  shift, and go to state 37

    $default  reduce using rule 78 (var)


state 17

   88 read_statement: mc_read . po var pf pvg

    po  shift, and go to state 38


state 18

   89 write_statement: mc_write . po ENS_PARA_WRITE pf pvg

    po  shift, and go to state 39


state 19

   82 A_if: mc_if . po CONDI pf

    po  shift, and go to state 40


state 20

   96 A_while: mc_dowhile .

    $default  reduce using rule 96 (A_while)


state 21

   71 eqival_statement: mc_equival . ens_list_vars pvg

    po  shift, and go to state 41

    $default  reduce using rule 5 (VIDE)

    VIDE           go to state 42
    ens_list_vars  go to state 43
    ens_list_var   go to state 44


state 22

    8 FCT: debut_fct ENSINST . assignment mc_endr
   63 ENSINST: ENSINST . INST

    idf         shift, and go to state 16
    mc_read     shift, and go to state 17
    mc_write    shift, and go to state 18
    mc_if       shift, and go to state 19
    mc_dowhile  shift, and go to state 20
    mc_equival  shift, and go to state 21

    INST               go to state 45
    eqival_statement   go to state 24
    var                go to state 25
    if_statement       go to state 26
    B_if               go to state 27
    A_if               go to state 28
    assignment         go to state 46
    read_statement     go to state 30
    write_statement    go to state 31
    dowhile_statement  go to state 32
    B_while            go to state 33
    A_while            go to state 34


state 23

   64 ENSINST: INST .

    $default  reduce using rule 64 (ENSINST)


state 24

   70 INST: eqival_statement .

    $default  reduce using rule 70 (INST)


state 25

   85 assignment: var . aff valeur pvg

    aff  shift, and go to state 47


state 26

   65 INST: if_statement .

    $default  reduce using rule 65 (INST)


state 27

   80 if_statement: B_if . else_clause mc_endif

    mc_else  shift, and go to state 48

    $default  reduce using rule 5 (VIDE)

    VIDE         go to state 49
    else_clause  go to state 50


state 28

   81 B_if: A_if . mc_then ENSINST

    mc_then  shift, and go to state 51


state 29

    9 FCT: debut_fct assignment . mc_endr
   69 INST: assignment .

    mc_endr  shift, and go to state 52

    $default  reduce using rule 69 (INST)


state 30

   66 INST: read_statement .

    $default  reduce using rule 66 (INST)


state 31

   67 INST: write_statement .

    $default  reduce using rule 67 (INST)


state 32

   68 INST: dowhile_statement .

    $default  reduce using rule 68 (INST)


state 33

   94 dowhile_statement: B_while . ENSINST mc_enddo

    idf         shift, and go to state 16
    mc_read     shift, and go to state 17
    mc_write    shift, and go to state 18
    mc_if       shift, and go to state 19
    mc_dowhile  shift, and go to state 20
    mc_equival  shift, and go to state 21

    ENSINST            go to state 53
    INST               go to state 23
    eqival_statement   go to state 24
    var                go to state 25
    if_statement       go to state 26
    B_if               go to state 27
    A_if               go to state 28
    assignment         go to state 54
    read_statement     go to state 30
    write_statement    go to state 31
    dowhile_statement  go to state 32
    B_while            go to state 33
    A_while            go to state 34


state 34

   95 B_while: A_while . po CONDI pf

    po  shift, and go to state 55


state 35

   10 debut_fct: TYPE mc_rtin . idf po IDFS pf DECS

    idf  shift, and go to state 56


state 36

    2 PRGM_PRIN: mc_prgrm idf . DECS INSTS mc_end

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 5 (VIDE)

    VIDE    go to state 57
    TYPE    go to state 58
    DECS    go to state 59
    ENSDEC  go to state 60
    DEC     go to state 61


state 37

   79 var: idf po . TAILLE pf

    idf       shift, and go to state 62
    inti      shift, and go to state 63
    real      shift, and go to state 64
    mc_call   shift, and go to state 65
    mc_true   shift, and go to state 66
    mc_false  shift, and go to state 67
    str       shift, and go to state 68
    po        shift, and go to state 69

    EXPRE    go to state 70
    CONDIT   go to state 71
    EXPREt   go to state 72
    TERM     go to state 73
    FACTOR   go to state 74
    OPERAND  go to state 75
    TAILLE   go to state 76
    LOGI     go to state 77
    valeur   go to state 78


state 38

   88 read_statement: mc_read po . var pf pvg

    idf  shift, and go to state 16

    var  go to state 79


state 39

   89 write_statement: mc_write po . ENS_PARA_WRITE pf pvg

    idf  shift, and go to state 16
    str  shift, and go to state 80

    var             go to state 81
    ENS_PARA_WRITE  go to state 82


state 40

   82 A_if: mc_if po . CONDI pf

    idf       shift, and go to state 62
    inti      shift, and go to state 63
    real      shift, and go to state 64
    mc_call   shift, and go to state 65
    mc_true   shift, and go to state 66
    mc_false  shift, and go to state 67
    po        shift, and go to state 69

    EXPRE    go to state 83
    CONDIT   go to state 71
    EXPREt   go to state 72
    TERM     go to state 73
    FACTOR   go to state 74
    OPERAND  go to state 75
    LOGI     go to state 77
    CONDI    go to state 84


state 41

   75 ens_list_var: po . list_var pf

    idf  shift, and go to state 16

    list_var  go to state 85
    var       go to state 86


state 42

   73 ens_list_vars: VIDE .

    $default  reduce using rule 73 (ens_list_vars)


state 43

   71 eqival_statement: mc_equival ens_list_vars . pvg

    pvg  shift, and go to state 87


state 44

   72 ens_list_vars: ens_list_var .
   74 ens_list_var: ens_list_var . verg po list_var pf

    verg  shift, and go to state 88

    $default  reduce using rule 72 (ens_list_vars)


state 45

   63 ENSINST: ENSINST INST .

    $default  reduce using rule 63 (ENSINST)


state 46

    8 FCT: debut_fct ENSINST assignment . mc_endr
   69 INST: assignment .

    mc_endr  shift, and go to state 89

    $default  reduce using rule 69 (INST)


state 47

   85 assignment: var aff . valeur pvg

    idf       shift, and go to state 62
    inti      shift, and go to state 63
    real      shift, and go to state 64
    mc_call   shift, and go to state 65
    mc_true   shift, and go to state 66
    mc_false  shift, and go to state 67
    str       shift, and go to state 68
    po        shift, and go to state 69

    EXPRE    go to state 70
    CONDIT   go to state 71
    EXPREt   go to state 72
    TERM     go to state 73
    FACTOR   go to state 74
    OPERAND  go to state 75
    LOGI     go to state 77
    valeur   go to state 90


state 48

   83 else_clause: mc_else . ENSINST

    idf         shift, and go to state 16
    mc_read     shift, and go to state 17
    mc_write    shift, and go to state 18
    mc_if       shift, and go to state 19
    mc_dowhile  shift, and go to state 20
    mc_equival  shift, and go to state 21

    ENSINST            go to state 91
    INST               go to state 23
    eqival_statement   go to state 24
    var                go to state 25
    if_statement       go to state 26
    B_if               go to state 27
    A_if               go to state 28
    assignment         go to state 54
    read_statement     go to state 30
    write_statement    go to state 31
    dowhile_statement  go to state 32
    B_while            go to state 33
    A_while            go to state 34


state 49

   84 else_clause: VIDE .

    $default  reduce using rule 84 (else_clause)


state 50

   80 if_statement: B_if else_clause . mc_endif

    mc_endif  shift, and go to state 92


state 51

   81 B_if: A_if mc_then . ENSINST

    idf         shift, and go to state 16
    mc_read     shift, and go to state 17
    mc_write    shift, and go to state 18
    mc_if       shift, and go to state 19
    mc_dowhile  shift, and go to state 20
    mc_equival  shift, and go to state 21

    ENSINST            go to state 93
    INST               go to state 23
    eqival_statement   go to state 24
    var                go to state 25
    if_statement       go to state 26
    B_if               go to state 27
    A_if               go to state 28
    assignment         go to state 54
    read_statement     go to state 30
    write_statement    go to state 31
    dowhile_statement  go to state 32
    B_while            go to state 33
    A_while            go to state 34


state 52

    9 FCT: debut_fct assignment mc_endr .

    $default  reduce using rule 9 (FCT)


state 53

   63 ENSINST: ENSINST . INST
   94 dowhile_statement: B_while ENSINST . mc_enddo

    idf         shift, and go to state 16
    mc_read     shift, and go to state 17
    mc_write    shift, and go to state 18
    mc_if       shift, and go to state 19
    mc_dowhile  shift, and go to state 20
    mc_enddo    shift, and go to state 94
    mc_equival  shift, and go to state 21

    INST               go to state 45
    eqival_statement   go to state 24
    var                go to state 25
    if_statement       go to state 26
    B_if               go to state 27
    A_if               go to state 28
    assignment         go to state 54
    read_statement     go to state 30
    write_statement    go to state 31
    dowhile_statement  go to state 32
    B_while            go to state 33
    A_while            go to state 34


state 54

   69 INST: assignment .

    $default  reduce using rule 69 (INST)


state 55

   95 B_while: A_while po . CONDI pf

    idf       shift, and go to state 62
    inti      shift, and go to state 63
    real      shift, and go to state 64
    mc_call   shift, and go to state 65
    mc_true   shift, and go to state 66
    mc_false  shift, and go to state 67
    po        shift, and go to state 69

    EXPRE    go to state 83
    CONDIT   go to state 71
    EXPREt   go to state 72
    TERM     go to state 73
    FACTOR   go to state 74
    OPERAND  go to state 75
    LOGI     go to state 77
    CONDI    go to state 95


state 56

   10 debut_fct: TYPE mc_rtin idf . po IDFS pf DECS

    po  shift, and go to state 96


state 57

   15 DECS: VIDE .

    $default  reduce using rule 15 (DECS)


state 58

   19 DEC: TYPE . ENSIDF_dec pvg
   20    | TYPE . idf mul inti pvg
   21    | TYPE . idf mc_dim po TAILLE pf pvg

    idf  shift, and go to state 97

    ENSIDF_dec  go to state 98


state 59

    2 PRGM_PRIN: mc_prgrm idf DECS . INSTS mc_end

    idf         shift, and go to state 16
    mc_read     shift, and go to state 17
    mc_write    shift, and go to state 18
    mc_if       shift, and go to state 19
    mc_dowhile  shift, and go to state 20
    mc_equival  shift, and go to state 21

    $default  reduce using rule 5 (VIDE)

    VIDE               go to state 99
    INSTS              go to state 100
    ENSINST            go to state 101
    INST               go to state 23
    eqival_statement   go to state 24
    var                go to state 25
    if_statement       go to state 26
    B_if               go to state 27
    A_if               go to state 28
    assignment         go to state 54
    read_statement     go to state 30
    write_statement    go to state 31
    dowhile_statement  go to state 32
    B_while            go to state 33
    A_while            go to state 34


state 60

   16 DECS: ENSDEC .
   17 ENSDEC: ENSDEC . DEC

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 16 (DECS)

    TYPE  go to state 58
    DEC   go to state 102


state 61

   18 ENSDEC: DEC .

    $default  reduce using rule 18 (ENSDEC)


state 62

   44 OPERAND: idf .
   48        | idf . po TAILLE pf

    po  shift, and go to state 103

    $default  reduce using rule 44 (OPERAND)


state 63

   46 OPERAND: inti .

    $default  reduce using rule 46 (OPERAND)


state 64

   47 OPERAND: real .

    $default  reduce using rule 47 (OPERAND)


state 65

   49 OPERAND: mc_call . idf po ENSpara pf
   50        | mc_call . idf po pf

    idf  shift, and go to state 104


state 66

   55 LOGI: mc_true .

    $default  reduce using rule 55 (LOGI)


state 67

   56 LOGI: mc_false .

    $default  reduce using rule 56 (LOGI)


state 68

   86 valeur: str .

    $default  reduce using rule 86 (valeur)


state 69

   42 FACTOR: po . EXPRE pf

    idf       shift, and go to state 62
    inti      shift, and go to state 63
    real      shift, and go to state 64
    mc_call   shift, and go to state 65
    mc_true   shift, and go to state 66
    mc_false  shift, and go to state 67
    po        shift, and go to state 69

    EXPRE    go to state 105
    CONDIT   go to state 71
    EXPREt   go to state 72
    TERM     go to state 73
    FACTOR   go to state 74
    OPERAND  go to state 75
    LOGI     go to state 77


state 70

   26 EXPRE: EXPRE . mc_or CONDIT
   27      | EXPRE . mc_and CONDIT
   87 valeur: EXPRE .

    mc_or   shift, and go to state 106
    mc_and  shift, and go to state 107

    $default  reduce using rule 87 (valeur)


state 71

   28 EXPRE: CONDIT .
   29 CONDIT: CONDIT . lt EXPREt
   30       | CONDIT . gt EXPREt
   31       | CONDIT . ge EXPREt
   32       | CONDIT . eq EXPREt
   33       | CONDIT . ne EXPREt
   34       | CONDIT . le EXPREt

    ge  shift, and go to state 108
    eq  shift, and go to state 109
    ne  shift, and go to state 110
    le  shift, and go to state 111
    lt  shift, and go to state 112
    gt  shift, and go to state 113

    $default  reduce using rule 28 (EXPRE)


state 72

   35 CONDIT: EXPREt .
   36 EXPREt: EXPREt . add TERM
   37       | EXPREt . sub TERM

    add  shift, and go to state 114
    sub  shift, and go to state 115

    $default  reduce using rule 35 (CONDIT)


state 73

   38 EXPREt: TERM .
   39 TERM: TERM . mul FACTOR
   40     | TERM . divi FACTOR

    mul   shift, and go to state 116
    divi  shift, and go to state 117

    $default  reduce using rule 38 (EXPREt)


state 74

   41 TERM: FACTOR .

    $default  reduce using rule 41 (TERM)


state 75

   43 FACTOR: OPERAND .

    $default  reduce using rule 43 (FACTOR)


state 76

   53 TAILLE: TAILLE . verg valeur
   79 var: idf po TAILLE . pf

    pf    shift, and go to state 118
    verg  shift, and go to state 119


state 77

   45 OPERAND: LOGI .

    $default  reduce using rule 45 (OPERAND)


state 78

   54 TAILLE: valeur .

    $default  reduce using rule 54 (TAILLE)


state 79

   88 read_statement: mc_read po var . pf pvg

    pf  shift, and go to state 120


state 80

   92 ENS_PARA_WRITE: str .

    $default  reduce using rule 92 (ENS_PARA_WRITE)


state 81

   93 ENS_PARA_WRITE: var .

    $default  reduce using rule 93 (ENS_PARA_WRITE)


state 82

   89 write_statement: mc_write po ENS_PARA_WRITE . pf pvg
   90 ENS_PARA_WRITE: ENS_PARA_WRITE . verg str
   91               | ENS_PARA_WRITE . verg var

    pf    shift, and go to state 121
    verg  shift, and go to state 122


state 83

   26 EXPRE: EXPRE . mc_or CONDIT
   27      | EXPRE . mc_and CONDIT
   97 CONDI: EXPRE .

    mc_or   shift, and go to state 106
    mc_and  shift, and go to state 107

    $default  reduce using rule 97 (CONDI)


state 84

   82 A_if: mc_if po CONDI . pf

    pf  shift, and go to state 123


state 85

   75 ens_list_var: po list_var . pf
   76 list_var: list_var . verg var

    pf    shift, and go to state 124
    verg  shift, and go to state 125


state 86

   77 list_var: var .

    $default  reduce using rule 77 (list_var)


state 87

   71 eqival_statement: mc_equival ens_list_vars pvg .

    $default  reduce using rule 71 (eqival_statement)


state 88

   74 ens_list_var: ens_list_var verg . po list_var pf

    po  shift, and go to state 126


state 89

    8 FCT: debut_fct ENSINST assignment mc_endr .

    $default  reduce using rule 8 (FCT)


state 90

   85 assignment: var aff valeur . pvg

    pvg  shift, and go to state 127


state 91

   63 ENSINST: ENSINST . INST
   83 else_clause: mc_else ENSINST .

    idf         shift, and go to state 16
    mc_read     shift, and go to state 17
    mc_write    shift, and go to state 18
    mc_if       shift, and go to state 19
    mc_dowhile  shift, and go to state 20
    mc_equival  shift, and go to state 21

    $default  reduce using rule 83 (else_clause)

    INST               go to state 45
    eqival_statement   go to state 24
    var                go to state 25
    if_statement       go to state 26
    B_if               go to state 27
    A_if               go to state 28
    assignment         go to state 54
    read_statement     go to state 30
    write_statement    go to state 31
    dowhile_statement  go to state 32
    B_while            go to state 33
    A_while            go to state 34


state 92

   80 if_statement: B_if else_clause mc_endif .

    $default  reduce using rule 80 (if_statement)


state 93

   63 ENSINST: ENSINST . INST
   81 B_if: A_if mc_then ENSINST .

    idf         shift, and go to state 16
    mc_read     shift, and go to state 17
    mc_write    shift, and go to state 18
    mc_if       shift, and go to state 19
    mc_dowhile  shift, and go to state 20
    mc_equival  shift, and go to state 21

    $default  reduce using rule 81 (B_if)

    INST               go to state 45
    eqival_statement   go to state 24
    var                go to state 25
    if_statement       go to state 26
    B_if               go to state 27
    A_if               go to state 28
    assignment         go to state 54
    read_statement     go to state 30
    write_statement    go to state 31
    dowhile_statement  go to state 32
    B_while            go to state 33
    A_while            go to state 34


state 94

   94 dowhile_statement: B_while ENSINST mc_enddo .

    $default  reduce using rule 94 (dowhile_statement)


state 95

   95 B_while: A_while po CONDI . pf

    pf  shift, and go to state 128


state 96

   10 debut_fct: TYPE mc_rtin idf po . IDFS pf DECS

    idf  shift, and go to state 129

    $default  reduce using rule 5 (VIDE)

    VIDE    go to state 130
    IDFS    go to state 131
    ENSIDF  go to state 132


state 97

   20 DEC: TYPE idf . mul inti pvg
   21    | TYPE idf . mc_dim po TAILLE pf pvg
   25 ENSIDF_dec: idf . partie_gauch_affectation

    aff     shift, and go to state 133
    mc_dim  shift, and go to state 134
    mul     shift, and go to state 135

    $default  reduce using rule 5 (VIDE)

    VIDE                      go to state 136
    partie_gauch_affectation  go to state 137


state 98

   19 DEC: TYPE ENSIDF_dec . pvg
   24 ENSIDF_dec: ENSIDF_dec . verg idf partie_gauch_affectation

    pvg   shift, and go to state 138
    verg  shift, and go to state 139


state 99

   61 INSTS: VIDE .

    $default  reduce using rule 61 (INSTS)


state 100

    2 PRGM_PRIN: mc_prgrm idf DECS INSTS . mc_end

    mc_end  shift, and go to state 140


state 101

   62 INSTS: ENSINST .
   63 ENSINST: ENSINST . INST

    idf         shift, and go to state 16
    mc_read     shift, and go to state 17
    mc_write    shift, and go to state 18
    mc_if       shift, and go to state 19
    mc_dowhile  shift, and go to state 20
    mc_equival  shift, and go to state 21

    $default  reduce using rule 62 (INSTS)

    INST               go to state 45
    eqival_statement   go to state 24
    var                go to state 25
    if_statement       go to state 26
    B_if               go to state 27
    A_if               go to state 28
    assignment         go to state 54
    read_statement     go to state 30
    write_statement    go to state 31
    dowhile_statement  go to state 32
    B_while            go to state 33
    A_while            go to state 34


state 102

   17 ENSDEC: ENSDEC DEC .

    $default  reduce using rule 17 (ENSDEC)


state 103

   48 OPERAND: idf po . TAILLE pf

    idf       shift, and go to state 62
    inti      shift, and go to state 63
    real      shift, and go to state 64
    mc_call   shift, and go to state 65
    mc_true   shift, and go to state 66
    mc_false  shift, and go to state 67
    str       shift, and go to state 68
    po        shift, and go to state 69

    EXPRE    go to state 70
    CONDIT   go to state 71
    EXPREt   go to state 72
    TERM     go to state 73
    FACTOR   go to state 74
    OPERAND  go to state 75
    TAILLE   go to state 141
    LOGI     go to state 77
    valeur   go to state 78


state 104

   49 OPERAND: mc_call idf . po ENSpara pf
   50        | mc_call idf . po pf

    po  shift, and go to state 142


state 105

   26 EXPRE: EXPRE . mc_or CONDIT
   27      | EXPRE . mc_and CONDIT
   42 FACTOR: po EXPRE . pf

    mc_or   shift, and go to state 106
    mc_and  shift, and go to state 107
    pf      shift, and go to state 143


state 106

   26 EXPRE: EXPRE mc_or . CONDIT

    idf       shift, and go to state 62
    inti      shift, and go to state 63
    real      shift, and go to state 64
    mc_call   shift, and go to state 65
    mc_true   shift, and go to state 66
    mc_false  shift, and go to state 67
    po        shift, and go to state 69

    CONDIT   go to state 144
    EXPREt   go to state 72
    TERM     go to state 73
    FACTOR   go to state 74
    OPERAND  go to state 75
    LOGI     go to state 77


state 107

   27 EXPRE: EXPRE mc_and . CONDIT

    idf       shift, and go to state 62
    inti      shift, and go to state 63
    real      shift, and go to state 64
    mc_call   shift, and go to state 65
    mc_true   shift, and go to state 66
    mc_false  shift, and go to state 67
    po        shift, and go to state 69

    CONDIT   go to state 145
    EXPREt   go to state 72
    TERM     go to state 73
    FACTOR   go to state 74
    OPERAND  go to state 75
    LOGI     go to state 77


state 108

   31 CONDIT: CONDIT ge . EXPREt

    idf       shift, and go to state 62
    inti      shift, and go to state 63
    real      shift, and go to state 64
    mc_call   shift, and go to state 65
    mc_true   shift, and go to state 66
    mc_false  shift, and go to state 67
    po        shift, and go to state 69

    EXPREt   go to state 146
    TERM     go to state 73
    FACTOR   go to state 74
    OPERAND  go to state 75
    LOGI     go to state 77


state 109

   32 CONDIT: CONDIT eq . EXPREt

    idf       shift, and go to state 62
    inti      shift, and go to state 63
    real      shift, and go to state 64
    mc_call   shift, and go to state 65
    mc_true   shift, and go to state 66
    mc_false  shift, and go to state 67
    po        shift, and go to state 69

    EXPREt   go to state 147
    TERM     go to state 73
    FACTOR   go to state 74
    OPERAND  go to state 75
    LOGI     go to state 77


state 110

   33 CONDIT: CONDIT ne . EXPREt

    idf       shift, and go to state 62
    inti      shift, and go to state 63
    real      shift, and go to state 64
    mc_call   shift, and go to state 65
    mc_true   shift, and go to state 66
    mc_false  shift, and go to state 67
    po        shift, and go to state 69

    EXPREt   go to state 148
    TERM     go to state 73
    FACTOR   go to state 74
    OPERAND  go to state 75
    LOGI     go to state 77


state 111

   34 CONDIT: CONDIT le . EXPREt

    idf       shift, and go to state 62
    inti      shift, and go to state 63
    real      shift, and go to state 64
    mc_call   shift, and go to state 65
    mc_true   shift, and go to state 66
    mc_false  shift, and go to state 67
    po        shift, and go to state 69

    EXPREt   go to state 149
    TERM     go to state 73
    FACTOR   go to state 74
    OPERAND  go to state 75
    LOGI     go to state 77


state 112

   29 CONDIT: CONDIT lt . EXPREt

    idf       shift, and go to state 62
    inti      shift, and go to state 63
    real      shift, and go to state 64
    mc_call   shift, and go to state 65
    mc_true   shift, and go to state 66
    mc_false  shift, and go to state 67
    po        shift, and go to state 69

    EXPREt   go to state 150
    TERM     go to state 73
    FACTOR   go to state 74
    OPERAND  go to state 75
    LOGI     go to state 77


state 113

   30 CONDIT: CONDIT gt . EXPREt

    idf       shift, and go to state 62
    inti      shift, and go to state 63
    real      shift, and go to state 64
    mc_call   shift, and go to state 65
    mc_true   shift, and go to state 66
    mc_false  shift, and go to state 67
    po        shift, and go to state 69

    EXPREt   go to state 151
    TERM     go to state 73
    FACTOR   go to state 74
    OPERAND  go to state 75
    LOGI     go to state 77


state 114

   36 EXPREt: EXPREt add . TERM

    idf       shift, and go to state 62
    inti      shift, and go to state 63
    real      shift, and go to state 64
    mc_call   shift, and go to state 65
    mc_true   shift, and go to state 66
    mc_false  shift, and go to state 67
    po        shift, and go to state 69

    TERM     go to state 152
    FACTOR   go to state 74
    OPERAND  go to state 75
    LOGI     go to state 77


state 115

   37 EXPREt: EXPREt sub . TERM

    idf       shift, and go to state 62
    inti      shift, and go to state 63
    real      shift, and go to state 64
    mc_call   shift, and go to state 65
    mc_true   shift, and go to state 66
    mc_false  shift, and go to state 67
    po        shift, and go to state 69

    TERM     go to state 153
    FACTOR   go to state 74
    OPERAND  go to state 75
    LOGI     go to state 77


state 116

   39 TERM: TERM mul . FACTOR

    idf       shift, and go to state 62
    inti      shift, and go to state 63
    real      shift, and go to state 64
    mc_call   shift, and go to state 65
    mc_true   shift, and go to state 66
    mc_false  shift, and go to state 67
    po        shift, and go to state 69

    FACTOR   go to state 154
    OPERAND  go to state 75
    LOGI     go to state 77


state 117

   40 TERM: TERM divi . FACTOR

    idf       shift, and go to state 62
    inti      shift, and go to state 63
    real      shift, and go to state 64
    mc_call   shift, and go to state 65
    mc_true   shift, and go to state 66
    mc_false  shift, and go to state 67
    po        shift, and go to state 69

    FACTOR   go to state 155
    OPERAND  go to state 75
    LOGI     go to state 77


state 118

   79 var: idf po TAILLE pf .

    $default  reduce using rule 79 (var)


state 119

   53 TAILLE: TAILLE verg . valeur

    idf       shift, and go to state 62
    inti      shift, and go to state 63
    real      shift, and go to state 64
    mc_call   shift, and go to state 65
    mc_true   shift, and go to state 66
    mc_false  shift, and go to state 67
    str       shift, and go to state 68
    po        shift, and go to state 69

    EXPRE    go to state 70
    CONDIT   go to state 71
    EXPREt   go to state 72
    TERM     go to state 73
    FACTOR   go to state 74
    OPERAND  go to state 75
    LOGI     go to state 77
    valeur   go to state 156


state 120

   88 read_statement: mc_read po var pf . pvg

    pvg  shift, and go to state 157


state 121

   89 write_statement: mc_write po ENS_PARA_WRITE pf . pvg

    pvg  shift, and go to state 158


state 122

   90 ENS_PARA_WRITE: ENS_PARA_WRITE verg . str
   91               | ENS_PARA_WRITE verg . var

    idf  shift, and go to state 16
    str  shift, and go to state 159

    var  go to state 160


state 123

   82 A_if: mc_if po CONDI pf .

    $default  reduce using rule 82 (A_if)


state 124

   75 ens_list_var: po list_var pf .

    $default  reduce using rule 75 (ens_list_var)


state 125

   76 list_var: list_var verg . var

    idf  shift, and go to state 16

    var  go to state 161


state 126

   74 ens_list_var: ens_list_var verg po . list_var pf

    idf  shift, and go to state 16

    list_var  go to state 162
    var       go to state 86


state 127

   85 assignment: var aff valeur pvg .

    $default  reduce using rule 85 (assignment)


state 128

   95 B_while: A_while po CONDI pf .

    $default  reduce using rule 95 (B_while)


state 129

   60 ENSIDF: idf .

    $default  reduce using rule 60 (ENSIDF)


state 130

   58 IDFS: VIDE .

    $default  reduce using rule 58 (IDFS)


state 131

   10 debut_fct: TYPE mc_rtin idf po IDFS . pf DECS

    pf  shift, and go to state 163


state 132

   57 IDFS: ENSIDF .
   59 ENSIDF: ENSIDF . verg idf

    verg  shift, and go to state 164

    $default  reduce using rule 57 (IDFS)


state 133

   22 partie_gauch_affectation: aff . valeur

    idf       shift, and go to state 62
    inti      shift, and go to state 63
    real      shift, and go to state 64
    mc_call   shift, and go to state 65
    mc_true   shift, and go to state 66
    mc_false  shift, and go to state 67
    str       shift, and go to state 68
    po        shift, and go to state 69

    EXPRE    go to state 70
    CONDIT   go to state 71
    EXPREt   go to state 72
    TERM     go to state 73
    FACTOR   go to state 74
    OPERAND  go to state 75
    LOGI     go to state 77
    valeur   go to state 165


state 134

   21 DEC: TYPE idf mc_dim . po TAILLE pf pvg

    po  shift, and go to state 166


state 135

   20 DEC: TYPE idf mul . inti pvg

    inti  shift, and go to state 167


state 136

   23 partie_gauch_affectation: VIDE .

    $default  reduce using rule 23 (partie_gauch_affectation)


state 137

   25 ENSIDF_dec: idf partie_gauch_affectation .

    $default  reduce using rule 25 (ENSIDF_dec)


state 138

   19 DEC: TYPE ENSIDF_dec pvg .

    $default  reduce using rule 19 (DEC)


state 139

   24 ENSIDF_dec: ENSIDF_dec verg . idf partie_gauch_affectation

    idf  shift, and go to state 168


state 140

    2 PRGM_PRIN: mc_prgrm idf DECS INSTS mc_end .

    $default  reduce using rule 2 (PRGM_PRIN)


state 141

   48 OPERAND: idf po TAILLE . pf
   53 TAILLE: TAILLE . verg valeur

    pf    shift, and go to state 169
    verg  shift, and go to state 119


state 142

   49 OPERAND: mc_call idf po . ENSpara pf
   50        | mc_call idf po . pf

    idf       shift, and go to state 62
    inti      shift, and go to state 63
    real      shift, and go to state 64
    mc_call   shift, and go to state 65
    mc_true   shift, and go to state 66
    mc_false  shift, and go to state 67
    str       shift, and go to state 68
    po        shift, and go to state 69
    pf        shift, and go to state 170

    EXPRE    go to state 70
    CONDIT   go to state 71
    EXPREt   go to state 72
    TERM     go to state 73
    FACTOR   go to state 74
    OPERAND  go to state 75
    ENSpara  go to state 171
    LOGI     go to state 77
    valeur   go to state 172


state 143

   42 FACTOR: po EXPRE pf .

    $default  reduce using rule 42 (FACTOR)


state 144

   26 EXPRE: EXPRE mc_or CONDIT .
   29 CONDIT: CONDIT . lt EXPREt
   30       | CONDIT . gt EXPREt
   31       | CONDIT . ge EXPREt
   32       | CONDIT . eq EXPREt
   33       | CONDIT . ne EXPREt
   34       | CONDIT . le EXPREt

    ge  shift, and go to state 108
    eq  shift, and go to state 109
    ne  shift, and go to state 110
    le  shift, and go to state 111
    lt  shift, and go to state 112
    gt  shift, and go to state 113

    $default  reduce using rule 26 (EXPRE)


state 145

   27 EXPRE: EXPRE mc_and CONDIT .
   29 CONDIT: CONDIT . lt EXPREt
   30       | CONDIT . gt EXPREt
   31       | CONDIT . ge EXPREt
   32       | CONDIT . eq EXPREt
   33       | CONDIT . ne EXPREt
   34       | CONDIT . le EXPREt

    ge  shift, and go to state 108
    eq  shift, and go to state 109
    ne  shift, and go to state 110
    le  shift, and go to state 111
    lt  shift, and go to state 112
    gt  shift, and go to state 113

    $default  reduce using rule 27 (EXPRE)


state 146

   31 CONDIT: CONDIT ge EXPREt .
   36 EXPREt: EXPREt . add TERM
   37       | EXPREt . sub TERM

    add  shift, and go to state 114
    sub  shift, and go to state 115

    $default  reduce using rule 31 (CONDIT)


state 147

   32 CONDIT: CONDIT eq EXPREt .
   36 EXPREt: EXPREt . add TERM
   37       | EXPREt . sub TERM

    add  shift, and go to state 114
    sub  shift, and go to state 115

    $default  reduce using rule 32 (CONDIT)


state 148

   33 CONDIT: CONDIT ne EXPREt .
   36 EXPREt: EXPREt . add TERM
   37       | EXPREt . sub TERM

    add  shift, and go to state 114
    sub  shift, and go to state 115

    $default  reduce using rule 33 (CONDIT)


state 149

   34 CONDIT: CONDIT le EXPREt .
   36 EXPREt: EXPREt . add TERM
   37       | EXPREt . sub TERM

    add  shift, and go to state 114
    sub  shift, and go to state 115

    $default  reduce using rule 34 (CONDIT)


state 150

   29 CONDIT: CONDIT lt EXPREt .
   36 EXPREt: EXPREt . add TERM
   37       | EXPREt . sub TERM

    add  shift, and go to state 114
    sub  shift, and go to state 115

    $default  reduce using rule 29 (CONDIT)


state 151

   30 CONDIT: CONDIT gt EXPREt .
   36 EXPREt: EXPREt . add TERM
   37       | EXPREt . sub TERM

    add  shift, and go to state 114
    sub  shift, and go to state 115

    $default  reduce using rule 30 (CONDIT)


state 152

   36 EXPREt: EXPREt add TERM .
   39 TERM: TERM . mul FACTOR
   40     | TERM . divi FACTOR

    mul   shift, and go to state 116
    divi  shift, and go to state 117

    $default  reduce using rule 36 (EXPREt)


state 153

   37 EXPREt: EXPREt sub TERM .
   39 TERM: TERM . mul FACTOR
   40     | TERM . divi FACTOR

    mul   shift, and go to state 116
    divi  shift, and go to state 117

    $default  reduce using rule 37 (EXPREt)


state 154

   39 TERM: TERM mul FACTOR .

    $default  reduce using rule 39 (TERM)


state 155

   40 TERM: TERM divi FACTOR .

    $default  reduce using rule 40 (TERM)


state 156

   53 TAILLE: TAILLE verg valeur .

    $default  reduce using rule 53 (TAILLE)


state 157

   88 read_statement: mc_read po var pf pvg .

    $default  reduce using rule 88 (read_statement)


state 158

   89 write_statement: mc_write po ENS_PARA_WRITE pf pvg .

    $default  reduce using rule 89 (write_statement)


state 159

   90 ENS_PARA_WRITE: ENS_PARA_WRITE verg str .

    $default  reduce using rule 90 (ENS_PARA_WRITE)


state 160

   91 ENS_PARA_WRITE: ENS_PARA_WRITE verg var .

    $default  reduce using rule 91 (ENS_PARA_WRITE)


state 161

   76 list_var: list_var verg var .

    $default  reduce using rule 76 (list_var)


state 162

   74 ens_list_var: ens_list_var verg po list_var . pf
   76 list_var: list_var . verg var

    pf    shift, and go to state 173
    verg  shift, and go to state 125


state 163

   10 debut_fct: TYPE mc_rtin idf po IDFS pf . DECS

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 5 (VIDE)

    VIDE    go to state 57
    TYPE    go to state 58
    DECS    go to state 174
    ENSDEC  go to state 60
    DEC     go to state 61


state 164

   59 ENSIDF: ENSIDF verg . idf

    idf  shift, and go to state 175


state 165

   22 partie_gauch_affectation: aff valeur .

    $default  reduce using rule 22 (partie_gauch_affectation)


state 166

   21 DEC: TYPE idf mc_dim po . TAILLE pf pvg

    idf       shift, and go to state 62
    inti      shift, and go to state 63
    real      shift, and go to state 64
    mc_call   shift, and go to state 65
    mc_true   shift, and go to state 66
    mc_false  shift, and go to state 67
    str       shift, and go to state 68
    po        shift, and go to state 69

    EXPRE    go to state 70
    CONDIT   go to state 71
    EXPREt   go to state 72
    TERM     go to state 73
    FACTOR   go to state 74
    OPERAND  go to state 75
    TAILLE   go to state 176
    LOGI     go to state 77
    valeur   go to state 78


state 167

   20 DEC: TYPE idf mul inti . pvg

    pvg  shift, and go to state 177


state 168

   24 ENSIDF_dec: ENSIDF_dec verg idf . partie_gauch_affectation

    aff  shift, and go to state 133

    $default  reduce using rule 5 (VIDE)

    VIDE                      go to state 136
    partie_gauch_affectation  go to state 178


state 169

   48 OPERAND: idf po TAILLE pf .

    $default  reduce using rule 48 (OPERAND)


state 170

   50 OPERAND: mc_call idf po pf .

    $default  reduce using rule 50 (OPERAND)


state 171

   49 OPERAND: mc_call idf po ENSpara . pf
   51 ENSpara: ENSpara . verg valeur

    pf    shift, and go to state 179
    verg  shift, and go to state 180


state 172

   52 ENSpara: valeur .

    $default  reduce using rule 52 (ENSpara)


state 173

   74 ens_list_var: ens_list_var verg po list_var pf .

    $default  reduce using rule 74 (ens_list_var)


state 174

   10 debut_fct: TYPE mc_rtin idf po IDFS pf DECS .

    $default  reduce using rule 10 (debut_fct)


state 175

   59 ENSIDF: ENSIDF verg idf .

    $default  reduce using rule 59 (ENSIDF)


state 176

   21 DEC: TYPE idf mc_dim po TAILLE . pf pvg
   53 TAILLE: TAILLE . verg valeur

    pf    shift, and go to state 181
    verg  shift, and go to state 119


state 177

   20 DEC: TYPE idf mul inti pvg .

    $default  reduce using rule 20 (DEC)


state 178

   24 ENSIDF_dec: ENSIDF_dec verg idf partie_gauch_affectation .

    $default  reduce using rule 24 (ENSIDF_dec)


state 179

   49 OPERAND: mc_call idf po ENSpara pf .

    $default  reduce using rule 49 (OPERAND)


state 180

   51 ENSpara: ENSpara verg . valeur

    idf       shift, and go to state 62
    inti      shift, and go to state 63
    real      shift, and go to state 64
    mc_call   shift, and go to state 65
    mc_true   shift, and go to state 66
    mc_false  shift, and go to state 67
    str       shift, and go to state 68
    po        shift, and go to state 69

    EXPRE    go to state 70
    CONDIT   go to state 71
    EXPREt   go to state 72
    TERM     go to state 73
    FACTOR   go to state 74
    OPERAND  go to state 75
    LOGI     go to state 77
    valeur   go to state 182


state 181

   21 DEC: TYPE idf mc_dim po TAILLE pf . pvg

    pvg  shift, and go to state 183


state 182

   51 ENSpara: ENSpara verg valeur .

    $default  reduce using rule 51 (ENSpara)


state 183

   21 DEC: TYPE idf mc_dim po TAILLE pf pvg .

    $default  reduce using rule 21 (DEC)
