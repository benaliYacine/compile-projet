Terminals unused in grammar

   mc_equival
   err


Grammar

    0 $accept: s $end

    1 s: FCTS PRGM_PRIN

    2 PRGM_PRIN: mc_prgrm idf DECS INSTS mc_end

    3 FCTS: VIDE
    4     | ENSFCT

    5 VIDE: /* empty */

    6 ENSFCT: ENSFCT FCT
    7       | FCT

    8 FCT: TYPE mc_rtin idf po ENSIDF pf DECS ENSINST assignment mc_endr

    9 TYPE: mc_int
   10     | mc_real
   11     | mc_char
   12     | mc_logi

   13 DECS: VIDE
   14     | ENSDEC

   15 ENSDEC: ENSDEC DEC
   16       | DEC

   17 DEC: TYPE ENSIDF pvg
   18    | TYPE idf mul inti pvg
   19    | TYPE idf mc_dim po TAILLE pf pvg

   20 TAILLE: TAILLE verg inti
   21       | inti

   22 EXPRE: EXPRE add TERM
   23      | EXPRE sub TERM
   24      | TERM

   25 TERM: TERM mul FACTOR
   26     | TERM divi FACTOR
   27     | FACTOR

   28 FACTOR: po EXPRE pf
   29       | OPERAND

   30 OPERAND: idf
   31        | inti
   32        | real
   33        | idf po TAILLE pf
   34        | mc_call idf po ENSpara pf

   35 ENSpara: ENSpara verg PARA
   36        | PARA

   37 PARA: inti
   38     | real
   39     | str
   40     | idf

   41 LOGI: mc_true
   42     | mc_false

   43 ENSIDF: ENSIDF verg idf
   44       | idf

   45 INSTS: VIDE
   46      | ENSINST

   47 ENSINST: ENSINST INST
   48        | INST

   49 INST: if_statement
   50     | read_statement
   51     | write_statement
   52     | dowhile_statement
   53     | assignment

   54 if_statement: mc_if po CONDI pf mc_then ENSINST else_clause mc_endif

   55 else_clause: mc_else ENSINST
   56            | /* empty */

   57 assignment: OGassi aff assi pvg

   58 OGassi: idf
   59       | idf po TAILLE pf

   60 assi: LOGI
   61     | str
   62     | EXPRE

   63 read_statement: mc_read po idf pf pvg

   64 write_statement: mc_write po ENS_PARA_WRITE pf pvg

   65 ENS_PARA_WRITE: ENS_PARA_WRITE verg str
   66               | ENS_PARA_WRITE verg idf
   67               | str
   68               | idf

   69 dowhile_statement: mc_dowhile po CONDI pf ENSINST mc_enddo

   70 CONDI: CONDI mc_or CONDIT
   71      | CONDI mc_and CONDIT
   72      | CONDIT

   73 CONDIT: po CONDI pf
   74       | EXPLOGI

   75 EXPLOGI: EXPRE lt EXPRE
   76        | EXPRE gt EXPRE
   77        | EXPRE ge EXPRE
   78        | EXPRE eq EXPRE
   79        | EXPRE ne EXPRE
   80        | EXPRE le EXPRE


Terminals, with rules where they appear

$end (0) 0
error (256)
idf (258) 2 8 18 19 30 33 34 40 43 44 58 59 63 66 68
aff (259) 57
mc_prgrm (260) 2
mc_rtin (261) 8
inti (262) 18 20 21 31 37
real (263) 32 38
mc_endr (264) 8
mc_call (265) 34
mc_dim (266) 19
mc_logi (267) 12
mc_char (268) 11
mc_true (269) 41
mc_false (270) 42
mc_read (271) 63
mc_write (272) 64
pvg (273) 17 18 19 57 63 64
str (274) 39 61 65 67
mc_int (275) 9
mc_real (276) 10
mc_end (277) 2
mc_if (278) 54
mc_then (279) 54
mc_else (280) 55
mc_dowhile (281) 69
mc_enddo (282) 69
mc_equival (283)
mc_or (284) 70
ge (285) 77
eq (286) 78
ne (287) 79
le (288) 80
add (289) 22
sub (290) 23
mul (291) 18 25
divi (292) 26
mc_and (293) 71
mc_endif (294) 54
lt (295) 75
gt (296) 76
po (297) 8 19 28 33 34 54 59 63 64 69 73
pf (298) 8 19 28 33 34 54 59 63 64 69 73
verg (299) 20 35 43 65 66
err (300)


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
s (47)
    on left: 1, on right: 0
PRGM_PRIN (48)
    on left: 2, on right: 1
FCTS (49)
    on left: 3 4, on right: 1
VIDE (50)
    on left: 5, on right: 3 13 45
ENSFCT (51)
    on left: 6 7, on right: 4 6
FCT (52)
    on left: 8, on right: 6 7
TYPE (53)
    on left: 9 10 11 12, on right: 8 17 18 19
DECS (54)
    on left: 13 14, on right: 2 8
ENSDEC (55)
    on left: 15 16, on right: 14 15
DEC (56)
    on left: 17 18 19, on right: 15 16
TAILLE (57)
    on left: 20 21, on right: 19 20 33 59
EXPRE (58)
    on left: 22 23 24, on right: 22 23 28 62 75 76 77 78 79 80
TERM (59)
    on left: 25 26 27, on right: 22 23 24 25 26
FACTOR (60)
    on left: 28 29, on right: 25 26 27
OPERAND (61)
    on left: 30 31 32 33 34, on right: 29
ENSpara (62)
    on left: 35 36, on right: 34 35
PARA (63)
    on left: 37 38 39 40, on right: 35 36
LOGI (64)
    on left: 41 42, on right: 60
ENSIDF (65)
    on left: 43 44, on right: 8 17 43
INSTS (66)
    on left: 45 46, on right: 2
ENSINST (67)
    on left: 47 48, on right: 8 46 47 54 55 69
INST (68)
    on left: 49 50 51 52 53, on right: 47 48
if_statement (69)
    on left: 54, on right: 49
else_clause (70)
    on left: 55 56, on right: 54
assignment (71)
    on left: 57, on right: 8 53
OGassi (72)
    on left: 58 59, on right: 57
assi (73)
    on left: 60 61 62, on right: 57
read_statement (74)
    on left: 63, on right: 50
write_statement (75)
    on left: 64, on right: 51
ENS_PARA_WRITE (76)
    on left: 65 66 67 68, on right: 64 65 66
dowhile_statement (77)
    on left: 69, on right: 52
CONDI (78)
    on left: 70 71 72, on right: 54 69 70 71 73
CONDIT (79)
    on left: 73 74, on right: 70 71 72
EXPLOGI (80)
    on left: 75 76 77 78 79 80, on right: 74


state 0

    0 $accept: . s $end

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 5 (VIDE)

    s       go to state 5
    FCTS    go to state 6
    VIDE    go to state 7
    ENSFCT  go to state 8
    FCT     go to state 9
    TYPE    go to state 10


state 1

   12 TYPE: mc_logi .

    $default  reduce using rule 12 (TYPE)


state 2

   11 TYPE: mc_char .

    $default  reduce using rule 11 (TYPE)


state 3

    9 TYPE: mc_int .

    $default  reduce using rule 9 (TYPE)


state 4

   10 TYPE: mc_real .

    $default  reduce using rule 10 (TYPE)


state 5

    0 $accept: s . $end

    $end  shift, and go to state 11


state 6

    1 s: FCTS . PRGM_PRIN

    mc_prgrm  shift, and go to state 12

    PRGM_PRIN  go to state 13


state 7

    3 FCTS: VIDE .

    $default  reduce using rule 3 (FCTS)


state 8

    4 FCTS: ENSFCT .
    6 ENSFCT: ENSFCT . FCT

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 4 (FCTS)

    FCT   go to state 14
    TYPE  go to state 10


state 9

    7 ENSFCT: FCT .

    $default  reduce using rule 7 (ENSFCT)


state 10

    8 FCT: TYPE . mc_rtin idf po ENSIDF pf DECS ENSINST assignment mc_endr

    mc_rtin  shift, and go to state 15


state 11

    0 $accept: s $end .

    $default  accept


state 12

    2 PRGM_PRIN: mc_prgrm . idf DECS INSTS mc_end

    idf  shift, and go to state 16


state 13

    1 s: FCTS PRGM_PRIN .

    $default  reduce using rule 1 (s)


state 14

    6 ENSFCT: ENSFCT FCT .

    $default  reduce using rule 6 (ENSFCT)


state 15

    8 FCT: TYPE mc_rtin . idf po ENSIDF pf DECS ENSINST assignment mc_endr

    idf  shift, and go to state 17


state 16

    2 PRGM_PRIN: mc_prgrm idf . DECS INSTS mc_end

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 5 (VIDE)

    VIDE    go to state 18
    TYPE    go to state 19
    DECS    go to state 20
    ENSDEC  go to state 21
    DEC     go to state 22


state 17

    8 FCT: TYPE mc_rtin idf . po ENSIDF pf DECS ENSINST assignment mc_endr

    po  shift, and go to state 23


state 18

   13 DECS: VIDE .

    $default  reduce using rule 13 (DECS)


state 19

   17 DEC: TYPE . ENSIDF pvg
   18    | TYPE . idf mul inti pvg
   19    | TYPE . idf mc_dim po TAILLE pf pvg

    idf  shift, and go to state 24

    ENSIDF  go to state 25


state 20

    2 PRGM_PRIN: mc_prgrm idf DECS . INSTS mc_end

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30

    $default  reduce using rule 5 (VIDE)

    VIDE               go to state 31
    INSTS              go to state 32
    ENSINST            go to state 33
    INST               go to state 34
    if_statement       go to state 35
    assignment         go to state 36
    OGassi             go to state 37
    read_statement     go to state 38
    write_statement    go to state 39
    dowhile_statement  go to state 40


state 21

   14 DECS: ENSDEC .
   15 ENSDEC: ENSDEC . DEC

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 14 (DECS)

    TYPE  go to state 19
    DEC   go to state 41


state 22

   16 ENSDEC: DEC .

    $default  reduce using rule 16 (ENSDEC)


state 23

    8 FCT: TYPE mc_rtin idf po . ENSIDF pf DECS ENSINST assignment mc_endr

    idf  shift, and go to state 42

    ENSIDF  go to state 43


state 24

   18 DEC: TYPE idf . mul inti pvg
   19    | TYPE idf . mc_dim po TAILLE pf pvg
   44 ENSIDF: idf .

    mc_dim  shift, and go to state 44
    mul     shift, and go to state 45

    $default  reduce using rule 44 (ENSIDF)


state 25

   17 DEC: TYPE ENSIDF . pvg
   43 ENSIDF: ENSIDF . verg idf

    pvg   shift, and go to state 46
    verg  shift, and go to state 47


state 26

   58 OGassi: idf .
   59       | idf . po TAILLE pf

    po  shift, and go to state 48

    $default  reduce using rule 58 (OGassi)


state 27

   63 read_statement: mc_read . po idf pf pvg

    po  shift, and go to state 49


state 28

   64 write_statement: mc_write . po ENS_PARA_WRITE pf pvg

    po  shift, and go to state 50


state 29

   54 if_statement: mc_if . po CONDI pf mc_then ENSINST else_clause mc_endif

    po  shift, and go to state 51


state 30

   69 dowhile_statement: mc_dowhile . po CONDI pf ENSINST mc_enddo

    po  shift, and go to state 52


state 31

   45 INSTS: VIDE .

    $default  reduce using rule 45 (INSTS)


state 32

    2 PRGM_PRIN: mc_prgrm idf DECS INSTS . mc_end

    mc_end  shift, and go to state 53


state 33

   46 INSTS: ENSINST .
   47 ENSINST: ENSINST . INST

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30

    $default  reduce using rule 46 (INSTS)

    INST               go to state 54
    if_statement       go to state 35
    assignment         go to state 36
    OGassi             go to state 37
    read_statement     go to state 38
    write_statement    go to state 39
    dowhile_statement  go to state 40


state 34

   48 ENSINST: INST .

    $default  reduce using rule 48 (ENSINST)


state 35

   49 INST: if_statement .

    $default  reduce using rule 49 (INST)


state 36

   53 INST: assignment .

    $default  reduce using rule 53 (INST)


state 37

   57 assignment: OGassi . aff assi pvg

    aff  shift, and go to state 55


state 38

   50 INST: read_statement .

    $default  reduce using rule 50 (INST)


state 39

   51 INST: write_statement .

    $default  reduce using rule 51 (INST)


state 40

   52 INST: dowhile_statement .

    $default  reduce using rule 52 (INST)


state 41

   15 ENSDEC: ENSDEC DEC .

    $default  reduce using rule 15 (ENSDEC)


state 42

   44 ENSIDF: idf .

    $default  reduce using rule 44 (ENSIDF)


state 43

    8 FCT: TYPE mc_rtin idf po ENSIDF . pf DECS ENSINST assignment mc_endr
   43 ENSIDF: ENSIDF . verg idf

    pf    shift, and go to state 56
    verg  shift, and go to state 47


state 44

   19 DEC: TYPE idf mc_dim . po TAILLE pf pvg

    po  shift, and go to state 57


state 45

   18 DEC: TYPE idf mul . inti pvg

    inti  shift, and go to state 58


state 46

   17 DEC: TYPE ENSIDF pvg .

    $default  reduce using rule 17 (DEC)


state 47

   43 ENSIDF: ENSIDF verg . idf

    idf  shift, and go to state 59


state 48

   59 OGassi: idf po . TAILLE pf

    inti  shift, and go to state 60

    TAILLE  go to state 61


state 49

   63 read_statement: mc_read po . idf pf pvg

    idf  shift, and go to state 62


state 50

   64 write_statement: mc_write po . ENS_PARA_WRITE pf pvg

    idf  shift, and go to state 63
    str  shift, and go to state 64

    ENS_PARA_WRITE  go to state 65


state 51

   54 if_statement: mc_if po . CONDI pf mc_then ENSINST else_clause mc_endif

    idf      shift, and go to state 66
    inti     shift, and go to state 67
    real     shift, and go to state 68
    mc_call  shift, and go to state 69
    po       shift, and go to state 70

    EXPRE    go to state 71
    TERM     go to state 72
    FACTOR   go to state 73
    OPERAND  go to state 74
    CONDI    go to state 75
    CONDIT   go to state 76
    EXPLOGI  go to state 77


state 52

   69 dowhile_statement: mc_dowhile po . CONDI pf ENSINST mc_enddo

    idf      shift, and go to state 66
    inti     shift, and go to state 67
    real     shift, and go to state 68
    mc_call  shift, and go to state 69
    po       shift, and go to state 70

    EXPRE    go to state 71
    TERM     go to state 72
    FACTOR   go to state 73
    OPERAND  go to state 74
    CONDI    go to state 78
    CONDIT   go to state 76
    EXPLOGI  go to state 77


state 53

    2 PRGM_PRIN: mc_prgrm idf DECS INSTS mc_end .

    $default  reduce using rule 2 (PRGM_PRIN)


state 54

   47 ENSINST: ENSINST INST .

    $default  reduce using rule 47 (ENSINST)


state 55

   57 assignment: OGassi aff . assi pvg

    idf       shift, and go to state 66
    inti      shift, and go to state 67
    real      shift, and go to state 68
    mc_call   shift, and go to state 69
    mc_true   shift, and go to state 79
    mc_false  shift, and go to state 80
    str       shift, and go to state 81
    po        shift, and go to state 82

    EXPRE    go to state 83
    TERM     go to state 72
    FACTOR   go to state 73
    OPERAND  go to state 74
    LOGI     go to state 84
    assi     go to state 85


state 56

    8 FCT: TYPE mc_rtin idf po ENSIDF pf . DECS ENSINST assignment mc_endr

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 5 (VIDE)

    VIDE    go to state 18
    TYPE    go to state 19
    DECS    go to state 86
    ENSDEC  go to state 21
    DEC     go to state 22


state 57

   19 DEC: TYPE idf mc_dim po . TAILLE pf pvg

    inti  shift, and go to state 60

    TAILLE  go to state 87


state 58

   18 DEC: TYPE idf mul inti . pvg

    pvg  shift, and go to state 88


state 59

   43 ENSIDF: ENSIDF verg idf .

    $default  reduce using rule 43 (ENSIDF)


state 60

   21 TAILLE: inti .

    $default  reduce using rule 21 (TAILLE)


state 61

   20 TAILLE: TAILLE . verg inti
   59 OGassi: idf po TAILLE . pf

    pf    shift, and go to state 89
    verg  shift, and go to state 90


state 62

   63 read_statement: mc_read po idf . pf pvg

    pf  shift, and go to state 91


state 63

   68 ENS_PARA_WRITE: idf .

    $default  reduce using rule 68 (ENS_PARA_WRITE)


state 64

   67 ENS_PARA_WRITE: str .

    $default  reduce using rule 67 (ENS_PARA_WRITE)


state 65

   64 write_statement: mc_write po ENS_PARA_WRITE . pf pvg
   65 ENS_PARA_WRITE: ENS_PARA_WRITE . verg str
   66               | ENS_PARA_WRITE . verg idf

    pf    shift, and go to state 92
    verg  shift, and go to state 93


state 66

   30 OPERAND: idf .
   33        | idf . po TAILLE pf

    po  shift, and go to state 94

    $default  reduce using rule 30 (OPERAND)


state 67

   31 OPERAND: inti .

    $default  reduce using rule 31 (OPERAND)


state 68

   32 OPERAND: real .

    $default  reduce using rule 32 (OPERAND)


state 69

   34 OPERAND: mc_call . idf po ENSpara pf

    idf  shift, and go to state 95


state 70

   28 FACTOR: po . EXPRE pf
   73 CONDIT: po . CONDI pf

    idf      shift, and go to state 66
    inti     shift, and go to state 67
    real     shift, and go to state 68
    mc_call  shift, and go to state 69
    po       shift, and go to state 70

    EXPRE    go to state 96
    TERM     go to state 72
    FACTOR   go to state 73
    OPERAND  go to state 74
    CONDI    go to state 97
    CONDIT   go to state 76
    EXPLOGI  go to state 77


state 71

   22 EXPRE: EXPRE . add TERM
   23      | EXPRE . sub TERM
   75 EXPLOGI: EXPRE . lt EXPRE
   76        | EXPRE . gt EXPRE
   77        | EXPRE . ge EXPRE
   78        | EXPRE . eq EXPRE
   79        | EXPRE . ne EXPRE
   80        | EXPRE . le EXPRE

    ge   shift, and go to state 98
    eq   shift, and go to state 99
    ne   shift, and go to state 100
    le   shift, and go to state 101
    add  shift, and go to state 102
    sub  shift, and go to state 103
    lt   shift, and go to state 104
    gt   shift, and go to state 105


state 72

   24 EXPRE: TERM .
   25 TERM: TERM . mul FACTOR
   26     | TERM . divi FACTOR

    mul   shift, and go to state 106
    divi  shift, and go to state 107

    $default  reduce using rule 24 (EXPRE)


state 73

   27 TERM: FACTOR .

    $default  reduce using rule 27 (TERM)


state 74

   29 FACTOR: OPERAND .

    $default  reduce using rule 29 (FACTOR)


state 75

   54 if_statement: mc_if po CONDI . pf mc_then ENSINST else_clause mc_endif
   70 CONDI: CONDI . mc_or CONDIT
   71      | CONDI . mc_and CONDIT

    mc_or   shift, and go to state 108
    mc_and  shift, and go to state 109
    pf      shift, and go to state 110


state 76

   72 CONDI: CONDIT .

    $default  reduce using rule 72 (CONDI)


state 77

   74 CONDIT: EXPLOGI .

    $default  reduce using rule 74 (CONDIT)


state 78

   69 dowhile_statement: mc_dowhile po CONDI . pf ENSINST mc_enddo
   70 CONDI: CONDI . mc_or CONDIT
   71      | CONDI . mc_and CONDIT

    mc_or   shift, and go to state 108
    mc_and  shift, and go to state 109
    pf      shift, and go to state 111


state 79

   41 LOGI: mc_true .

    $default  reduce using rule 41 (LOGI)


state 80

   42 LOGI: mc_false .

    $default  reduce using rule 42 (LOGI)


state 81

   61 assi: str .

    $default  reduce using rule 61 (assi)


state 82

   28 FACTOR: po . EXPRE pf

    idf      shift, and go to state 66
    inti     shift, and go to state 67
    real     shift, and go to state 68
    mc_call  shift, and go to state 69
    po       shift, and go to state 82

    EXPRE    go to state 112
    TERM     go to state 72
    FACTOR   go to state 73
    OPERAND  go to state 74


state 83

   22 EXPRE: EXPRE . add TERM
   23      | EXPRE . sub TERM
   62 assi: EXPRE .

    add  shift, and go to state 102
    sub  shift, and go to state 103

    $default  reduce using rule 62 (assi)


state 84

   60 assi: LOGI .

    $default  reduce using rule 60 (assi)


state 85

   57 assignment: OGassi aff assi . pvg

    pvg  shift, and go to state 113


state 86

    8 FCT: TYPE mc_rtin idf po ENSIDF pf DECS . ENSINST assignment mc_endr

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30

    ENSINST            go to state 114
    INST               go to state 34
    if_statement       go to state 35
    assignment         go to state 36
    OGassi             go to state 37
    read_statement     go to state 38
    write_statement    go to state 39
    dowhile_statement  go to state 40


state 87

   19 DEC: TYPE idf mc_dim po TAILLE . pf pvg
   20 TAILLE: TAILLE . verg inti

    pf    shift, and go to state 115
    verg  shift, and go to state 90


state 88

   18 DEC: TYPE idf mul inti pvg .

    $default  reduce using rule 18 (DEC)


state 89

   59 OGassi: idf po TAILLE pf .

    $default  reduce using rule 59 (OGassi)


state 90

   20 TAILLE: TAILLE verg . inti

    inti  shift, and go to state 116


state 91

   63 read_statement: mc_read po idf pf . pvg

    pvg  shift, and go to state 117


state 92

   64 write_statement: mc_write po ENS_PARA_WRITE pf . pvg

    pvg  shift, and go to state 118


state 93

   65 ENS_PARA_WRITE: ENS_PARA_WRITE verg . str
   66               | ENS_PARA_WRITE verg . idf

    idf  shift, and go to state 119
    str  shift, and go to state 120


state 94

   33 OPERAND: idf po . TAILLE pf

    inti  shift, and go to state 60

    TAILLE  go to state 121


state 95

   34 OPERAND: mc_call idf . po ENSpara pf

    po  shift, and go to state 122


state 96

   22 EXPRE: EXPRE . add TERM
   23      | EXPRE . sub TERM
   28 FACTOR: po EXPRE . pf
   75 EXPLOGI: EXPRE . lt EXPRE
   76        | EXPRE . gt EXPRE
   77        | EXPRE . ge EXPRE
   78        | EXPRE . eq EXPRE
   79        | EXPRE . ne EXPRE
   80        | EXPRE . le EXPRE

    ge   shift, and go to state 98
    eq   shift, and go to state 99
    ne   shift, and go to state 100
    le   shift, and go to state 101
    add  shift, and go to state 102
    sub  shift, and go to state 103
    lt   shift, and go to state 104
    gt   shift, and go to state 105
    pf   shift, and go to state 123


state 97

   70 CONDI: CONDI . mc_or CONDIT
   71      | CONDI . mc_and CONDIT
   73 CONDIT: po CONDI . pf

    mc_or   shift, and go to state 108
    mc_and  shift, and go to state 109
    pf      shift, and go to state 124


state 98

   77 EXPLOGI: EXPRE ge . EXPRE

    idf      shift, and go to state 66
    inti     shift, and go to state 67
    real     shift, and go to state 68
    mc_call  shift, and go to state 69
    po       shift, and go to state 82

    EXPRE    go to state 125
    TERM     go to state 72
    FACTOR   go to state 73
    OPERAND  go to state 74


state 99

   78 EXPLOGI: EXPRE eq . EXPRE

    idf      shift, and go to state 66
    inti     shift, and go to state 67
    real     shift, and go to state 68
    mc_call  shift, and go to state 69
    po       shift, and go to state 82

    EXPRE    go to state 126
    TERM     go to state 72
    FACTOR   go to state 73
    OPERAND  go to state 74


state 100

   79 EXPLOGI: EXPRE ne . EXPRE

    idf      shift, and go to state 66
    inti     shift, and go to state 67
    real     shift, and go to state 68
    mc_call  shift, and go to state 69
    po       shift, and go to state 82

    EXPRE    go to state 127
    TERM     go to state 72
    FACTOR   go to state 73
    OPERAND  go to state 74


state 101

   80 EXPLOGI: EXPRE le . EXPRE

    idf      shift, and go to state 66
    inti     shift, and go to state 67
    real     shift, and go to state 68
    mc_call  shift, and go to state 69
    po       shift, and go to state 82

    EXPRE    go to state 128
    TERM     go to state 72
    FACTOR   go to state 73
    OPERAND  go to state 74


state 102

   22 EXPRE: EXPRE add . TERM

    idf      shift, and go to state 66
    inti     shift, and go to state 67
    real     shift, and go to state 68
    mc_call  shift, and go to state 69
    po       shift, and go to state 82

    TERM     go to state 129
    FACTOR   go to state 73
    OPERAND  go to state 74


state 103

   23 EXPRE: EXPRE sub . TERM

    idf      shift, and go to state 66
    inti     shift, and go to state 67
    real     shift, and go to state 68
    mc_call  shift, and go to state 69
    po       shift, and go to state 82

    TERM     go to state 130
    FACTOR   go to state 73
    OPERAND  go to state 74


state 104

   75 EXPLOGI: EXPRE lt . EXPRE

    idf      shift, and go to state 66
    inti     shift, and go to state 67
    real     shift, and go to state 68
    mc_call  shift, and go to state 69
    po       shift, and go to state 82

    EXPRE    go to state 131
    TERM     go to state 72
    FACTOR   go to state 73
    OPERAND  go to state 74


state 105

   76 EXPLOGI: EXPRE gt . EXPRE

    idf      shift, and go to state 66
    inti     shift, and go to state 67
    real     shift, and go to state 68
    mc_call  shift, and go to state 69
    po       shift, and go to state 82

    EXPRE    go to state 132
    TERM     go to state 72
    FACTOR   go to state 73
    OPERAND  go to state 74


state 106

   25 TERM: TERM mul . FACTOR

    idf      shift, and go to state 66
    inti     shift, and go to state 67
    real     shift, and go to state 68
    mc_call  shift, and go to state 69
    po       shift, and go to state 82

    FACTOR   go to state 133
    OPERAND  go to state 74


state 107

   26 TERM: TERM divi . FACTOR

    idf      shift, and go to state 66
    inti     shift, and go to state 67
    real     shift, and go to state 68
    mc_call  shift, and go to state 69
    po       shift, and go to state 82

    FACTOR   go to state 134
    OPERAND  go to state 74


state 108

   70 CONDI: CONDI mc_or . CONDIT

    idf      shift, and go to state 66
    inti     shift, and go to state 67
    real     shift, and go to state 68
    mc_call  shift, and go to state 69
    po       shift, and go to state 70

    EXPRE    go to state 71
    TERM     go to state 72
    FACTOR   go to state 73
    OPERAND  go to state 74
    CONDIT   go to state 135
    EXPLOGI  go to state 77


state 109

   71 CONDI: CONDI mc_and . CONDIT

    idf      shift, and go to state 66
    inti     shift, and go to state 67
    real     shift, and go to state 68
    mc_call  shift, and go to state 69
    po       shift, and go to state 70

    EXPRE    go to state 71
    TERM     go to state 72
    FACTOR   go to state 73
    OPERAND  go to state 74
    CONDIT   go to state 136
    EXPLOGI  go to state 77


state 110

   54 if_statement: mc_if po CONDI pf . mc_then ENSINST else_clause mc_endif

    mc_then  shift, and go to state 137


state 111

   69 dowhile_statement: mc_dowhile po CONDI pf . ENSINST mc_enddo

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30

    ENSINST            go to state 138
    INST               go to state 34
    if_statement       go to state 35
    assignment         go to state 36
    OGassi             go to state 37
    read_statement     go to state 38
    write_statement    go to state 39
    dowhile_statement  go to state 40


state 112

   22 EXPRE: EXPRE . add TERM
   23      | EXPRE . sub TERM
   28 FACTOR: po EXPRE . pf

    add  shift, and go to state 102
    sub  shift, and go to state 103
    pf   shift, and go to state 123


state 113

   57 assignment: OGassi aff assi pvg .

    $default  reduce using rule 57 (assignment)


state 114

    8 FCT: TYPE mc_rtin idf po ENSIDF pf DECS ENSINST . assignment mc_endr
   47 ENSINST: ENSINST . INST

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30

    INST               go to state 54
    if_statement       go to state 35
    assignment         go to state 139
    OGassi             go to state 37
    read_statement     go to state 38
    write_statement    go to state 39
    dowhile_statement  go to state 40


state 115

   19 DEC: TYPE idf mc_dim po TAILLE pf . pvg

    pvg  shift, and go to state 140


state 116

   20 TAILLE: TAILLE verg inti .

    $default  reduce using rule 20 (TAILLE)


state 117

   63 read_statement: mc_read po idf pf pvg .

    $default  reduce using rule 63 (read_statement)


state 118

   64 write_statement: mc_write po ENS_PARA_WRITE pf pvg .

    $default  reduce using rule 64 (write_statement)


state 119

   66 ENS_PARA_WRITE: ENS_PARA_WRITE verg idf .

    $default  reduce using rule 66 (ENS_PARA_WRITE)


state 120

   65 ENS_PARA_WRITE: ENS_PARA_WRITE verg str .

    $default  reduce using rule 65 (ENS_PARA_WRITE)


state 121

   20 TAILLE: TAILLE . verg inti
   33 OPERAND: idf po TAILLE . pf

    pf    shift, and go to state 141
    verg  shift, and go to state 90


state 122

   34 OPERAND: mc_call idf po . ENSpara pf

    idf   shift, and go to state 142
    inti  shift, and go to state 143
    real  shift, and go to state 144
    str   shift, and go to state 145

    ENSpara  go to state 146
    PARA     go to state 147


state 123

   28 FACTOR: po EXPRE pf .

    $default  reduce using rule 28 (FACTOR)


state 124

   73 CONDIT: po CONDI pf .

    $default  reduce using rule 73 (CONDIT)


state 125

   22 EXPRE: EXPRE . add TERM
   23      | EXPRE . sub TERM
   77 EXPLOGI: EXPRE ge EXPRE .

    add  shift, and go to state 102
    sub  shift, and go to state 103

    $default  reduce using rule 77 (EXPLOGI)


state 126

   22 EXPRE: EXPRE . add TERM
   23      | EXPRE . sub TERM
   78 EXPLOGI: EXPRE eq EXPRE .

    add  shift, and go to state 102
    sub  shift, and go to state 103

    $default  reduce using rule 78 (EXPLOGI)


state 127

   22 EXPRE: EXPRE . add TERM
   23      | EXPRE . sub TERM
   79 EXPLOGI: EXPRE ne EXPRE .

    add  shift, and go to state 102
    sub  shift, and go to state 103

    $default  reduce using rule 79 (EXPLOGI)


state 128

   22 EXPRE: EXPRE . add TERM
   23      | EXPRE . sub TERM
   80 EXPLOGI: EXPRE le EXPRE .

    add  shift, and go to state 102
    sub  shift, and go to state 103

    $default  reduce using rule 80 (EXPLOGI)


state 129

   22 EXPRE: EXPRE add TERM .
   25 TERM: TERM . mul FACTOR
   26     | TERM . divi FACTOR

    mul   shift, and go to state 106
    divi  shift, and go to state 107

    $default  reduce using rule 22 (EXPRE)


state 130

   23 EXPRE: EXPRE sub TERM .
   25 TERM: TERM . mul FACTOR
   26     | TERM . divi FACTOR

    mul   shift, and go to state 106
    divi  shift, and go to state 107

    $default  reduce using rule 23 (EXPRE)


state 131

   22 EXPRE: EXPRE . add TERM
   23      | EXPRE . sub TERM
   75 EXPLOGI: EXPRE lt EXPRE .

    add  shift, and go to state 102
    sub  shift, and go to state 103

    $default  reduce using rule 75 (EXPLOGI)


state 132

   22 EXPRE: EXPRE . add TERM
   23      | EXPRE . sub TERM
   76 EXPLOGI: EXPRE gt EXPRE .

    add  shift, and go to state 102
    sub  shift, and go to state 103

    $default  reduce using rule 76 (EXPLOGI)


state 133

   25 TERM: TERM mul FACTOR .

    $default  reduce using rule 25 (TERM)


state 134

   26 TERM: TERM divi FACTOR .

    $default  reduce using rule 26 (TERM)


state 135

   70 CONDI: CONDI mc_or CONDIT .

    $default  reduce using rule 70 (CONDI)


state 136

   71 CONDI: CONDI mc_and CONDIT .

    $default  reduce using rule 71 (CONDI)


state 137

   54 if_statement: mc_if po CONDI pf mc_then . ENSINST else_clause mc_endif

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30

    ENSINST            go to state 148
    INST               go to state 34
    if_statement       go to state 35
    assignment         go to state 36
    OGassi             go to state 37
    read_statement     go to state 38
    write_statement    go to state 39
    dowhile_statement  go to state 40


state 138

   47 ENSINST: ENSINST . INST
   69 dowhile_statement: mc_dowhile po CONDI pf ENSINST . mc_enddo

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_enddo    shift, and go to state 149

    INST               go to state 54
    if_statement       go to state 35
    assignment         go to state 36
    OGassi             go to state 37
    read_statement     go to state 38
    write_statement    go to state 39
    dowhile_statement  go to state 40


state 139

    8 FCT: TYPE mc_rtin idf po ENSIDF pf DECS ENSINST assignment . mc_endr
   53 INST: assignment .

    mc_endr  shift, and go to state 150

    $default  reduce using rule 53 (INST)


state 140

   19 DEC: TYPE idf mc_dim po TAILLE pf pvg .

    $default  reduce using rule 19 (DEC)


state 141

   33 OPERAND: idf po TAILLE pf .

    $default  reduce using rule 33 (OPERAND)


state 142

   40 PARA: idf .

    $default  reduce using rule 40 (PARA)


state 143

   37 PARA: inti .

    $default  reduce using rule 37 (PARA)


state 144

   38 PARA: real .

    $default  reduce using rule 38 (PARA)


state 145

   39 PARA: str .

    $default  reduce using rule 39 (PARA)


state 146

   34 OPERAND: mc_call idf po ENSpara . pf
   35 ENSpara: ENSpara . verg PARA

    pf    shift, and go to state 151
    verg  shift, and go to state 152


state 147

   36 ENSpara: PARA .

    $default  reduce using rule 36 (ENSpara)


state 148

   47 ENSINST: ENSINST . INST
   54 if_statement: mc_if po CONDI pf mc_then ENSINST . else_clause mc_endif

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_else     shift, and go to state 153
    mc_dowhile  shift, and go to state 30

    $default  reduce using rule 56 (else_clause)

    INST               go to state 54
    if_statement       go to state 35
    else_clause        go to state 154
    assignment         go to state 36
    OGassi             go to state 37
    read_statement     go to state 38
    write_statement    go to state 39
    dowhile_statement  go to state 40


state 149

   69 dowhile_statement: mc_dowhile po CONDI pf ENSINST mc_enddo .

    $default  reduce using rule 69 (dowhile_statement)


state 150

    8 FCT: TYPE mc_rtin idf po ENSIDF pf DECS ENSINST assignment mc_endr .

    $default  reduce using rule 8 (FCT)


state 151

   34 OPERAND: mc_call idf po ENSpara pf .

    $default  reduce using rule 34 (OPERAND)


state 152

   35 ENSpara: ENSpara verg . PARA

    idf   shift, and go to state 142
    inti  shift, and go to state 143
    real  shift, and go to state 144
    str   shift, and go to state 145

    PARA  go to state 155


state 153

   55 else_clause: mc_else . ENSINST

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30

    ENSINST            go to state 156
    INST               go to state 34
    if_statement       go to state 35
    assignment         go to state 36
    OGassi             go to state 37
    read_statement     go to state 38
    write_statement    go to state 39
    dowhile_statement  go to state 40


state 154

   54 if_statement: mc_if po CONDI pf mc_then ENSINST else_clause . mc_endif

    mc_endif  shift, and go to state 157


state 155

   35 ENSpara: ENSpara verg PARA .

    $default  reduce using rule 35 (ENSpara)


state 156

   47 ENSINST: ENSINST . INST
   55 else_clause: mc_else ENSINST .

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30

    $default  reduce using rule 55 (else_clause)

    INST               go to state 54
    if_statement       go to state 35
    assignment         go to state 36
    OGassi             go to state 37
    read_statement     go to state 38
    write_statement    go to state 39
    dowhile_statement  go to state 40


state 157

   54 if_statement: mc_if po CONDI pf mc_then ENSINST else_clause mc_endif .

    $default  reduce using rule 54 (if_statement)
