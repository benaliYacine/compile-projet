Terminals unused in grammar

   err


Grammar

    0 $accept: s $end

    1 s: FCTS PRGM_PRIN

    2 PRGM_PRIN: mc_prgrm idf DECS INSTS mc_end

    3 FCTS: VIDE
    4     | ENSFCT

    5 VIDE: /* empty */

    6 ENSFCT: ENSFCT FCT
    7       | FCT

    8 FCT: TYPE mc_rtin idf po IDFS pf DECS ENSINST assignment mc_endr
    9    | TYPE mc_rtin idf po IDFS pf DECS assignment mc_endr

   10 TYPE: mc_int
   11     | mc_real
   12     | mc_char
   13     | mc_logi

   14 DECS: VIDE
   15     | ENSDEC

   16 ENSDEC: ENSDEC DEC
   17       | DEC

   18 DEC: TYPE ENSIDF pvg
   19    | TYPE idf mul inti pvg
   20    | TYPE idf mc_dim po TAILLE pf pvg

   21 TAILLE: TAILLE verg inti
   22       | inti

   23 EXPRE: EXPRE add TERM
   24      | EXPRE sub TERM
   25      | TERM

   26 TERM: TERM mul FACTOR
   27     | TERM divi FACTOR
   28     | FACTOR

   29 FACTOR: po EXPRE pf
   30       | OPERAND

   31 OPERAND: idf
   32        | inti
   33        | real
   34        | idf po TAILLE pf
   35        | mc_call idf po ENSpara pf

   36 ENSpara: ENSpara verg valeur
   37        | valeur

   38 LOGI: mc_true
   39     | mc_false

   40 IDFS: ENSIDF
   41     | VIDE

   42 ENSIDF: ENSIDF verg idf
   43       | idf

   44 INSTS: VIDE
   45      | ENSINST

   46 ENSINST: ENSINST INST
   47        | INST

   48 INST: if_statement
   49     | read_statement
   50     | write_statement
   51     | dowhile_statement
   52     | assignment
   53     | eqival_statement

   54 eqival_statement: mc_equival ens_list_vars pvg

   55 ens_list_vars: ens_list_var
   56              | VIDE

   57 ens_list_var: ens_list_var verg po list_var pf
   58             | po list_var pf

   59 list_var: list_var verg var
   60         | var

   61 var: idf
   62    | /* empty */

   63 if_statement: mc_if po CONDI pf mc_then ENSINST else_clause mc_endif

   64 else_clause: mc_else ENSINST
   65            | /* empty */

   66 assignment: OGassi aff valeur pvg

   67 OGassi: idf
   68       | idf po TAILLE pf

   69 valeur: LOGI
   70       | str
   71       | EXPRE

   72 read_statement: mc_read po idf pf pvg

   73 write_statement: mc_write po ENS_PARA_WRITE pf pvg

   74 ENS_PARA_WRITE: ENS_PARA_WRITE verg str
   75               | ENS_PARA_WRITE verg idf
   76               | str
   77               | idf

   78 dowhile_statement: mc_dowhile po CONDI pf ENSINST mc_enddo

   79 CONDI: CONDI mc_or CONDIT
   80      | CONDI mc_and CONDIT
   81      | CONDIT

   82 CONDIT: po CONDI pf
   83       | EXPLOGI

   84 EXPLOGI: EXPRE lt EXPRE
   85        | EXPRE gt EXPRE
   86        | EXPRE ge EXPRE
   87        | EXPRE eq EXPRE
   88        | EXPRE ne EXPRE
   89        | EXPRE le EXPRE


Terminals, with rules where they appear

$end (0) 0
error (256)
idf (258) 2 8 9 19 20 31 34 35 42 43 61 67 68 72 75 77
aff (259) 66
mc_prgrm (260) 2
mc_rtin (261) 8 9
inti (262) 19 21 22 32
real (263) 33
mc_endr (264) 8 9
mc_call (265) 35
mc_dim (266) 20
mc_logi (267) 13
mc_char (268) 12
mc_true (269) 38
mc_false (270) 39
mc_read (271) 72
mc_write (272) 73
pvg (273) 18 19 20 54 66 72 73
str (274) 70 74 76
mc_int (275) 10
mc_real (276) 11
mc_end (277) 2
mc_if (278) 63
mc_then (279) 63
mc_else (280) 64
mc_dowhile (281) 78
mc_enddo (282) 78
mc_equival (283) 54
mc_or (284) 79
ge (285) 86
eq (286) 87
ne (287) 88
le (288) 89
add (289) 23
sub (290) 24
mul (291) 19 26
divi (292) 27
mc_and (293) 80
mc_endif (294) 63
lt (295) 84
gt (296) 85
po (297) 8 9 20 29 34 35 57 58 63 68 72 73 78 82
pf (298) 8 9 20 29 34 35 57 58 63 68 72 73 78 82
verg (299) 21 36 42 57 59 74 75
err (300)


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
s (47)
    on left: 1, on right: 0
PRGM_PRIN (48)
    on left: 2, on right: 1
FCTS (49)
    on left: 3 4, on right: 1
VIDE (50)
    on left: 5, on right: 3 14 41 44 56
ENSFCT (51)
    on left: 6 7, on right: 4 6
FCT (52)
    on left: 8 9, on right: 6 7
TYPE (53)
    on left: 10 11 12 13, on right: 8 9 18 19 20
DECS (54)
    on left: 14 15, on right: 2 8 9
ENSDEC (55)
    on left: 16 17, on right: 15 16
DEC (56)
    on left: 18 19 20, on right: 16 17
TAILLE (57)
    on left: 21 22, on right: 20 21 34 68
EXPRE (58)
    on left: 23 24 25, on right: 23 24 29 71 84 85 86 87 88 89
TERM (59)
    on left: 26 27 28, on right: 23 24 25 26 27
FACTOR (60)
    on left: 29 30, on right: 26 27 28
OPERAND (61)
    on left: 31 32 33 34 35, on right: 30
ENSpara (62)
    on left: 36 37, on right: 35 36
LOGI (63)
    on left: 38 39, on right: 69
IDFS (64)
    on left: 40 41, on right: 8 9
ENSIDF (65)
    on left: 42 43, on right: 18 40 42
INSTS (66)
    on left: 44 45, on right: 2
ENSINST (67)
    on left: 46 47, on right: 8 45 46 63 64 78
INST (68)
    on left: 48 49 50 51 52 53, on right: 46 47
eqival_statement (69)
    on left: 54, on right: 53
ens_list_vars (70)
    on left: 55 56, on right: 54
ens_list_var (71)
    on left: 57 58, on right: 55 57
list_var (72)
    on left: 59 60, on right: 57 58 59
var (73)
    on left: 61 62, on right: 59 60
if_statement (74)
    on left: 63, on right: 48
else_clause (75)
    on left: 64 65, on right: 63
assignment (76)
    on left: 66, on right: 8 9 52
OGassi (77)
    on left: 67 68, on right: 66
valeur (78)
    on left: 69 70 71, on right: 36 37 66
read_statement (79)
    on left: 72, on right: 49
write_statement (80)
    on left: 73, on right: 50
ENS_PARA_WRITE (81)
    on left: 74 75 76 77, on right: 73 74 75
dowhile_statement (82)
    on left: 78, on right: 51
CONDI (83)
    on left: 79 80 81, on right: 63 78 79 80 82
CONDIT (84)
    on left: 82 83, on right: 79 80 81
EXPLOGI (85)
    on left: 84 85 86 87 88 89, on right: 83


state 0

    0 $accept: . s $end

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 5 (VIDE)

    s       go to state 5
    FCTS    go to state 6
    VIDE    go to state 7
    ENSFCT  go to state 8
    FCT     go to state 9
    TYPE    go to state 10


state 1

   13 TYPE: mc_logi .

    $default  reduce using rule 13 (TYPE)


state 2

   12 TYPE: mc_char .

    $default  reduce using rule 12 (TYPE)


state 3

   10 TYPE: mc_int .

    $default  reduce using rule 10 (TYPE)


state 4

   11 TYPE: mc_real .

    $default  reduce using rule 11 (TYPE)


state 5

    0 $accept: s . $end

    $end  shift, and go to state 11


state 6

    1 s: FCTS . PRGM_PRIN

    mc_prgrm  shift, and go to state 12

    PRGM_PRIN  go to state 13


state 7

    3 FCTS: VIDE .

    $default  reduce using rule 3 (FCTS)


state 8

    4 FCTS: ENSFCT .
    6 ENSFCT: ENSFCT . FCT

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 4 (FCTS)

    FCT   go to state 14
    TYPE  go to state 10


state 9

    7 ENSFCT: FCT .

    $default  reduce using rule 7 (ENSFCT)


state 10

    8 FCT: TYPE . mc_rtin idf po IDFS pf DECS ENSINST assignment mc_endr
    9    | TYPE . mc_rtin idf po IDFS pf DECS assignment mc_endr

    mc_rtin  shift, and go to state 15


state 11

    0 $accept: s $end .

    $default  accept


state 12

    2 PRGM_PRIN: mc_prgrm . idf DECS INSTS mc_end

    idf  shift, and go to state 16


state 13

    1 s: FCTS PRGM_PRIN .

    $default  reduce using rule 1 (s)


state 14

    6 ENSFCT: ENSFCT FCT .

    $default  reduce using rule 6 (ENSFCT)


state 15

    8 FCT: TYPE mc_rtin . idf po IDFS pf DECS ENSINST assignment mc_endr
    9    | TYPE mc_rtin . idf po IDFS pf DECS assignment mc_endr

    idf  shift, and go to state 17


state 16

    2 PRGM_PRIN: mc_prgrm idf . DECS INSTS mc_end

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 5 (VIDE)

    VIDE    go to state 18
    TYPE    go to state 19
    DECS    go to state 20
    ENSDEC  go to state 21
    DEC     go to state 22


state 17

    8 FCT: TYPE mc_rtin idf . po IDFS pf DECS ENSINST assignment mc_endr
    9    | TYPE mc_rtin idf . po IDFS pf DECS assignment mc_endr

    po  shift, and go to state 23


state 18

   14 DECS: VIDE .

    $default  reduce using rule 14 (DECS)


state 19

   18 DEC: TYPE . ENSIDF pvg
   19    | TYPE . idf mul inti pvg
   20    | TYPE . idf mc_dim po TAILLE pf pvg

    idf  shift, and go to state 24

    ENSIDF  go to state 25


state 20

    2 PRGM_PRIN: mc_prgrm idf DECS . INSTS mc_end

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    $default  reduce using rule 5 (VIDE)

    VIDE               go to state 32
    INSTS              go to state 33
    ENSINST            go to state 34
    INST               go to state 35
    eqival_statement   go to state 36
    if_statement       go to state 37
    assignment         go to state 38
    OGassi             go to state 39
    read_statement     go to state 40
    write_statement    go to state 41
    dowhile_statement  go to state 42


state 21

   15 DECS: ENSDEC .
   16 ENSDEC: ENSDEC . DEC

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 15 (DECS)

    TYPE  go to state 19
    DEC   go to state 43


state 22

   17 ENSDEC: DEC .

    $default  reduce using rule 17 (ENSDEC)


state 23

    8 FCT: TYPE mc_rtin idf po . IDFS pf DECS ENSINST assignment mc_endr
    9    | TYPE mc_rtin idf po . IDFS pf DECS assignment mc_endr

    idf  shift, and go to state 44

    $default  reduce using rule 5 (VIDE)

    VIDE    go to state 45
    IDFS    go to state 46
    ENSIDF  go to state 47


state 24

   19 DEC: TYPE idf . mul inti pvg
   20    | TYPE idf . mc_dim po TAILLE pf pvg
   43 ENSIDF: idf .

    mc_dim  shift, and go to state 48
    mul     shift, and go to state 49

    $default  reduce using rule 43 (ENSIDF)


state 25

   18 DEC: TYPE ENSIDF . pvg
   42 ENSIDF: ENSIDF . verg idf

    pvg   shift, and go to state 50
    verg  shift, and go to state 51


state 26

   67 OGassi: idf .
   68       | idf . po TAILLE pf

    po  shift, and go to state 52

    $default  reduce using rule 67 (OGassi)


state 27

   72 read_statement: mc_read . po idf pf pvg

    po  shift, and go to state 53


state 28

   73 write_statement: mc_write . po ENS_PARA_WRITE pf pvg

    po  shift, and go to state 54


state 29

   63 if_statement: mc_if . po CONDI pf mc_then ENSINST else_clause mc_endif

    po  shift, and go to state 55


state 30

   78 dowhile_statement: mc_dowhile . po CONDI pf ENSINST mc_enddo

    po  shift, and go to state 56


state 31

   54 eqival_statement: mc_equival . ens_list_vars pvg

    po  shift, and go to state 57

    $default  reduce using rule 5 (VIDE)

    VIDE           go to state 58
    ens_list_vars  go to state 59
    ens_list_var   go to state 60


state 32

   44 INSTS: VIDE .

    $default  reduce using rule 44 (INSTS)


state 33

    2 PRGM_PRIN: mc_prgrm idf DECS INSTS . mc_end

    mc_end  shift, and go to state 61


state 34

   45 INSTS: ENSINST .
   46 ENSINST: ENSINST . INST

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    $default  reduce using rule 45 (INSTS)

    INST               go to state 62
    eqival_statement   go to state 36
    if_statement       go to state 37
    assignment         go to state 38
    OGassi             go to state 39
    read_statement     go to state 40
    write_statement    go to state 41
    dowhile_statement  go to state 42


state 35

   47 ENSINST: INST .

    $default  reduce using rule 47 (ENSINST)


state 36

   53 INST: eqival_statement .

    $default  reduce using rule 53 (INST)


state 37

   48 INST: if_statement .

    $default  reduce using rule 48 (INST)


state 38

   52 INST: assignment .

    $default  reduce using rule 52 (INST)


state 39

   66 assignment: OGassi . aff valeur pvg

    aff  shift, and go to state 63


state 40

   49 INST: read_statement .

    $default  reduce using rule 49 (INST)


state 41

   50 INST: write_statement .

    $default  reduce using rule 50 (INST)


state 42

   51 INST: dowhile_statement .

    $default  reduce using rule 51 (INST)


state 43

   16 ENSDEC: ENSDEC DEC .

    $default  reduce using rule 16 (ENSDEC)


state 44

   43 ENSIDF: idf .

    $default  reduce using rule 43 (ENSIDF)


state 45

   41 IDFS: VIDE .

    $default  reduce using rule 41 (IDFS)


state 46

    8 FCT: TYPE mc_rtin idf po IDFS . pf DECS ENSINST assignment mc_endr
    9    | TYPE mc_rtin idf po IDFS . pf DECS assignment mc_endr

    pf  shift, and go to state 64


state 47

   40 IDFS: ENSIDF .
   42 ENSIDF: ENSIDF . verg idf

    verg  shift, and go to state 51

    $default  reduce using rule 40 (IDFS)


state 48

   20 DEC: TYPE idf mc_dim . po TAILLE pf pvg

    po  shift, and go to state 65


state 49

   19 DEC: TYPE idf mul . inti pvg

    inti  shift, and go to state 66


state 50

   18 DEC: TYPE ENSIDF pvg .

    $default  reduce using rule 18 (DEC)


state 51

   42 ENSIDF: ENSIDF verg . idf

    idf  shift, and go to state 67


state 52

   68 OGassi: idf po . TAILLE pf

    inti  shift, and go to state 68

    TAILLE  go to state 69


state 53

   72 read_statement: mc_read po . idf pf pvg

    idf  shift, and go to state 70


state 54

   73 write_statement: mc_write po . ENS_PARA_WRITE pf pvg

    idf  shift, and go to state 71
    str  shift, and go to state 72

    ENS_PARA_WRITE  go to state 73


state 55

   63 if_statement: mc_if po . CONDI pf mc_then ENSINST else_clause mc_endif

    idf      shift, and go to state 74
    inti     shift, and go to state 75
    real     shift, and go to state 76
    mc_call  shift, and go to state 77
    po       shift, and go to state 78

    EXPRE    go to state 79
    TERM     go to state 80
    FACTOR   go to state 81
    OPERAND  go to state 82
    CONDI    go to state 83
    CONDIT   go to state 84
    EXPLOGI  go to state 85


state 56

   78 dowhile_statement: mc_dowhile po . CONDI pf ENSINST mc_enddo

    idf      shift, and go to state 74
    inti     shift, and go to state 75
    real     shift, and go to state 76
    mc_call  shift, and go to state 77
    po       shift, and go to state 78

    EXPRE    go to state 79
    TERM     go to state 80
    FACTOR   go to state 81
    OPERAND  go to state 82
    CONDI    go to state 86
    CONDIT   go to state 84
    EXPLOGI  go to state 85


state 57

   58 ens_list_var: po . list_var pf

    idf  shift, and go to state 87

    $default  reduce using rule 62 (var)

    list_var  go to state 88
    var       go to state 89


state 58

   56 ens_list_vars: VIDE .

    $default  reduce using rule 56 (ens_list_vars)


state 59

   54 eqival_statement: mc_equival ens_list_vars . pvg

    pvg  shift, and go to state 90


state 60

   55 ens_list_vars: ens_list_var .
   57 ens_list_var: ens_list_var . verg po list_var pf

    verg  shift, and go to state 91

    $default  reduce using rule 55 (ens_list_vars)


state 61

    2 PRGM_PRIN: mc_prgrm idf DECS INSTS mc_end .

    $default  reduce using rule 2 (PRGM_PRIN)


state 62

   46 ENSINST: ENSINST INST .

    $default  reduce using rule 46 (ENSINST)


state 63

   66 assignment: OGassi aff . valeur pvg

    idf       shift, and go to state 74
    inti      shift, and go to state 75
    real      shift, and go to state 76
    mc_call   shift, and go to state 77
    mc_true   shift, and go to state 92
    mc_false  shift, and go to state 93
    str       shift, and go to state 94
    po        shift, and go to state 95

    EXPRE    go to state 96
    TERM     go to state 80
    FACTOR   go to state 81
    OPERAND  go to state 82
    LOGI     go to state 97
    valeur   go to state 98


state 64

    8 FCT: TYPE mc_rtin idf po IDFS pf . DECS ENSINST assignment mc_endr
    9    | TYPE mc_rtin idf po IDFS pf . DECS assignment mc_endr

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 5 (VIDE)

    VIDE    go to state 18
    TYPE    go to state 19
    DECS    go to state 99
    ENSDEC  go to state 21
    DEC     go to state 22


state 65

   20 DEC: TYPE idf mc_dim po . TAILLE pf pvg

    inti  shift, and go to state 68

    TAILLE  go to state 100


state 66

   19 DEC: TYPE idf mul inti . pvg

    pvg  shift, and go to state 101


state 67

   42 ENSIDF: ENSIDF verg idf .

    $default  reduce using rule 42 (ENSIDF)


state 68

   22 TAILLE: inti .

    $default  reduce using rule 22 (TAILLE)


state 69

   21 TAILLE: TAILLE . verg inti
   68 OGassi: idf po TAILLE . pf

    pf    shift, and go to state 102
    verg  shift, and go to state 103


state 70

   72 read_statement: mc_read po idf . pf pvg

    pf  shift, and go to state 104


state 71

   77 ENS_PARA_WRITE: idf .

    $default  reduce using rule 77 (ENS_PARA_WRITE)


state 72

   76 ENS_PARA_WRITE: str .

    $default  reduce using rule 76 (ENS_PARA_WRITE)


state 73

   73 write_statement: mc_write po ENS_PARA_WRITE . pf pvg
   74 ENS_PARA_WRITE: ENS_PARA_WRITE . verg str
   75               | ENS_PARA_WRITE . verg idf

    pf    shift, and go to state 105
    verg  shift, and go to state 106


state 74

   31 OPERAND: idf .
   34        | idf . po TAILLE pf

    po  shift, and go to state 107

    $default  reduce using rule 31 (OPERAND)


state 75

   32 OPERAND: inti .

    $default  reduce using rule 32 (OPERAND)


state 76

   33 OPERAND: real .

    $default  reduce using rule 33 (OPERAND)


state 77

   35 OPERAND: mc_call . idf po ENSpara pf

    idf  shift, and go to state 108


state 78

   29 FACTOR: po . EXPRE pf
   82 CONDIT: po . CONDI pf

    idf      shift, and go to state 74
    inti     shift, and go to state 75
    real     shift, and go to state 76
    mc_call  shift, and go to state 77
    po       shift, and go to state 78

    EXPRE    go to state 109
    TERM     go to state 80
    FACTOR   go to state 81
    OPERAND  go to state 82
    CONDI    go to state 110
    CONDIT   go to state 84
    EXPLOGI  go to state 85


state 79

   23 EXPRE: EXPRE . add TERM
   24      | EXPRE . sub TERM
   84 EXPLOGI: EXPRE . lt EXPRE
   85        | EXPRE . gt EXPRE
   86        | EXPRE . ge EXPRE
   87        | EXPRE . eq EXPRE
   88        | EXPRE . ne EXPRE
   89        | EXPRE . le EXPRE

    ge   shift, and go to state 111
    eq   shift, and go to state 112
    ne   shift, and go to state 113
    le   shift, and go to state 114
    add  shift, and go to state 115
    sub  shift, and go to state 116
    lt   shift, and go to state 117
    gt   shift, and go to state 118


state 80

   25 EXPRE: TERM .
   26 TERM: TERM . mul FACTOR
   27     | TERM . divi FACTOR

    mul   shift, and go to state 119
    divi  shift, and go to state 120

    $default  reduce using rule 25 (EXPRE)


state 81

   28 TERM: FACTOR .

    $default  reduce using rule 28 (TERM)


state 82

   30 FACTOR: OPERAND .

    $default  reduce using rule 30 (FACTOR)


state 83

   63 if_statement: mc_if po CONDI . pf mc_then ENSINST else_clause mc_endif
   79 CONDI: CONDI . mc_or CONDIT
   80      | CONDI . mc_and CONDIT

    mc_or   shift, and go to state 121
    mc_and  shift, and go to state 122
    pf      shift, and go to state 123


state 84

   81 CONDI: CONDIT .

    $default  reduce using rule 81 (CONDI)


state 85

   83 CONDIT: EXPLOGI .

    $default  reduce using rule 83 (CONDIT)


state 86

   78 dowhile_statement: mc_dowhile po CONDI . pf ENSINST mc_enddo
   79 CONDI: CONDI . mc_or CONDIT
   80      | CONDI . mc_and CONDIT

    mc_or   shift, and go to state 121
    mc_and  shift, and go to state 122
    pf      shift, and go to state 124


state 87

   61 var: idf .

    $default  reduce using rule 61 (var)


state 88

   58 ens_list_var: po list_var . pf
   59 list_var: list_var . verg var

    pf    shift, and go to state 125
    verg  shift, and go to state 126


state 89

   60 list_var: var .

    $default  reduce using rule 60 (list_var)


state 90

   54 eqival_statement: mc_equival ens_list_vars pvg .

    $default  reduce using rule 54 (eqival_statement)


state 91

   57 ens_list_var: ens_list_var verg . po list_var pf

    po  shift, and go to state 127


state 92

   38 LOGI: mc_true .

    $default  reduce using rule 38 (LOGI)


state 93

   39 LOGI: mc_false .

    $default  reduce using rule 39 (LOGI)


state 94

   70 valeur: str .

    $default  reduce using rule 70 (valeur)


state 95

   29 FACTOR: po . EXPRE pf

    idf      shift, and go to state 74
    inti     shift, and go to state 75
    real     shift, and go to state 76
    mc_call  shift, and go to state 77
    po       shift, and go to state 95

    EXPRE    go to state 128
    TERM     go to state 80
    FACTOR   go to state 81
    OPERAND  go to state 82


state 96

   23 EXPRE: EXPRE . add TERM
   24      | EXPRE . sub TERM
   71 valeur: EXPRE .

    add  shift, and go to state 115
    sub  shift, and go to state 116

    $default  reduce using rule 71 (valeur)


state 97

   69 valeur: LOGI .

    $default  reduce using rule 69 (valeur)


state 98

   66 assignment: OGassi aff valeur . pvg

    pvg  shift, and go to state 129


state 99

    8 FCT: TYPE mc_rtin idf po IDFS pf DECS . ENSINST assignment mc_endr
    9    | TYPE mc_rtin idf po IDFS pf DECS . assignment mc_endr

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    ENSINST            go to state 130
    INST               go to state 35
    eqival_statement   go to state 36
    if_statement       go to state 37
    assignment         go to state 131
    OGassi             go to state 39
    read_statement     go to state 40
    write_statement    go to state 41
    dowhile_statement  go to state 42


state 100

   20 DEC: TYPE idf mc_dim po TAILLE . pf pvg
   21 TAILLE: TAILLE . verg inti

    pf    shift, and go to state 132
    verg  shift, and go to state 103


state 101

   19 DEC: TYPE idf mul inti pvg .

    $default  reduce using rule 19 (DEC)


state 102

   68 OGassi: idf po TAILLE pf .

    $default  reduce using rule 68 (OGassi)


state 103

   21 TAILLE: TAILLE verg . inti

    inti  shift, and go to state 133


state 104

   72 read_statement: mc_read po idf pf . pvg

    pvg  shift, and go to state 134


state 105

   73 write_statement: mc_write po ENS_PARA_WRITE pf . pvg

    pvg  shift, and go to state 135


state 106

   74 ENS_PARA_WRITE: ENS_PARA_WRITE verg . str
   75               | ENS_PARA_WRITE verg . idf

    idf  shift, and go to state 136
    str  shift, and go to state 137


state 107

   34 OPERAND: idf po . TAILLE pf

    inti  shift, and go to state 68

    TAILLE  go to state 138


state 108

   35 OPERAND: mc_call idf . po ENSpara pf

    po  shift, and go to state 139


state 109

   23 EXPRE: EXPRE . add TERM
   24      | EXPRE . sub TERM
   29 FACTOR: po EXPRE . pf
   84 EXPLOGI: EXPRE . lt EXPRE
   85        | EXPRE . gt EXPRE
   86        | EXPRE . ge EXPRE
   87        | EXPRE . eq EXPRE
   88        | EXPRE . ne EXPRE
   89        | EXPRE . le EXPRE

    ge   shift, and go to state 111
    eq   shift, and go to state 112
    ne   shift, and go to state 113
    le   shift, and go to state 114
    add  shift, and go to state 115
    sub  shift, and go to state 116
    lt   shift, and go to state 117
    gt   shift, and go to state 118
    pf   shift, and go to state 140


state 110

   79 CONDI: CONDI . mc_or CONDIT
   80      | CONDI . mc_and CONDIT
   82 CONDIT: po CONDI . pf

    mc_or   shift, and go to state 121
    mc_and  shift, and go to state 122
    pf      shift, and go to state 141


state 111

   86 EXPLOGI: EXPRE ge . EXPRE

    idf      shift, and go to state 74
    inti     shift, and go to state 75
    real     shift, and go to state 76
    mc_call  shift, and go to state 77
    po       shift, and go to state 95

    EXPRE    go to state 142
    TERM     go to state 80
    FACTOR   go to state 81
    OPERAND  go to state 82


state 112

   87 EXPLOGI: EXPRE eq . EXPRE

    idf      shift, and go to state 74
    inti     shift, and go to state 75
    real     shift, and go to state 76
    mc_call  shift, and go to state 77
    po       shift, and go to state 95

    EXPRE    go to state 143
    TERM     go to state 80
    FACTOR   go to state 81
    OPERAND  go to state 82


state 113

   88 EXPLOGI: EXPRE ne . EXPRE

    idf      shift, and go to state 74
    inti     shift, and go to state 75
    real     shift, and go to state 76
    mc_call  shift, and go to state 77
    po       shift, and go to state 95

    EXPRE    go to state 144
    TERM     go to state 80
    FACTOR   go to state 81
    OPERAND  go to state 82


state 114

   89 EXPLOGI: EXPRE le . EXPRE

    idf      shift, and go to state 74
    inti     shift, and go to state 75
    real     shift, and go to state 76
    mc_call  shift, and go to state 77
    po       shift, and go to state 95

    EXPRE    go to state 145
    TERM     go to state 80
    FACTOR   go to state 81
    OPERAND  go to state 82


state 115

   23 EXPRE: EXPRE add . TERM

    idf      shift, and go to state 74
    inti     shift, and go to state 75
    real     shift, and go to state 76
    mc_call  shift, and go to state 77
    po       shift, and go to state 95

    TERM     go to state 146
    FACTOR   go to state 81
    OPERAND  go to state 82


state 116

   24 EXPRE: EXPRE sub . TERM

    idf      shift, and go to state 74
    inti     shift, and go to state 75
    real     shift, and go to state 76
    mc_call  shift, and go to state 77
    po       shift, and go to state 95

    TERM     go to state 147
    FACTOR   go to state 81
    OPERAND  go to state 82


state 117

   84 EXPLOGI: EXPRE lt . EXPRE

    idf      shift, and go to state 74
    inti     shift, and go to state 75
    real     shift, and go to state 76
    mc_call  shift, and go to state 77
    po       shift, and go to state 95

    EXPRE    go to state 148
    TERM     go to state 80
    FACTOR   go to state 81
    OPERAND  go to state 82


state 118

   85 EXPLOGI: EXPRE gt . EXPRE

    idf      shift, and go to state 74
    inti     shift, and go to state 75
    real     shift, and go to state 76
    mc_call  shift, and go to state 77
    po       shift, and go to state 95

    EXPRE    go to state 149
    TERM     go to state 80
    FACTOR   go to state 81
    OPERAND  go to state 82


state 119

   26 TERM: TERM mul . FACTOR

    idf      shift, and go to state 74
    inti     shift, and go to state 75
    real     shift, and go to state 76
    mc_call  shift, and go to state 77
    po       shift, and go to state 95

    FACTOR   go to state 150
    OPERAND  go to state 82


state 120

   27 TERM: TERM divi . FACTOR

    idf      shift, and go to state 74
    inti     shift, and go to state 75
    real     shift, and go to state 76
    mc_call  shift, and go to state 77
    po       shift, and go to state 95

    FACTOR   go to state 151
    OPERAND  go to state 82


state 121

   79 CONDI: CONDI mc_or . CONDIT

    idf      shift, and go to state 74
    inti     shift, and go to state 75
    real     shift, and go to state 76
    mc_call  shift, and go to state 77
    po       shift, and go to state 78

    EXPRE    go to state 79
    TERM     go to state 80
    FACTOR   go to state 81
    OPERAND  go to state 82
    CONDIT   go to state 152
    EXPLOGI  go to state 85


state 122

   80 CONDI: CONDI mc_and . CONDIT

    idf      shift, and go to state 74
    inti     shift, and go to state 75
    real     shift, and go to state 76
    mc_call  shift, and go to state 77
    po       shift, and go to state 78

    EXPRE    go to state 79
    TERM     go to state 80
    FACTOR   go to state 81
    OPERAND  go to state 82
    CONDIT   go to state 153
    EXPLOGI  go to state 85


state 123

   63 if_statement: mc_if po CONDI pf . mc_then ENSINST else_clause mc_endif

    mc_then  shift, and go to state 154


state 124

   78 dowhile_statement: mc_dowhile po CONDI pf . ENSINST mc_enddo

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    ENSINST            go to state 155
    INST               go to state 35
    eqival_statement   go to state 36
    if_statement       go to state 37
    assignment         go to state 38
    OGassi             go to state 39
    read_statement     go to state 40
    write_statement    go to state 41
    dowhile_statement  go to state 42


state 125

   58 ens_list_var: po list_var pf .

    $default  reduce using rule 58 (ens_list_var)


state 126

   59 list_var: list_var verg . var

    idf  shift, and go to state 87

    $default  reduce using rule 62 (var)

    var  go to state 156


state 127

   57 ens_list_var: ens_list_var verg po . list_var pf

    idf  shift, and go to state 87

    $default  reduce using rule 62 (var)

    list_var  go to state 157
    var       go to state 89


state 128

   23 EXPRE: EXPRE . add TERM
   24      | EXPRE . sub TERM
   29 FACTOR: po EXPRE . pf

    add  shift, and go to state 115
    sub  shift, and go to state 116
    pf   shift, and go to state 140


state 129

   66 assignment: OGassi aff valeur pvg .

    $default  reduce using rule 66 (assignment)


state 130

    8 FCT: TYPE mc_rtin idf po IDFS pf DECS ENSINST . assignment mc_endr
   46 ENSINST: ENSINST . INST

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    INST               go to state 62
    eqival_statement   go to state 36
    if_statement       go to state 37
    assignment         go to state 158
    OGassi             go to state 39
    read_statement     go to state 40
    write_statement    go to state 41
    dowhile_statement  go to state 42


state 131

    9 FCT: TYPE mc_rtin idf po IDFS pf DECS assignment . mc_endr
   52 INST: assignment .

    mc_endr  shift, and go to state 159

    $default  reduce using rule 52 (INST)


state 132

   20 DEC: TYPE idf mc_dim po TAILLE pf . pvg

    pvg  shift, and go to state 160


state 133

   21 TAILLE: TAILLE verg inti .

    $default  reduce using rule 21 (TAILLE)


state 134

   72 read_statement: mc_read po idf pf pvg .

    $default  reduce using rule 72 (read_statement)


state 135

   73 write_statement: mc_write po ENS_PARA_WRITE pf pvg .

    $default  reduce using rule 73 (write_statement)


state 136

   75 ENS_PARA_WRITE: ENS_PARA_WRITE verg idf .

    $default  reduce using rule 75 (ENS_PARA_WRITE)


state 137

   74 ENS_PARA_WRITE: ENS_PARA_WRITE verg str .

    $default  reduce using rule 74 (ENS_PARA_WRITE)


state 138

   21 TAILLE: TAILLE . verg inti
   34 OPERAND: idf po TAILLE . pf

    pf    shift, and go to state 161
    verg  shift, and go to state 103


state 139

   35 OPERAND: mc_call idf po . ENSpara pf

    idf       shift, and go to state 74
    inti      shift, and go to state 75
    real      shift, and go to state 76
    mc_call   shift, and go to state 77
    mc_true   shift, and go to state 92
    mc_false  shift, and go to state 93
    str       shift, and go to state 94
    po        shift, and go to state 95

    EXPRE    go to state 96
    TERM     go to state 80
    FACTOR   go to state 81
    OPERAND  go to state 82
    ENSpara  go to state 162
    LOGI     go to state 97
    valeur   go to state 163


state 140

   29 FACTOR: po EXPRE pf .

    $default  reduce using rule 29 (FACTOR)


state 141

   82 CONDIT: po CONDI pf .

    $default  reduce using rule 82 (CONDIT)


state 142

   23 EXPRE: EXPRE . add TERM
   24      | EXPRE . sub TERM
   86 EXPLOGI: EXPRE ge EXPRE .

    add  shift, and go to state 115
    sub  shift, and go to state 116

    $default  reduce using rule 86 (EXPLOGI)


state 143

   23 EXPRE: EXPRE . add TERM
   24      | EXPRE . sub TERM
   87 EXPLOGI: EXPRE eq EXPRE .

    add  shift, and go to state 115
    sub  shift, and go to state 116

    $default  reduce using rule 87 (EXPLOGI)


state 144

   23 EXPRE: EXPRE . add TERM
   24      | EXPRE . sub TERM
   88 EXPLOGI: EXPRE ne EXPRE .

    add  shift, and go to state 115
    sub  shift, and go to state 116

    $default  reduce using rule 88 (EXPLOGI)


state 145

   23 EXPRE: EXPRE . add TERM
   24      | EXPRE . sub TERM
   89 EXPLOGI: EXPRE le EXPRE .

    add  shift, and go to state 115
    sub  shift, and go to state 116

    $default  reduce using rule 89 (EXPLOGI)


state 146

   23 EXPRE: EXPRE add TERM .
   26 TERM: TERM . mul FACTOR
   27     | TERM . divi FACTOR

    mul   shift, and go to state 119
    divi  shift, and go to state 120

    $default  reduce using rule 23 (EXPRE)


state 147

   24 EXPRE: EXPRE sub TERM .
   26 TERM: TERM . mul FACTOR
   27     | TERM . divi FACTOR

    mul   shift, and go to state 119
    divi  shift, and go to state 120

    $default  reduce using rule 24 (EXPRE)


state 148

   23 EXPRE: EXPRE . add TERM
   24      | EXPRE . sub TERM
   84 EXPLOGI: EXPRE lt EXPRE .

    add  shift, and go to state 115
    sub  shift, and go to state 116

    $default  reduce using rule 84 (EXPLOGI)


state 149

   23 EXPRE: EXPRE . add TERM
   24      | EXPRE . sub TERM
   85 EXPLOGI: EXPRE gt EXPRE .

    add  shift, and go to state 115
    sub  shift, and go to state 116

    $default  reduce using rule 85 (EXPLOGI)


state 150

   26 TERM: TERM mul FACTOR .

    $default  reduce using rule 26 (TERM)


state 151

   27 TERM: TERM divi FACTOR .

    $default  reduce using rule 27 (TERM)


state 152

   79 CONDI: CONDI mc_or CONDIT .

    $default  reduce using rule 79 (CONDI)


state 153

   80 CONDI: CONDI mc_and CONDIT .

    $default  reduce using rule 80 (CONDI)


state 154

   63 if_statement: mc_if po CONDI pf mc_then . ENSINST else_clause mc_endif

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    ENSINST            go to state 164
    INST               go to state 35
    eqival_statement   go to state 36
    if_statement       go to state 37
    assignment         go to state 38
    OGassi             go to state 39
    read_statement     go to state 40
    write_statement    go to state 41
    dowhile_statement  go to state 42


state 155

   46 ENSINST: ENSINST . INST
   78 dowhile_statement: mc_dowhile po CONDI pf ENSINST . mc_enddo

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_enddo    shift, and go to state 165
    mc_equival  shift, and go to state 31

    INST               go to state 62
    eqival_statement   go to state 36
    if_statement       go to state 37
    assignment         go to state 38
    OGassi             go to state 39
    read_statement     go to state 40
    write_statement    go to state 41
    dowhile_statement  go to state 42


state 156

   59 list_var: list_var verg var .

    $default  reduce using rule 59 (list_var)


state 157

   57 ens_list_var: ens_list_var verg po list_var . pf
   59 list_var: list_var . verg var

    pf    shift, and go to state 166
    verg  shift, and go to state 126


state 158

    8 FCT: TYPE mc_rtin idf po IDFS pf DECS ENSINST assignment . mc_endr
   52 INST: assignment .

    mc_endr  shift, and go to state 167

    $default  reduce using rule 52 (INST)


state 159

    9 FCT: TYPE mc_rtin idf po IDFS pf DECS assignment mc_endr .

    $default  reduce using rule 9 (FCT)


state 160

   20 DEC: TYPE idf mc_dim po TAILLE pf pvg .

    $default  reduce using rule 20 (DEC)


state 161

   34 OPERAND: idf po TAILLE pf .

    $default  reduce using rule 34 (OPERAND)


state 162

   35 OPERAND: mc_call idf po ENSpara . pf
   36 ENSpara: ENSpara . verg valeur

    pf    shift, and go to state 168
    verg  shift, and go to state 169


state 163

   37 ENSpara: valeur .

    $default  reduce using rule 37 (ENSpara)


state 164

   46 ENSINST: ENSINST . INST
   63 if_statement: mc_if po CONDI pf mc_then ENSINST . else_clause mc_endif

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_else     shift, and go to state 170
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    $default  reduce using rule 65 (else_clause)

    INST               go to state 62
    eqival_statement   go to state 36
    if_statement       go to state 37
    else_clause        go to state 171
    assignment         go to state 38
    OGassi             go to state 39
    read_statement     go to state 40
    write_statement    go to state 41
    dowhile_statement  go to state 42


state 165

   78 dowhile_statement: mc_dowhile po CONDI pf ENSINST mc_enddo .

    $default  reduce using rule 78 (dowhile_statement)


state 166

   57 ens_list_var: ens_list_var verg po list_var pf .

    $default  reduce using rule 57 (ens_list_var)


state 167

    8 FCT: TYPE mc_rtin idf po IDFS pf DECS ENSINST assignment mc_endr .

    $default  reduce using rule 8 (FCT)


state 168

   35 OPERAND: mc_call idf po ENSpara pf .

    $default  reduce using rule 35 (OPERAND)


state 169

   36 ENSpara: ENSpara verg . valeur

    idf       shift, and go to state 74
    inti      shift, and go to state 75
    real      shift, and go to state 76
    mc_call   shift, and go to state 77
    mc_true   shift, and go to state 92
    mc_false  shift, and go to state 93
    str       shift, and go to state 94
    po        shift, and go to state 95

    EXPRE    go to state 96
    TERM     go to state 80
    FACTOR   go to state 81
    OPERAND  go to state 82
    LOGI     go to state 97
    valeur   go to state 172


state 170

   64 else_clause: mc_else . ENSINST

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    ENSINST            go to state 173
    INST               go to state 35
    eqival_statement   go to state 36
    if_statement       go to state 37
    assignment         go to state 38
    OGassi             go to state 39
    read_statement     go to state 40
    write_statement    go to state 41
    dowhile_statement  go to state 42


state 171

   63 if_statement: mc_if po CONDI pf mc_then ENSINST else_clause . mc_endif

    mc_endif  shift, and go to state 174


state 172

   36 ENSpara: ENSpara verg valeur .

    $default  reduce using rule 36 (ENSpara)


state 173

   46 ENSINST: ENSINST . INST
   64 else_clause: mc_else ENSINST .

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    $default  reduce using rule 64 (else_clause)

    INST               go to state 62
    eqival_statement   go to state 36
    if_statement       go to state 37
    assignment         go to state 38
    OGassi             go to state 39
    read_statement     go to state 40
    write_statement    go to state 41
    dowhile_statement  go to state 42


state 174

   63 if_statement: mc_if po CONDI pf mc_then ENSINST else_clause mc_endif .

    $default  reduce using rule 63 (if_statement)
