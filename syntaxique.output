Terminals unused in grammar

   err


Grammar

    0 $accept: s $end

    1 s: FCTS PRGM_PRIN

    2 PRGM_PRIN: mc_prgrm idf DECS INSTS mc_end

    3 FCTS: VIDE
    4     | ENSFCT

    5 VIDE: /* empty */

    6 ENSFCT: ENSFCT FCT
    7       | FCT

    8 FCT: TYPE mc_rtin idf po IDFS pf DECS ENSINST assignment mc_endr
    9    | TYPE mc_rtin idf po IDFS pf DECS assignment mc_endr

   10 TYPE: mc_int
   11     | mc_real
   12     | mc_char
   13     | mc_logi

   14 DECS: VIDE
   15     | ENSDEC

   16 ENSDEC: ENSDEC DEC
   17       | DEC

   18 DEC: TYPE ENSIDF_dec pvg
   19    | TYPE idf mul inti pvg
   20    | TYPE idf mc_dim po TAILLE pf pvg

   21 partie_gauch_affectation: aff valeur
   22                         | VIDE

   23 ENSIDF_dec: ENSIDF_dec verg idf partie_gauch_affectation
   24           | idf partie_gauch_affectation

   25 TAILLE: TAILLE verg inti
   26       | inti

   27 EXPRE: EXPRE add TERM
   28      | EXPRE sub TERM
   29      | TERM

   30 TERM: TERM mul FACTOR
   31     | TERM divi FACTOR
   32     | FACTOR

   33 FACTOR: po EXPRE pf
   34       | OPERAND

   35 OPERAND: idf
   36        | inti
   37        | real
   38        | idf po TAILLE pf
   39        | mc_call idf po ENSpara pf

   40 ENSpara: ENSpara verg valeur
   41        | valeur

   42 LOGI: mc_true
   43     | mc_false

   44 IDFS: ENSIDF
   45     | VIDE

   46 ENSIDF: ENSIDF verg idf
   47       | idf

   48 INSTS: VIDE
   49      | ENSINST

   50 ENSINST: ENSINST INST
   51        | INST

   52 INST: if_statement
   53     | read_statement
   54     | write_statement
   55     | dowhile_statement
   56     | assignment
   57     | eqival_statement

   58 eqival_statement: mc_equival ens_list_vars pvg

   59 ens_list_vars: ens_list_var
   60              | VIDE

   61 ens_list_var: ens_list_var verg po list_var pf
   62             | po list_var pf

   63 list_var: list_var verg var
   64         | var

   65 var: idf
   66    | idf po ENSpara pf

   67 if_statement: mc_if po CONDI pf mc_then ENSINST else_clause mc_endif

   68 else_clause: mc_else ENSINST
   69            | /* empty */

   70 assignment: OGassi aff valeur pvg

   71 OGassi: idf
   72       | idf po ENSpara pf

   73 valeur: LOGI
   74       | str
   75       | EXPRE

   76 read_statement: mc_read po var pf pvg

   77 write_statement: mc_write po ENS_PARA_WRITE pf pvg

   78 ENS_PARA_WRITE: ENS_PARA_WRITE verg str
   79               | ENS_PARA_WRITE verg var
   80               | str
   81               | var

   82 dowhile_statement: mc_dowhile po CONDI pf ENSINST mc_enddo

   83 CONDI: CONDI mc_or CONDIT
   84      | CONDI mc_and CONDIT
   85      | CONDIT

   86 CONDIT: po CONDI pf
   87       | EXPLOGI

   88 EXPLOGI: EXPRE lt EXPRE
   89        | EXPRE gt EXPRE
   90        | EXPRE ge EXPRE
   91        | EXPRE eq EXPRE
   92        | EXPRE ne EXPRE
   93        | EXPRE le EXPRE
   94        | LOGI


Terminals, with rules where they appear

$end (0) 0
error (256)
idf (258) 2 8 9 19 20 23 24 35 38 39 46 47 65 66 71 72
aff (259) 21 70
mc_prgrm (260) 2
mc_rtin (261) 8 9
inti (262) 19 25 26 36
real (263) 37
mc_endr (264) 8 9
mc_call (265) 39
mc_dim (266) 20
mc_logi (267) 13
mc_char (268) 12
mc_true (269) 42
mc_false (270) 43
mc_read (271) 76
mc_write (272) 77
pvg (273) 18 19 20 58 70 76 77
str (274) 74 78 80
mc_int (275) 10
mc_real (276) 11
mc_end (277) 2
mc_if (278) 67
mc_then (279) 67
mc_else (280) 68
mc_dowhile (281) 82
mc_enddo (282) 82
mc_equival (283) 58
mc_or (284) 83
ge (285) 90
eq (286) 91
ne (287) 92
le (288) 93
add (289) 27
sub (290) 28
mul (291) 19 30
divi (292) 31
mc_and (293) 84
mc_endif (294) 67
lt (295) 88
gt (296) 89
po (297) 8 9 20 33 38 39 61 62 66 67 72 76 77 82 86
pf (298) 8 9 20 33 38 39 61 62 66 67 72 76 77 82 86
verg (299) 23 25 40 46 61 63 78 79
err (300)


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
s (47)
    on left: 1, on right: 0
PRGM_PRIN (48)
    on left: 2, on right: 1
FCTS (49)
    on left: 3 4, on right: 1
VIDE (50)
    on left: 5, on right: 3 14 22 45 48 60
ENSFCT (51)
    on left: 6 7, on right: 4 6
FCT (52)
    on left: 8 9, on right: 6 7
TYPE (53)
    on left: 10 11 12 13, on right: 8 9 18 19 20
DECS (54)
    on left: 14 15, on right: 2 8 9
ENSDEC (55)
    on left: 16 17, on right: 15 16
DEC (56)
    on left: 18 19 20, on right: 16 17
partie_gauch_affectation (57)
    on left: 21 22, on right: 23 24
ENSIDF_dec (58)
    on left: 23 24, on right: 18 23
TAILLE (59)
    on left: 25 26, on right: 20 25 38
EXPRE (60)
    on left: 27 28 29, on right: 27 28 33 75 88 89 90 91 92 93
TERM (61)
    on left: 30 31 32, on right: 27 28 29 30 31
FACTOR (62)
    on left: 33 34, on right: 30 31 32
OPERAND (63)
    on left: 35 36 37 38 39, on right: 34
ENSpara (64)
    on left: 40 41, on right: 39 40 66 72
LOGI (65)
    on left: 42 43, on right: 73 94
IDFS (66)
    on left: 44 45, on right: 8 9
ENSIDF (67)
    on left: 46 47, on right: 44 46
INSTS (68)
    on left: 48 49, on right: 2
ENSINST (69)
    on left: 50 51, on right: 8 49 50 67 68 82
INST (70)
    on left: 52 53 54 55 56 57, on right: 50 51
eqival_statement (71)
    on left: 58, on right: 57
ens_list_vars (72)
    on left: 59 60, on right: 58
ens_list_var (73)
    on left: 61 62, on right: 59 61
list_var (74)
    on left: 63 64, on right: 61 62 63
var (75)
    on left: 65 66, on right: 63 64 76 79 81
if_statement (76)
    on left: 67, on right: 52
else_clause (77)
    on left: 68 69, on right: 67
assignment (78)
    on left: 70, on right: 8 9 56
OGassi (79)
    on left: 71 72, on right: 70
valeur (80)
    on left: 73 74 75, on right: 21 40 41 70
read_statement (81)
    on left: 76, on right: 53
write_statement (82)
    on left: 77, on right: 54
ENS_PARA_WRITE (83)
    on left: 78 79 80 81, on right: 77 78 79
dowhile_statement (84)
    on left: 82, on right: 55
CONDI (85)
    on left: 83 84 85, on right: 67 82 83 84 86
CONDIT (86)
    on left: 86 87, on right: 83 84 85
EXPLOGI (87)
    on left: 88 89 90 91 92 93 94, on right: 87


state 0

    0 $accept: . s $end

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 5 (VIDE)

    s       go to state 5
    FCTS    go to state 6
    VIDE    go to state 7
    ENSFCT  go to state 8
    FCT     go to state 9
    TYPE    go to state 10


state 1

   13 TYPE: mc_logi .

    $default  reduce using rule 13 (TYPE)


state 2

   12 TYPE: mc_char .

    $default  reduce using rule 12 (TYPE)


state 3

   10 TYPE: mc_int .

    $default  reduce using rule 10 (TYPE)


state 4

   11 TYPE: mc_real .

    $default  reduce using rule 11 (TYPE)


state 5

    0 $accept: s . $end

    $end  shift, and go to state 11


state 6

    1 s: FCTS . PRGM_PRIN

    mc_prgrm  shift, and go to state 12

    PRGM_PRIN  go to state 13


state 7

    3 FCTS: VIDE .

    $default  reduce using rule 3 (FCTS)


state 8

    4 FCTS: ENSFCT .
    6 ENSFCT: ENSFCT . FCT

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 4 (FCTS)

    FCT   go to state 14
    TYPE  go to state 10


state 9

    7 ENSFCT: FCT .

    $default  reduce using rule 7 (ENSFCT)


state 10

    8 FCT: TYPE . mc_rtin idf po IDFS pf DECS ENSINST assignment mc_endr
    9    | TYPE . mc_rtin idf po IDFS pf DECS assignment mc_endr

    mc_rtin  shift, and go to state 15


state 11

    0 $accept: s $end .

    $default  accept


state 12

    2 PRGM_PRIN: mc_prgrm . idf DECS INSTS mc_end

    idf  shift, and go to state 16


state 13

    1 s: FCTS PRGM_PRIN .

    $default  reduce using rule 1 (s)


state 14

    6 ENSFCT: ENSFCT FCT .

    $default  reduce using rule 6 (ENSFCT)


state 15

    8 FCT: TYPE mc_rtin . idf po IDFS pf DECS ENSINST assignment mc_endr
    9    | TYPE mc_rtin . idf po IDFS pf DECS assignment mc_endr

    idf  shift, and go to state 17


state 16

    2 PRGM_PRIN: mc_prgrm idf . DECS INSTS mc_end

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 5 (VIDE)

    VIDE    go to state 18
    TYPE    go to state 19
    DECS    go to state 20
    ENSDEC  go to state 21
    DEC     go to state 22


state 17

    8 FCT: TYPE mc_rtin idf . po IDFS pf DECS ENSINST assignment mc_endr
    9    | TYPE mc_rtin idf . po IDFS pf DECS assignment mc_endr

    po  shift, and go to state 23


state 18

   14 DECS: VIDE .

    $default  reduce using rule 14 (DECS)


state 19

   18 DEC: TYPE . ENSIDF_dec pvg
   19    | TYPE . idf mul inti pvg
   20    | TYPE . idf mc_dim po TAILLE pf pvg

    idf  shift, and go to state 24

    ENSIDF_dec  go to state 25


state 20

    2 PRGM_PRIN: mc_prgrm idf DECS . INSTS mc_end

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    $default  reduce using rule 5 (VIDE)

    VIDE               go to state 32
    INSTS              go to state 33
    ENSINST            go to state 34
    INST               go to state 35
    eqival_statement   go to state 36
    if_statement       go to state 37
    assignment         go to state 38
    OGassi             go to state 39
    read_statement     go to state 40
    write_statement    go to state 41
    dowhile_statement  go to state 42


state 21

   15 DECS: ENSDEC .
   16 ENSDEC: ENSDEC . DEC

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 15 (DECS)

    TYPE  go to state 19
    DEC   go to state 43


state 22

   17 ENSDEC: DEC .

    $default  reduce using rule 17 (ENSDEC)


state 23

    8 FCT: TYPE mc_rtin idf po . IDFS pf DECS ENSINST assignment mc_endr
    9    | TYPE mc_rtin idf po . IDFS pf DECS assignment mc_endr

    idf  shift, and go to state 44

    $default  reduce using rule 5 (VIDE)

    VIDE    go to state 45
    IDFS    go to state 46
    ENSIDF  go to state 47


state 24

   19 DEC: TYPE idf . mul inti pvg
   20    | TYPE idf . mc_dim po TAILLE pf pvg
   24 ENSIDF_dec: idf . partie_gauch_affectation

    aff     shift, and go to state 48
    mc_dim  shift, and go to state 49
    mul     shift, and go to state 50

    $default  reduce using rule 5 (VIDE)

    VIDE                      go to state 51
    partie_gauch_affectation  go to state 52


state 25

   18 DEC: TYPE ENSIDF_dec . pvg
   23 ENSIDF_dec: ENSIDF_dec . verg idf partie_gauch_affectation

    pvg   shift, and go to state 53
    verg  shift, and go to state 54


state 26

   71 OGassi: idf .
   72       | idf . po ENSpara pf

    po  shift, and go to state 55

    $default  reduce using rule 71 (OGassi)


state 27

   76 read_statement: mc_read . po var pf pvg

    po  shift, and go to state 56


state 28

   77 write_statement: mc_write . po ENS_PARA_WRITE pf pvg

    po  shift, and go to state 57


state 29

   67 if_statement: mc_if . po CONDI pf mc_then ENSINST else_clause mc_endif

    po  shift, and go to state 58


state 30

   82 dowhile_statement: mc_dowhile . po CONDI pf ENSINST mc_enddo

    po  shift, and go to state 59


state 31

   58 eqival_statement: mc_equival . ens_list_vars pvg

    po  shift, and go to state 60

    $default  reduce using rule 5 (VIDE)

    VIDE           go to state 61
    ens_list_vars  go to state 62
    ens_list_var   go to state 63


state 32

   48 INSTS: VIDE .

    $default  reduce using rule 48 (INSTS)


state 33

    2 PRGM_PRIN: mc_prgrm idf DECS INSTS . mc_end

    mc_end  shift, and go to state 64


state 34

   49 INSTS: ENSINST .
   50 ENSINST: ENSINST . INST

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    $default  reduce using rule 49 (INSTS)

    INST               go to state 65
    eqival_statement   go to state 36
    if_statement       go to state 37
    assignment         go to state 38
    OGassi             go to state 39
    read_statement     go to state 40
    write_statement    go to state 41
    dowhile_statement  go to state 42


state 35

   51 ENSINST: INST .

    $default  reduce using rule 51 (ENSINST)


state 36

   57 INST: eqival_statement .

    $default  reduce using rule 57 (INST)


state 37

   52 INST: if_statement .

    $default  reduce using rule 52 (INST)


state 38

   56 INST: assignment .

    $default  reduce using rule 56 (INST)


state 39

   70 assignment: OGassi . aff valeur pvg

    aff  shift, and go to state 66


state 40

   53 INST: read_statement .

    $default  reduce using rule 53 (INST)


state 41

   54 INST: write_statement .

    $default  reduce using rule 54 (INST)


state 42

   55 INST: dowhile_statement .

    $default  reduce using rule 55 (INST)


state 43

   16 ENSDEC: ENSDEC DEC .

    $default  reduce using rule 16 (ENSDEC)


state 44

   47 ENSIDF: idf .

    $default  reduce using rule 47 (ENSIDF)


state 45

   45 IDFS: VIDE .

    $default  reduce using rule 45 (IDFS)


state 46

    8 FCT: TYPE mc_rtin idf po IDFS . pf DECS ENSINST assignment mc_endr
    9    | TYPE mc_rtin idf po IDFS . pf DECS assignment mc_endr

    pf  shift, and go to state 67


state 47

   44 IDFS: ENSIDF .
   46 ENSIDF: ENSIDF . verg idf

    verg  shift, and go to state 68

    $default  reduce using rule 44 (IDFS)


state 48

   21 partie_gauch_affectation: aff . valeur

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    str       shift, and go to state 75
    po        shift, and go to state 76

    EXPRE    go to state 77
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    LOGI     go to state 81
    valeur   go to state 82


state 49

   20 DEC: TYPE idf mc_dim . po TAILLE pf pvg

    po  shift, and go to state 83


state 50

   19 DEC: TYPE idf mul . inti pvg

    inti  shift, and go to state 84


state 51

   22 partie_gauch_affectation: VIDE .

    $default  reduce using rule 22 (partie_gauch_affectation)


state 52

   24 ENSIDF_dec: idf partie_gauch_affectation .

    $default  reduce using rule 24 (ENSIDF_dec)


state 53

   18 DEC: TYPE ENSIDF_dec pvg .

    $default  reduce using rule 18 (DEC)


state 54

   23 ENSIDF_dec: ENSIDF_dec verg . idf partie_gauch_affectation

    idf  shift, and go to state 85


state 55

   72 OGassi: idf po . ENSpara pf

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    str       shift, and go to state 75
    po        shift, and go to state 76

    EXPRE    go to state 77
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    ENSpara  go to state 86
    LOGI     go to state 81
    valeur   go to state 87


state 56

   76 read_statement: mc_read po . var pf pvg

    idf  shift, and go to state 88

    var  go to state 89


state 57

   77 write_statement: mc_write po . ENS_PARA_WRITE pf pvg

    idf  shift, and go to state 88
    str  shift, and go to state 90

    var             go to state 91
    ENS_PARA_WRITE  go to state 92


state 58

   67 if_statement: mc_if po . CONDI pf mc_then ENSINST else_clause mc_endif

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    po        shift, and go to state 93

    EXPRE    go to state 94
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    LOGI     go to state 95
    CONDI    go to state 96
    CONDIT   go to state 97
    EXPLOGI  go to state 98


state 59

   82 dowhile_statement: mc_dowhile po . CONDI pf ENSINST mc_enddo

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    po        shift, and go to state 93

    EXPRE    go to state 94
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    LOGI     go to state 95
    CONDI    go to state 99
    CONDIT   go to state 97
    EXPLOGI  go to state 98


state 60

   62 ens_list_var: po . list_var pf

    idf  shift, and go to state 88

    list_var  go to state 100
    var       go to state 101


state 61

   60 ens_list_vars: VIDE .

    $default  reduce using rule 60 (ens_list_vars)


state 62

   58 eqival_statement: mc_equival ens_list_vars . pvg

    pvg  shift, and go to state 102


state 63

   59 ens_list_vars: ens_list_var .
   61 ens_list_var: ens_list_var . verg po list_var pf

    verg  shift, and go to state 103

    $default  reduce using rule 59 (ens_list_vars)


state 64

    2 PRGM_PRIN: mc_prgrm idf DECS INSTS mc_end .

    $default  reduce using rule 2 (PRGM_PRIN)


state 65

   50 ENSINST: ENSINST INST .

    $default  reduce using rule 50 (ENSINST)


state 66

   70 assignment: OGassi aff . valeur pvg

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    str       shift, and go to state 75
    po        shift, and go to state 76

    EXPRE    go to state 77
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    LOGI     go to state 81
    valeur   go to state 104


state 67

    8 FCT: TYPE mc_rtin idf po IDFS pf . DECS ENSINST assignment mc_endr
    9    | TYPE mc_rtin idf po IDFS pf . DECS assignment mc_endr

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 5 (VIDE)

    VIDE    go to state 18
    TYPE    go to state 19
    DECS    go to state 105
    ENSDEC  go to state 21
    DEC     go to state 22


state 68

   46 ENSIDF: ENSIDF verg . idf

    idf  shift, and go to state 106


state 69

   35 OPERAND: idf .
   38        | idf . po TAILLE pf

    po  shift, and go to state 107

    $default  reduce using rule 35 (OPERAND)


state 70

   36 OPERAND: inti .

    $default  reduce using rule 36 (OPERAND)


state 71

   37 OPERAND: real .

    $default  reduce using rule 37 (OPERAND)


state 72

   39 OPERAND: mc_call . idf po ENSpara pf

    idf  shift, and go to state 108


state 73

   42 LOGI: mc_true .

    $default  reduce using rule 42 (LOGI)


state 74

   43 LOGI: mc_false .

    $default  reduce using rule 43 (LOGI)


state 75

   74 valeur: str .

    $default  reduce using rule 74 (valeur)


state 76

   33 FACTOR: po . EXPRE pf

    idf      shift, and go to state 69
    inti     shift, and go to state 70
    real     shift, and go to state 71
    mc_call  shift, and go to state 72
    po       shift, and go to state 76

    EXPRE    go to state 109
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80


state 77

   27 EXPRE: EXPRE . add TERM
   28      | EXPRE . sub TERM
   75 valeur: EXPRE .

    add  shift, and go to state 110
    sub  shift, and go to state 111

    $default  reduce using rule 75 (valeur)


state 78

   29 EXPRE: TERM .
   30 TERM: TERM . mul FACTOR
   31     | TERM . divi FACTOR

    mul   shift, and go to state 112
    divi  shift, and go to state 113

    $default  reduce using rule 29 (EXPRE)


state 79

   32 TERM: FACTOR .

    $default  reduce using rule 32 (TERM)


state 80

   34 FACTOR: OPERAND .

    $default  reduce using rule 34 (FACTOR)


state 81

   73 valeur: LOGI .

    $default  reduce using rule 73 (valeur)


state 82

   21 partie_gauch_affectation: aff valeur .

    $default  reduce using rule 21 (partie_gauch_affectation)


state 83

   20 DEC: TYPE idf mc_dim po . TAILLE pf pvg

    inti  shift, and go to state 114

    TAILLE  go to state 115


state 84

   19 DEC: TYPE idf mul inti . pvg

    pvg  shift, and go to state 116


state 85

   23 ENSIDF_dec: ENSIDF_dec verg idf . partie_gauch_affectation

    aff  shift, and go to state 48

    $default  reduce using rule 5 (VIDE)

    VIDE                      go to state 51
    partie_gauch_affectation  go to state 117


state 86

   40 ENSpara: ENSpara . verg valeur
   72 OGassi: idf po ENSpara . pf

    pf    shift, and go to state 118
    verg  shift, and go to state 119


state 87

   41 ENSpara: valeur .

    $default  reduce using rule 41 (ENSpara)


state 88

   65 var: idf .
   66    | idf . po ENSpara pf

    po  shift, and go to state 120

    $default  reduce using rule 65 (var)


state 89

   76 read_statement: mc_read po var . pf pvg

    pf  shift, and go to state 121


state 90

   80 ENS_PARA_WRITE: str .

    $default  reduce using rule 80 (ENS_PARA_WRITE)


state 91

   81 ENS_PARA_WRITE: var .

    $default  reduce using rule 81 (ENS_PARA_WRITE)


state 92

   77 write_statement: mc_write po ENS_PARA_WRITE . pf pvg
   78 ENS_PARA_WRITE: ENS_PARA_WRITE . verg str
   79               | ENS_PARA_WRITE . verg var

    pf    shift, and go to state 122
    verg  shift, and go to state 123


state 93

   33 FACTOR: po . EXPRE pf
   86 CONDIT: po . CONDI pf

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    po        shift, and go to state 93

    EXPRE    go to state 124
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    LOGI     go to state 95
    CONDI    go to state 125
    CONDIT   go to state 97
    EXPLOGI  go to state 98


state 94

   27 EXPRE: EXPRE . add TERM
   28      | EXPRE . sub TERM
   88 EXPLOGI: EXPRE . lt EXPRE
   89        | EXPRE . gt EXPRE
   90        | EXPRE . ge EXPRE
   91        | EXPRE . eq EXPRE
   92        | EXPRE . ne EXPRE
   93        | EXPRE . le EXPRE

    ge   shift, and go to state 126
    eq   shift, and go to state 127
    ne   shift, and go to state 128
    le   shift, and go to state 129
    add  shift, and go to state 110
    sub  shift, and go to state 111
    lt   shift, and go to state 130
    gt   shift, and go to state 131


state 95

   94 EXPLOGI: LOGI .

    $default  reduce using rule 94 (EXPLOGI)


state 96

   67 if_statement: mc_if po CONDI . pf mc_then ENSINST else_clause mc_endif
   83 CONDI: CONDI . mc_or CONDIT
   84      | CONDI . mc_and CONDIT

    mc_or   shift, and go to state 132
    mc_and  shift, and go to state 133
    pf      shift, and go to state 134


state 97

   85 CONDI: CONDIT .

    $default  reduce using rule 85 (CONDI)


state 98

   87 CONDIT: EXPLOGI .

    $default  reduce using rule 87 (CONDIT)


state 99

   82 dowhile_statement: mc_dowhile po CONDI . pf ENSINST mc_enddo
   83 CONDI: CONDI . mc_or CONDIT
   84      | CONDI . mc_and CONDIT

    mc_or   shift, and go to state 132
    mc_and  shift, and go to state 133
    pf      shift, and go to state 135


state 100

   62 ens_list_var: po list_var . pf
   63 list_var: list_var . verg var

    pf    shift, and go to state 136
    verg  shift, and go to state 137


state 101

   64 list_var: var .

    $default  reduce using rule 64 (list_var)


state 102

   58 eqival_statement: mc_equival ens_list_vars pvg .

    $default  reduce using rule 58 (eqival_statement)


state 103

   61 ens_list_var: ens_list_var verg . po list_var pf

    po  shift, and go to state 138


state 104

   70 assignment: OGassi aff valeur . pvg

    pvg  shift, and go to state 139


state 105

    8 FCT: TYPE mc_rtin idf po IDFS pf DECS . ENSINST assignment mc_endr
    9    | TYPE mc_rtin idf po IDFS pf DECS . assignment mc_endr

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    ENSINST            go to state 140
    INST               go to state 35
    eqival_statement   go to state 36
    if_statement       go to state 37
    assignment         go to state 141
    OGassi             go to state 39
    read_statement     go to state 40
    write_statement    go to state 41
    dowhile_statement  go to state 42


state 106

   46 ENSIDF: ENSIDF verg idf .

    $default  reduce using rule 46 (ENSIDF)


state 107

   38 OPERAND: idf po . TAILLE pf

    inti  shift, and go to state 114

    TAILLE  go to state 142


state 108

   39 OPERAND: mc_call idf . po ENSpara pf

    po  shift, and go to state 143


state 109

   27 EXPRE: EXPRE . add TERM
   28      | EXPRE . sub TERM
   33 FACTOR: po EXPRE . pf

    add  shift, and go to state 110
    sub  shift, and go to state 111
    pf   shift, and go to state 144


state 110

   27 EXPRE: EXPRE add . TERM

    idf      shift, and go to state 69
    inti     shift, and go to state 70
    real     shift, and go to state 71
    mc_call  shift, and go to state 72
    po       shift, and go to state 76

    TERM     go to state 145
    FACTOR   go to state 79
    OPERAND  go to state 80


state 111

   28 EXPRE: EXPRE sub . TERM

    idf      shift, and go to state 69
    inti     shift, and go to state 70
    real     shift, and go to state 71
    mc_call  shift, and go to state 72
    po       shift, and go to state 76

    TERM     go to state 146
    FACTOR   go to state 79
    OPERAND  go to state 80


state 112

   30 TERM: TERM mul . FACTOR

    idf      shift, and go to state 69
    inti     shift, and go to state 70
    real     shift, and go to state 71
    mc_call  shift, and go to state 72
    po       shift, and go to state 76

    FACTOR   go to state 147
    OPERAND  go to state 80


state 113

   31 TERM: TERM divi . FACTOR

    idf      shift, and go to state 69
    inti     shift, and go to state 70
    real     shift, and go to state 71
    mc_call  shift, and go to state 72
    po       shift, and go to state 76

    FACTOR   go to state 148
    OPERAND  go to state 80


state 114

   26 TAILLE: inti .

    $default  reduce using rule 26 (TAILLE)


state 115

   20 DEC: TYPE idf mc_dim po TAILLE . pf pvg
   25 TAILLE: TAILLE . verg inti

    pf    shift, and go to state 149
    verg  shift, and go to state 150


state 116

   19 DEC: TYPE idf mul inti pvg .

    $default  reduce using rule 19 (DEC)


state 117

   23 ENSIDF_dec: ENSIDF_dec verg idf partie_gauch_affectation .

    $default  reduce using rule 23 (ENSIDF_dec)


state 118

   72 OGassi: idf po ENSpara pf .

    $default  reduce using rule 72 (OGassi)


state 119

   40 ENSpara: ENSpara verg . valeur

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    str       shift, and go to state 75
    po        shift, and go to state 76

    EXPRE    go to state 77
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    LOGI     go to state 81
    valeur   go to state 151


state 120

   66 var: idf po . ENSpara pf

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    str       shift, and go to state 75
    po        shift, and go to state 76

    EXPRE    go to state 77
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    ENSpara  go to state 152
    LOGI     go to state 81
    valeur   go to state 87


state 121

   76 read_statement: mc_read po var pf . pvg

    pvg  shift, and go to state 153


state 122

   77 write_statement: mc_write po ENS_PARA_WRITE pf . pvg

    pvg  shift, and go to state 154


state 123

   78 ENS_PARA_WRITE: ENS_PARA_WRITE verg . str
   79               | ENS_PARA_WRITE verg . var

    idf  shift, and go to state 88
    str  shift, and go to state 155

    var  go to state 156


state 124

   27 EXPRE: EXPRE . add TERM
   28      | EXPRE . sub TERM
   33 FACTOR: po EXPRE . pf
   88 EXPLOGI: EXPRE . lt EXPRE
   89        | EXPRE . gt EXPRE
   90        | EXPRE . ge EXPRE
   91        | EXPRE . eq EXPRE
   92        | EXPRE . ne EXPRE
   93        | EXPRE . le EXPRE

    ge   shift, and go to state 126
    eq   shift, and go to state 127
    ne   shift, and go to state 128
    le   shift, and go to state 129
    add  shift, and go to state 110
    sub  shift, and go to state 111
    lt   shift, and go to state 130
    gt   shift, and go to state 131
    pf   shift, and go to state 144


state 125

   83 CONDI: CONDI . mc_or CONDIT
   84      | CONDI . mc_and CONDIT
   86 CONDIT: po CONDI . pf

    mc_or   shift, and go to state 132
    mc_and  shift, and go to state 133
    pf      shift, and go to state 157


state 126

   90 EXPLOGI: EXPRE ge . EXPRE

    idf      shift, and go to state 69
    inti     shift, and go to state 70
    real     shift, and go to state 71
    mc_call  shift, and go to state 72
    po       shift, and go to state 76

    EXPRE    go to state 158
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80


state 127

   91 EXPLOGI: EXPRE eq . EXPRE

    idf      shift, and go to state 69
    inti     shift, and go to state 70
    real     shift, and go to state 71
    mc_call  shift, and go to state 72
    po       shift, and go to state 76

    EXPRE    go to state 159
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80


state 128

   92 EXPLOGI: EXPRE ne . EXPRE

    idf      shift, and go to state 69
    inti     shift, and go to state 70
    real     shift, and go to state 71
    mc_call  shift, and go to state 72
    po       shift, and go to state 76

    EXPRE    go to state 160
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80


state 129

   93 EXPLOGI: EXPRE le . EXPRE

    idf      shift, and go to state 69
    inti     shift, and go to state 70
    real     shift, and go to state 71
    mc_call  shift, and go to state 72
    po       shift, and go to state 76

    EXPRE    go to state 161
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80


state 130

   88 EXPLOGI: EXPRE lt . EXPRE

    idf      shift, and go to state 69
    inti     shift, and go to state 70
    real     shift, and go to state 71
    mc_call  shift, and go to state 72
    po       shift, and go to state 76

    EXPRE    go to state 162
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80


state 131

   89 EXPLOGI: EXPRE gt . EXPRE

    idf      shift, and go to state 69
    inti     shift, and go to state 70
    real     shift, and go to state 71
    mc_call  shift, and go to state 72
    po       shift, and go to state 76

    EXPRE    go to state 163
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80


state 132

   83 CONDI: CONDI mc_or . CONDIT

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    po        shift, and go to state 93

    EXPRE    go to state 94
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    LOGI     go to state 95
    CONDIT   go to state 164
    EXPLOGI  go to state 98


state 133

   84 CONDI: CONDI mc_and . CONDIT

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    po        shift, and go to state 93

    EXPRE    go to state 94
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    LOGI     go to state 95
    CONDIT   go to state 165
    EXPLOGI  go to state 98


state 134

   67 if_statement: mc_if po CONDI pf . mc_then ENSINST else_clause mc_endif

    mc_then  shift, and go to state 166


state 135

   82 dowhile_statement: mc_dowhile po CONDI pf . ENSINST mc_enddo

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    ENSINST            go to state 167
    INST               go to state 35
    eqival_statement   go to state 36
    if_statement       go to state 37
    assignment         go to state 38
    OGassi             go to state 39
    read_statement     go to state 40
    write_statement    go to state 41
    dowhile_statement  go to state 42


state 136

   62 ens_list_var: po list_var pf .

    $default  reduce using rule 62 (ens_list_var)


state 137

   63 list_var: list_var verg . var

    idf  shift, and go to state 88

    var  go to state 168


state 138

   61 ens_list_var: ens_list_var verg po . list_var pf

    idf  shift, and go to state 88

    list_var  go to state 169
    var       go to state 101


state 139

   70 assignment: OGassi aff valeur pvg .

    $default  reduce using rule 70 (assignment)


state 140

    8 FCT: TYPE mc_rtin idf po IDFS pf DECS ENSINST . assignment mc_endr
   50 ENSINST: ENSINST . INST

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    INST               go to state 65
    eqival_statement   go to state 36
    if_statement       go to state 37
    assignment         go to state 170
    OGassi             go to state 39
    read_statement     go to state 40
    write_statement    go to state 41
    dowhile_statement  go to state 42


state 141

    9 FCT: TYPE mc_rtin idf po IDFS pf DECS assignment . mc_endr
   56 INST: assignment .

    mc_endr  shift, and go to state 171

    $default  reduce using rule 56 (INST)


state 142

   25 TAILLE: TAILLE . verg inti
   38 OPERAND: idf po TAILLE . pf

    pf    shift, and go to state 172
    verg  shift, and go to state 150


state 143

   39 OPERAND: mc_call idf po . ENSpara pf

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    str       shift, and go to state 75
    po        shift, and go to state 76

    EXPRE    go to state 77
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    ENSpara  go to state 173
    LOGI     go to state 81
    valeur   go to state 87


state 144

   33 FACTOR: po EXPRE pf .

    $default  reduce using rule 33 (FACTOR)


state 145

   27 EXPRE: EXPRE add TERM .
   30 TERM: TERM . mul FACTOR
   31     | TERM . divi FACTOR

    mul   shift, and go to state 112
    divi  shift, and go to state 113

    $default  reduce using rule 27 (EXPRE)


state 146

   28 EXPRE: EXPRE sub TERM .
   30 TERM: TERM . mul FACTOR
   31     | TERM . divi FACTOR

    mul   shift, and go to state 112
    divi  shift, and go to state 113

    $default  reduce using rule 28 (EXPRE)


state 147

   30 TERM: TERM mul FACTOR .

    $default  reduce using rule 30 (TERM)


state 148

   31 TERM: TERM divi FACTOR .

    $default  reduce using rule 31 (TERM)


state 149

   20 DEC: TYPE idf mc_dim po TAILLE pf . pvg

    pvg  shift, and go to state 174


state 150

   25 TAILLE: TAILLE verg . inti

    inti  shift, and go to state 175


state 151

   40 ENSpara: ENSpara verg valeur .

    $default  reduce using rule 40 (ENSpara)


state 152

   40 ENSpara: ENSpara . verg valeur
   66 var: idf po ENSpara . pf

    pf    shift, and go to state 176
    verg  shift, and go to state 119


state 153

   76 read_statement: mc_read po var pf pvg .

    $default  reduce using rule 76 (read_statement)


state 154

   77 write_statement: mc_write po ENS_PARA_WRITE pf pvg .

    $default  reduce using rule 77 (write_statement)


state 155

   78 ENS_PARA_WRITE: ENS_PARA_WRITE verg str .

    $default  reduce using rule 78 (ENS_PARA_WRITE)


state 156

   79 ENS_PARA_WRITE: ENS_PARA_WRITE verg var .

    $default  reduce using rule 79 (ENS_PARA_WRITE)


state 157

   86 CONDIT: po CONDI pf .

    $default  reduce using rule 86 (CONDIT)


state 158

   27 EXPRE: EXPRE . add TERM
   28      | EXPRE . sub TERM
   90 EXPLOGI: EXPRE ge EXPRE .

    add  shift, and go to state 110
    sub  shift, and go to state 111

    $default  reduce using rule 90 (EXPLOGI)


state 159

   27 EXPRE: EXPRE . add TERM
   28      | EXPRE . sub TERM
   91 EXPLOGI: EXPRE eq EXPRE .

    add  shift, and go to state 110
    sub  shift, and go to state 111

    $default  reduce using rule 91 (EXPLOGI)


state 160

   27 EXPRE: EXPRE . add TERM
   28      | EXPRE . sub TERM
   92 EXPLOGI: EXPRE ne EXPRE .

    add  shift, and go to state 110
    sub  shift, and go to state 111

    $default  reduce using rule 92 (EXPLOGI)


state 161

   27 EXPRE: EXPRE . add TERM
   28      | EXPRE . sub TERM
   93 EXPLOGI: EXPRE le EXPRE .

    add  shift, and go to state 110
    sub  shift, and go to state 111

    $default  reduce using rule 93 (EXPLOGI)


state 162

   27 EXPRE: EXPRE . add TERM
   28      | EXPRE . sub TERM
   88 EXPLOGI: EXPRE lt EXPRE .

    add  shift, and go to state 110
    sub  shift, and go to state 111

    $default  reduce using rule 88 (EXPLOGI)


state 163

   27 EXPRE: EXPRE . add TERM
   28      | EXPRE . sub TERM
   89 EXPLOGI: EXPRE gt EXPRE .

    add  shift, and go to state 110
    sub  shift, and go to state 111

    $default  reduce using rule 89 (EXPLOGI)


state 164

   83 CONDI: CONDI mc_or CONDIT .

    $default  reduce using rule 83 (CONDI)


state 165

   84 CONDI: CONDI mc_and CONDIT .

    $default  reduce using rule 84 (CONDI)


state 166

   67 if_statement: mc_if po CONDI pf mc_then . ENSINST else_clause mc_endif

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    ENSINST            go to state 177
    INST               go to state 35
    eqival_statement   go to state 36
    if_statement       go to state 37
    assignment         go to state 38
    OGassi             go to state 39
    read_statement     go to state 40
    write_statement    go to state 41
    dowhile_statement  go to state 42


state 167

   50 ENSINST: ENSINST . INST
   82 dowhile_statement: mc_dowhile po CONDI pf ENSINST . mc_enddo

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_enddo    shift, and go to state 178
    mc_equival  shift, and go to state 31

    INST               go to state 65
    eqival_statement   go to state 36
    if_statement       go to state 37
    assignment         go to state 38
    OGassi             go to state 39
    read_statement     go to state 40
    write_statement    go to state 41
    dowhile_statement  go to state 42


state 168

   63 list_var: list_var verg var .

    $default  reduce using rule 63 (list_var)


state 169

   61 ens_list_var: ens_list_var verg po list_var . pf
   63 list_var: list_var . verg var

    pf    shift, and go to state 179
    verg  shift, and go to state 137


state 170

    8 FCT: TYPE mc_rtin idf po IDFS pf DECS ENSINST assignment . mc_endr
   56 INST: assignment .

    mc_endr  shift, and go to state 180

    $default  reduce using rule 56 (INST)


state 171

    9 FCT: TYPE mc_rtin idf po IDFS pf DECS assignment mc_endr .

    $default  reduce using rule 9 (FCT)


state 172

   38 OPERAND: idf po TAILLE pf .

    $default  reduce using rule 38 (OPERAND)


state 173

   39 OPERAND: mc_call idf po ENSpara . pf
   40 ENSpara: ENSpara . verg valeur

    pf    shift, and go to state 181
    verg  shift, and go to state 119


state 174

   20 DEC: TYPE idf mc_dim po TAILLE pf pvg .

    $default  reduce using rule 20 (DEC)


state 175

   25 TAILLE: TAILLE verg inti .

    $default  reduce using rule 25 (TAILLE)


state 176

   66 var: idf po ENSpara pf .

    $default  reduce using rule 66 (var)


state 177

   50 ENSINST: ENSINST . INST
   67 if_statement: mc_if po CONDI pf mc_then ENSINST . else_clause mc_endif

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_else     shift, and go to state 182
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    $default  reduce using rule 69 (else_clause)

    INST               go to state 65
    eqival_statement   go to state 36
    if_statement       go to state 37
    else_clause        go to state 183
    assignment         go to state 38
    OGassi             go to state 39
    read_statement     go to state 40
    write_statement    go to state 41
    dowhile_statement  go to state 42


state 178

   82 dowhile_statement: mc_dowhile po CONDI pf ENSINST mc_enddo .

    $default  reduce using rule 82 (dowhile_statement)


state 179

   61 ens_list_var: ens_list_var verg po list_var pf .

    $default  reduce using rule 61 (ens_list_var)


state 180

    8 FCT: TYPE mc_rtin idf po IDFS pf DECS ENSINST assignment mc_endr .

    $default  reduce using rule 8 (FCT)


state 181

   39 OPERAND: mc_call idf po ENSpara pf .

    $default  reduce using rule 39 (OPERAND)


state 182

   68 else_clause: mc_else . ENSINST

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    ENSINST            go to state 184
    INST               go to state 35
    eqival_statement   go to state 36
    if_statement       go to state 37
    assignment         go to state 38
    OGassi             go to state 39
    read_statement     go to state 40
    write_statement    go to state 41
    dowhile_statement  go to state 42


state 183

   67 if_statement: mc_if po CONDI pf mc_then ENSINST else_clause . mc_endif

    mc_endif  shift, and go to state 185


state 184

   50 ENSINST: ENSINST . INST
   68 else_clause: mc_else ENSINST .

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    $default  reduce using rule 68 (else_clause)

    INST               go to state 65
    eqival_statement   go to state 36
    if_statement       go to state 37
    assignment         go to state 38
    OGassi             go to state 39
    read_statement     go to state 40
    write_statement    go to state 41
    dowhile_statement  go to state 42


state 185

   67 if_statement: mc_if po CONDI pf mc_then ENSINST else_clause mc_endif .

    $default  reduce using rule 67 (if_statement)
