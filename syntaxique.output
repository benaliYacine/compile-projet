Terminals unused in grammar

   err


Grammar

    0 $accept: s $end

    1 s: FCTS PRGM_PRIN

    2 PRGM_PRIN: mc_prgrm idf DECS INSTS mc_end

    3 FCTS: VIDE
    4     | ENSFCT

    5 VIDE: /* empty */

    6 ENSFCT: ENSFCT FCT
    7       | FCT

    8 FCT: TYPE mc_rtin idf po IDFS pf DECS ENSINST assignment mc_endr
    9    | TYPE mc_rtin idf po IDFS pf DECS assignment mc_endr

   10 TYPE: mc_int
   11     | mc_real
   12     | mc_char
   13     | mc_logi

   14 DECS: VIDE
   15     | ENSDEC

   16 ENSDEC: ENSDEC DEC
   17       | DEC

   18 DEC: TYPE ENSIDF_dec pvg
   19    | TYPE idf mul inti pvg
   20    | TYPE idf mc_dim po TAILLE pf pvg

   21 partie_gauch_affectation: aff valeur
   22                         | VIDE

   23 ENSIDF_dec: ENSIDF_dec verg idf partie_gauch_affectation
   24           | idf partie_gauch_affectation

   25 TAILLE: TAILLE verg inti
   26       | inti

   27 EXPRE: EXPRE add TERM
   28      | EXPRE sub TERM
   29      | TERM

   30 TERM: TERM mul FACTOR
   31     | TERM divi FACTOR
   32     | FACTOR

   33 FACTOR: po EXPRE pf
   34       | OPERAND

   35 OPERAND: idf
   36        | LOGI
   37        | inti
   38        | real
   39        | idf po TAILLE pf
   40        | mc_call idf po ENSpara pf

   41 ENSpara: ENSpara verg valeur
   42        | valeur

   43 LOGI: mc_true
   44     | mc_false

   45 IDFS: ENSIDF
   46     | VIDE

   47 ENSIDF: ENSIDF verg idf
   48       | idf

   49 INSTS: VIDE
   50      | ENSINST

   51 ENSINST: ENSINST INST
   52        | INST

   53 INST: if_statement
   54     | read_statement
   55     | write_statement
   56     | dowhile_statement
   57     | assignment
   58     | eqival_statement

   59 eqival_statement: mc_equival ens_list_vars pvg

   60 ens_list_vars: ens_list_var
   61              | VIDE

   62 ens_list_var: ens_list_var verg po list_var pf
   63             | po list_var pf

   64 list_var: list_var verg var
   65         | var

   66 var: idf
   67    | idf po ENSpara pf

   68 if_statement: mc_if po CONDI pf mc_then ENSINST else_clause mc_endif

   69 else_clause: mc_else ENSINST
   70            | /* empty */

   71 assignment: OGassi aff valeur pvg

   72 OGassi: idf
   73       | idf po ENSpara pf

   74 valeur: str
   75       | EXPRE

   76 read_statement: mc_read po var pf pvg

   77 write_statement: mc_write po ENS_PARA_WRITE pf pvg

   78 ENS_PARA_WRITE: ENS_PARA_WRITE verg str
   79               | ENS_PARA_WRITE verg var
   80               | str
   81               | var

   82 dowhile_statement: mc_dowhile po CONDI pf ENSINST mc_enddo

   83 CONDI: CONDI mc_or CONDIT
   84      | CONDI mc_and CONDIT
   85      | CONDIT

   86 CONDIT: po CONDI pf
   87       | EXPLOGI

   88 EXPLOGI: EXPRE lt EXPRE
   89        | EXPRE gt EXPRE
   90        | EXPRE ge EXPRE
   91        | EXPRE eq EXPRE
   92        | EXPRE ne EXPRE
   93        | EXPRE le EXPRE


Terminals, with rules where they appear

$end (0) 0
error (256)
idf (258) 2 8 9 19 20 23 24 35 39 40 47 48 66 67 72 73
aff (259) 21 71
mc_prgrm (260) 2
mc_rtin (261) 8 9
inti (262) 19 25 26 37
real (263) 38
mc_endr (264) 8 9
mc_call (265) 40
mc_dim (266) 20
mc_logi (267) 13
mc_char (268) 12
mc_true (269) 43
mc_false (270) 44
mc_read (271) 76
mc_write (272) 77
pvg (273) 18 19 20 59 71 76 77
str (274) 74 78 80
mc_int (275) 10
mc_real (276) 11
mc_end (277) 2
mc_if (278) 68
mc_then (279) 68
mc_else (280) 69
mc_dowhile (281) 82
mc_enddo (282) 82
mc_equival (283) 59
mc_or (284) 83
ge (285) 90
eq (286) 91
ne (287) 92
le (288) 93
add (289) 27
sub (290) 28
mul (291) 19 30
divi (292) 31
mc_and (293) 84
mc_endif (294) 68
lt (295) 88
gt (296) 89
po (297) 8 9 20 33 39 40 62 63 67 68 73 76 77 82 86
pf (298) 8 9 20 33 39 40 62 63 67 68 73 76 77 82 86
verg (299) 23 25 41 47 62 64 78 79
err (300)


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
s (47)
    on left: 1, on right: 0
PRGM_PRIN (48)
    on left: 2, on right: 1
FCTS (49)
    on left: 3 4, on right: 1
VIDE (50)
    on left: 5, on right: 3 14 22 46 49 61
ENSFCT (51)
    on left: 6 7, on right: 4 6
FCT (52)
    on left: 8 9, on right: 6 7
TYPE (53)
    on left: 10 11 12 13, on right: 8 9 18 19 20
DECS (54)
    on left: 14 15, on right: 2 8 9
ENSDEC (55)
    on left: 16 17, on right: 15 16
DEC (56)
    on left: 18 19 20, on right: 16 17
partie_gauch_affectation (57)
    on left: 21 22, on right: 23 24
ENSIDF_dec (58)
    on left: 23 24, on right: 18 23
TAILLE (59)
    on left: 25 26, on right: 20 25 39
EXPRE (60)
    on left: 27 28 29, on right: 27 28 33 75 88 89 90 91 92 93
TERM (61)
    on left: 30 31 32, on right: 27 28 29 30 31
FACTOR (62)
    on left: 33 34, on right: 30 31 32
OPERAND (63)
    on left: 35 36 37 38 39 40, on right: 34
ENSpara (64)
    on left: 41 42, on right: 40 41 67 73
LOGI (65)
    on left: 43 44, on right: 36
IDFS (66)
    on left: 45 46, on right: 8 9
ENSIDF (67)
    on left: 47 48, on right: 45 47
INSTS (68)
    on left: 49 50, on right: 2
ENSINST (69)
    on left: 51 52, on right: 8 50 51 68 69 82
INST (70)
    on left: 53 54 55 56 57 58, on right: 51 52
eqival_statement (71)
    on left: 59, on right: 58
ens_list_vars (72)
    on left: 60 61, on right: 59
ens_list_var (73)
    on left: 62 63, on right: 60 62
list_var (74)
    on left: 64 65, on right: 62 63 64
var (75)
    on left: 66 67, on right: 64 65 76 79 81
if_statement (76)
    on left: 68, on right: 53
else_clause (77)
    on left: 69 70, on right: 68
assignment (78)
    on left: 71, on right: 8 9 57
OGassi (79)
    on left: 72 73, on right: 71
valeur (80)
    on left: 74 75, on right: 21 41 42 71
read_statement (81)
    on left: 76, on right: 54
write_statement (82)
    on left: 77, on right: 55
ENS_PARA_WRITE (83)
    on left: 78 79 80 81, on right: 77 78 79
dowhile_statement (84)
    on left: 82, on right: 56
CONDI (85)
    on left: 83 84 85, on right: 68 82 83 84 86
CONDIT (86)
    on left: 86 87, on right: 83 84 85
EXPLOGI (87)
    on left: 88 89 90 91 92 93, on right: 87


state 0

    0 $accept: . s $end

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 5 (VIDE)

    s       go to state 5
    FCTS    go to state 6
    VIDE    go to state 7
    ENSFCT  go to state 8
    FCT     go to state 9
    TYPE    go to state 10


state 1

   13 TYPE: mc_logi .

    $default  reduce using rule 13 (TYPE)


state 2

   12 TYPE: mc_char .

    $default  reduce using rule 12 (TYPE)


state 3

   10 TYPE: mc_int .

    $default  reduce using rule 10 (TYPE)


state 4

   11 TYPE: mc_real .

    $default  reduce using rule 11 (TYPE)


state 5

    0 $accept: s . $end

    $end  shift, and go to state 11


state 6

    1 s: FCTS . PRGM_PRIN

    mc_prgrm  shift, and go to state 12

    PRGM_PRIN  go to state 13


state 7

    3 FCTS: VIDE .

    $default  reduce using rule 3 (FCTS)


state 8

    4 FCTS: ENSFCT .
    6 ENSFCT: ENSFCT . FCT

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 4 (FCTS)

    FCT   go to state 14
    TYPE  go to state 10


state 9

    7 ENSFCT: FCT .

    $default  reduce using rule 7 (ENSFCT)


state 10

    8 FCT: TYPE . mc_rtin idf po IDFS pf DECS ENSINST assignment mc_endr
    9    | TYPE . mc_rtin idf po IDFS pf DECS assignment mc_endr

    mc_rtin  shift, and go to state 15


state 11

    0 $accept: s $end .

    $default  accept


state 12

    2 PRGM_PRIN: mc_prgrm . idf DECS INSTS mc_end

    idf  shift, and go to state 16


state 13

    1 s: FCTS PRGM_PRIN .

    $default  reduce using rule 1 (s)


state 14

    6 ENSFCT: ENSFCT FCT .

    $default  reduce using rule 6 (ENSFCT)


state 15

    8 FCT: TYPE mc_rtin . idf po IDFS pf DECS ENSINST assignment mc_endr
    9    | TYPE mc_rtin . idf po IDFS pf DECS assignment mc_endr

    idf  shift, and go to state 17


state 16

    2 PRGM_PRIN: mc_prgrm idf . DECS INSTS mc_end

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 5 (VIDE)

    VIDE    go to state 18
    TYPE    go to state 19
    DECS    go to state 20
    ENSDEC  go to state 21
    DEC     go to state 22


state 17

    8 FCT: TYPE mc_rtin idf . po IDFS pf DECS ENSINST assignment mc_endr
    9    | TYPE mc_rtin idf . po IDFS pf DECS assignment mc_endr

    po  shift, and go to state 23


state 18

   14 DECS: VIDE .

    $default  reduce using rule 14 (DECS)


state 19

   18 DEC: TYPE . ENSIDF_dec pvg
   19    | TYPE . idf mul inti pvg
   20    | TYPE . idf mc_dim po TAILLE pf pvg

    idf  shift, and go to state 24

    ENSIDF_dec  go to state 25


state 20

    2 PRGM_PRIN: mc_prgrm idf DECS . INSTS mc_end

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    $default  reduce using rule 5 (VIDE)

    VIDE               go to state 32
    INSTS              go to state 33
    ENSINST            go to state 34
    INST               go to state 35
    eqival_statement   go to state 36
    if_statement       go to state 37
    assignment         go to state 38
    OGassi             go to state 39
    read_statement     go to state 40
    write_statement    go to state 41
    dowhile_statement  go to state 42


state 21

   15 DECS: ENSDEC .
   16 ENSDEC: ENSDEC . DEC

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 15 (DECS)

    TYPE  go to state 19
    DEC   go to state 43


state 22

   17 ENSDEC: DEC .

    $default  reduce using rule 17 (ENSDEC)


state 23

    8 FCT: TYPE mc_rtin idf po . IDFS pf DECS ENSINST assignment mc_endr
    9    | TYPE mc_rtin idf po . IDFS pf DECS assignment mc_endr

    idf  shift, and go to state 44

    $default  reduce using rule 5 (VIDE)

    VIDE    go to state 45
    IDFS    go to state 46
    ENSIDF  go to state 47


state 24

   19 DEC: TYPE idf . mul inti pvg
   20    | TYPE idf . mc_dim po TAILLE pf pvg
   24 ENSIDF_dec: idf . partie_gauch_affectation

    aff     shift, and go to state 48
    mc_dim  shift, and go to state 49
    mul     shift, and go to state 50

    $default  reduce using rule 5 (VIDE)

    VIDE                      go to state 51
    partie_gauch_affectation  go to state 52


state 25

   18 DEC: TYPE ENSIDF_dec . pvg
   23 ENSIDF_dec: ENSIDF_dec . verg idf partie_gauch_affectation

    pvg   shift, and go to state 53
    verg  shift, and go to state 54


state 26

   72 OGassi: idf .
   73       | idf . po ENSpara pf

    po  shift, and go to state 55

    $default  reduce using rule 72 (OGassi)


state 27

   76 read_statement: mc_read . po var pf pvg

    po  shift, and go to state 56


state 28

   77 write_statement: mc_write . po ENS_PARA_WRITE pf pvg

    po  shift, and go to state 57


state 29

   68 if_statement: mc_if . po CONDI pf mc_then ENSINST else_clause mc_endif

    po  shift, and go to state 58


state 30

   82 dowhile_statement: mc_dowhile . po CONDI pf ENSINST mc_enddo

    po  shift, and go to state 59


state 31

   59 eqival_statement: mc_equival . ens_list_vars pvg

    po  shift, and go to state 60

    $default  reduce using rule 5 (VIDE)

    VIDE           go to state 61
    ens_list_vars  go to state 62
    ens_list_var   go to state 63


state 32

   49 INSTS: VIDE .

    $default  reduce using rule 49 (INSTS)


state 33

    2 PRGM_PRIN: mc_prgrm idf DECS INSTS . mc_end

    mc_end  shift, and go to state 64


state 34

   50 INSTS: ENSINST .
   51 ENSINST: ENSINST . INST

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    $default  reduce using rule 50 (INSTS)

    INST               go to state 65
    eqival_statement   go to state 36
    if_statement       go to state 37
    assignment         go to state 38
    OGassi             go to state 39
    read_statement     go to state 40
    write_statement    go to state 41
    dowhile_statement  go to state 42


state 35

   52 ENSINST: INST .

    $default  reduce using rule 52 (ENSINST)


state 36

   58 INST: eqival_statement .

    $default  reduce using rule 58 (INST)


state 37

   53 INST: if_statement .

    $default  reduce using rule 53 (INST)


state 38

   57 INST: assignment .

    $default  reduce using rule 57 (INST)


state 39

   71 assignment: OGassi . aff valeur pvg

    aff  shift, and go to state 66


state 40

   54 INST: read_statement .

    $default  reduce using rule 54 (INST)


state 41

   55 INST: write_statement .

    $default  reduce using rule 55 (INST)


state 42

   56 INST: dowhile_statement .

    $default  reduce using rule 56 (INST)


state 43

   16 ENSDEC: ENSDEC DEC .

    $default  reduce using rule 16 (ENSDEC)


state 44

   48 ENSIDF: idf .

    $default  reduce using rule 48 (ENSIDF)


state 45

   46 IDFS: VIDE .

    $default  reduce using rule 46 (IDFS)


state 46

    8 FCT: TYPE mc_rtin idf po IDFS . pf DECS ENSINST assignment mc_endr
    9    | TYPE mc_rtin idf po IDFS . pf DECS assignment mc_endr

    pf  shift, and go to state 67


state 47

   45 IDFS: ENSIDF .
   47 ENSIDF: ENSIDF . verg idf

    verg  shift, and go to state 68

    $default  reduce using rule 45 (IDFS)


state 48

   21 partie_gauch_affectation: aff . valeur

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    str       shift, and go to state 75
    po        shift, and go to state 76

    EXPRE    go to state 77
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    LOGI     go to state 81
    valeur   go to state 82


state 49

   20 DEC: TYPE idf mc_dim . po TAILLE pf pvg

    po  shift, and go to state 83


state 50

   19 DEC: TYPE idf mul . inti pvg

    inti  shift, and go to state 84


state 51

   22 partie_gauch_affectation: VIDE .

    $default  reduce using rule 22 (partie_gauch_affectation)


state 52

   24 ENSIDF_dec: idf partie_gauch_affectation .

    $default  reduce using rule 24 (ENSIDF_dec)


state 53

   18 DEC: TYPE ENSIDF_dec pvg .

    $default  reduce using rule 18 (DEC)


state 54

   23 ENSIDF_dec: ENSIDF_dec verg . idf partie_gauch_affectation

    idf  shift, and go to state 85


state 55

   73 OGassi: idf po . ENSpara pf

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    str       shift, and go to state 75
    po        shift, and go to state 76

    EXPRE    go to state 77
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    ENSpara  go to state 86
    LOGI     go to state 81
    valeur   go to state 87


state 56

   76 read_statement: mc_read po . var pf pvg

    idf  shift, and go to state 88

    var  go to state 89


state 57

   77 write_statement: mc_write po . ENS_PARA_WRITE pf pvg

    idf  shift, and go to state 88
    str  shift, and go to state 90

    var             go to state 91
    ENS_PARA_WRITE  go to state 92


state 58

   68 if_statement: mc_if po . CONDI pf mc_then ENSINST else_clause mc_endif

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    po        shift, and go to state 93

    EXPRE    go to state 94
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    LOGI     go to state 81
    CONDI    go to state 95
    CONDIT   go to state 96
    EXPLOGI  go to state 97


state 59

   82 dowhile_statement: mc_dowhile po . CONDI pf ENSINST mc_enddo

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    po        shift, and go to state 93

    EXPRE    go to state 94
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    LOGI     go to state 81
    CONDI    go to state 98
    CONDIT   go to state 96
    EXPLOGI  go to state 97


state 60

   63 ens_list_var: po . list_var pf

    idf  shift, and go to state 88

    list_var  go to state 99
    var       go to state 100


state 61

   61 ens_list_vars: VIDE .

    $default  reduce using rule 61 (ens_list_vars)


state 62

   59 eqival_statement: mc_equival ens_list_vars . pvg

    pvg  shift, and go to state 101


state 63

   60 ens_list_vars: ens_list_var .
   62 ens_list_var: ens_list_var . verg po list_var pf

    verg  shift, and go to state 102

    $default  reduce using rule 60 (ens_list_vars)


state 64

    2 PRGM_PRIN: mc_prgrm idf DECS INSTS mc_end .

    $default  reduce using rule 2 (PRGM_PRIN)


state 65

   51 ENSINST: ENSINST INST .

    $default  reduce using rule 51 (ENSINST)


state 66

   71 assignment: OGassi aff . valeur pvg

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    str       shift, and go to state 75
    po        shift, and go to state 76

    EXPRE    go to state 77
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    LOGI     go to state 81
    valeur   go to state 103


state 67

    8 FCT: TYPE mc_rtin idf po IDFS pf . DECS ENSINST assignment mc_endr
    9    | TYPE mc_rtin idf po IDFS pf . DECS assignment mc_endr

    mc_logi  shift, and go to state 1
    mc_char  shift, and go to state 2
    mc_int   shift, and go to state 3
    mc_real  shift, and go to state 4

    $default  reduce using rule 5 (VIDE)

    VIDE    go to state 18
    TYPE    go to state 19
    DECS    go to state 104
    ENSDEC  go to state 21
    DEC     go to state 22


state 68

   47 ENSIDF: ENSIDF verg . idf

    idf  shift, and go to state 105


state 69

   35 OPERAND: idf .
   39        | idf . po TAILLE pf

    po  shift, and go to state 106

    $default  reduce using rule 35 (OPERAND)


state 70

   37 OPERAND: inti .

    $default  reduce using rule 37 (OPERAND)


state 71

   38 OPERAND: real .

    $default  reduce using rule 38 (OPERAND)


state 72

   40 OPERAND: mc_call . idf po ENSpara pf

    idf  shift, and go to state 107


state 73

   43 LOGI: mc_true .

    $default  reduce using rule 43 (LOGI)


state 74

   44 LOGI: mc_false .

    $default  reduce using rule 44 (LOGI)


state 75

   74 valeur: str .

    $default  reduce using rule 74 (valeur)


state 76

   33 FACTOR: po . EXPRE pf

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    po        shift, and go to state 76

    EXPRE    go to state 108
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    LOGI     go to state 81


state 77

   27 EXPRE: EXPRE . add TERM
   28      | EXPRE . sub TERM
   75 valeur: EXPRE .

    add  shift, and go to state 109
    sub  shift, and go to state 110

    $default  reduce using rule 75 (valeur)


state 78

   29 EXPRE: TERM .
   30 TERM: TERM . mul FACTOR
   31     | TERM . divi FACTOR

    mul   shift, and go to state 111
    divi  shift, and go to state 112

    $default  reduce using rule 29 (EXPRE)


state 79

   32 TERM: FACTOR .

    $default  reduce using rule 32 (TERM)


state 80

   34 FACTOR: OPERAND .

    $default  reduce using rule 34 (FACTOR)


state 81

   36 OPERAND: LOGI .

    $default  reduce using rule 36 (OPERAND)


state 82

   21 partie_gauch_affectation: aff valeur .

    $default  reduce using rule 21 (partie_gauch_affectation)


state 83

   20 DEC: TYPE idf mc_dim po . TAILLE pf pvg

    inti  shift, and go to state 113

    TAILLE  go to state 114


state 84

   19 DEC: TYPE idf mul inti . pvg

    pvg  shift, and go to state 115


state 85

   23 ENSIDF_dec: ENSIDF_dec verg idf . partie_gauch_affectation

    aff  shift, and go to state 48

    $default  reduce using rule 5 (VIDE)

    VIDE                      go to state 51
    partie_gauch_affectation  go to state 116


state 86

   41 ENSpara: ENSpara . verg valeur
   73 OGassi: idf po ENSpara . pf

    pf    shift, and go to state 117
    verg  shift, and go to state 118


state 87

   42 ENSpara: valeur .

    $default  reduce using rule 42 (ENSpara)


state 88

   66 var: idf .
   67    | idf . po ENSpara pf

    po  shift, and go to state 119

    $default  reduce using rule 66 (var)


state 89

   76 read_statement: mc_read po var . pf pvg

    pf  shift, and go to state 120


state 90

   80 ENS_PARA_WRITE: str .

    $default  reduce using rule 80 (ENS_PARA_WRITE)


state 91

   81 ENS_PARA_WRITE: var .

    $default  reduce using rule 81 (ENS_PARA_WRITE)


state 92

   77 write_statement: mc_write po ENS_PARA_WRITE . pf pvg
   78 ENS_PARA_WRITE: ENS_PARA_WRITE . verg str
   79               | ENS_PARA_WRITE . verg var

    pf    shift, and go to state 121
    verg  shift, and go to state 122


state 93

   33 FACTOR: po . EXPRE pf
   86 CONDIT: po . CONDI pf

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    po        shift, and go to state 93

    EXPRE    go to state 123
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    LOGI     go to state 81
    CONDI    go to state 124
    CONDIT   go to state 96
    EXPLOGI  go to state 97


state 94

   27 EXPRE: EXPRE . add TERM
   28      | EXPRE . sub TERM
   88 EXPLOGI: EXPRE . lt EXPRE
   89        | EXPRE . gt EXPRE
   90        | EXPRE . ge EXPRE
   91        | EXPRE . eq EXPRE
   92        | EXPRE . ne EXPRE
   93        | EXPRE . le EXPRE

    ge   shift, and go to state 125
    eq   shift, and go to state 126
    ne   shift, and go to state 127
    le   shift, and go to state 128
    add  shift, and go to state 109
    sub  shift, and go to state 110
    lt   shift, and go to state 129
    gt   shift, and go to state 130


state 95

   68 if_statement: mc_if po CONDI . pf mc_then ENSINST else_clause mc_endif
   83 CONDI: CONDI . mc_or CONDIT
   84      | CONDI . mc_and CONDIT

    mc_or   shift, and go to state 131
    mc_and  shift, and go to state 132
    pf      shift, and go to state 133


state 96

   85 CONDI: CONDIT .

    $default  reduce using rule 85 (CONDI)


state 97

   87 CONDIT: EXPLOGI .

    $default  reduce using rule 87 (CONDIT)


state 98

   82 dowhile_statement: mc_dowhile po CONDI . pf ENSINST mc_enddo
   83 CONDI: CONDI . mc_or CONDIT
   84      | CONDI . mc_and CONDIT

    mc_or   shift, and go to state 131
    mc_and  shift, and go to state 132
    pf      shift, and go to state 134


state 99

   63 ens_list_var: po list_var . pf
   64 list_var: list_var . verg var

    pf    shift, and go to state 135
    verg  shift, and go to state 136


state 100

   65 list_var: var .

    $default  reduce using rule 65 (list_var)


state 101

   59 eqival_statement: mc_equival ens_list_vars pvg .

    $default  reduce using rule 59 (eqival_statement)


state 102

   62 ens_list_var: ens_list_var verg . po list_var pf

    po  shift, and go to state 137


state 103

   71 assignment: OGassi aff valeur . pvg

    pvg  shift, and go to state 138


state 104

    8 FCT: TYPE mc_rtin idf po IDFS pf DECS . ENSINST assignment mc_endr
    9    | TYPE mc_rtin idf po IDFS pf DECS . assignment mc_endr

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    ENSINST            go to state 139
    INST               go to state 35
    eqival_statement   go to state 36
    if_statement       go to state 37
    assignment         go to state 140
    OGassi             go to state 39
    read_statement     go to state 40
    write_statement    go to state 41
    dowhile_statement  go to state 42


state 105

   47 ENSIDF: ENSIDF verg idf .

    $default  reduce using rule 47 (ENSIDF)


state 106

   39 OPERAND: idf po . TAILLE pf

    inti  shift, and go to state 113

    TAILLE  go to state 141


state 107

   40 OPERAND: mc_call idf . po ENSpara pf

    po  shift, and go to state 142


state 108

   27 EXPRE: EXPRE . add TERM
   28      | EXPRE . sub TERM
   33 FACTOR: po EXPRE . pf

    add  shift, and go to state 109
    sub  shift, and go to state 110
    pf   shift, and go to state 143


state 109

   27 EXPRE: EXPRE add . TERM

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    po        shift, and go to state 76

    TERM     go to state 144
    FACTOR   go to state 79
    OPERAND  go to state 80
    LOGI     go to state 81


state 110

   28 EXPRE: EXPRE sub . TERM

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    po        shift, and go to state 76

    TERM     go to state 145
    FACTOR   go to state 79
    OPERAND  go to state 80
    LOGI     go to state 81


state 111

   30 TERM: TERM mul . FACTOR

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    po        shift, and go to state 76

    FACTOR   go to state 146
    OPERAND  go to state 80
    LOGI     go to state 81


state 112

   31 TERM: TERM divi . FACTOR

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    po        shift, and go to state 76

    FACTOR   go to state 147
    OPERAND  go to state 80
    LOGI     go to state 81


state 113

   26 TAILLE: inti .

    $default  reduce using rule 26 (TAILLE)


state 114

   20 DEC: TYPE idf mc_dim po TAILLE . pf pvg
   25 TAILLE: TAILLE . verg inti

    pf    shift, and go to state 148
    verg  shift, and go to state 149


state 115

   19 DEC: TYPE idf mul inti pvg .

    $default  reduce using rule 19 (DEC)


state 116

   23 ENSIDF_dec: ENSIDF_dec verg idf partie_gauch_affectation .

    $default  reduce using rule 23 (ENSIDF_dec)


state 117

   73 OGassi: idf po ENSpara pf .

    $default  reduce using rule 73 (OGassi)


state 118

   41 ENSpara: ENSpara verg . valeur

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    str       shift, and go to state 75
    po        shift, and go to state 76

    EXPRE    go to state 77
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    LOGI     go to state 81
    valeur   go to state 150


state 119

   67 var: idf po . ENSpara pf

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    str       shift, and go to state 75
    po        shift, and go to state 76

    EXPRE    go to state 77
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    ENSpara  go to state 151
    LOGI     go to state 81
    valeur   go to state 87


state 120

   76 read_statement: mc_read po var pf . pvg

    pvg  shift, and go to state 152


state 121

   77 write_statement: mc_write po ENS_PARA_WRITE pf . pvg

    pvg  shift, and go to state 153


state 122

   78 ENS_PARA_WRITE: ENS_PARA_WRITE verg . str
   79               | ENS_PARA_WRITE verg . var

    idf  shift, and go to state 88
    str  shift, and go to state 154

    var  go to state 155


state 123

   27 EXPRE: EXPRE . add TERM
   28      | EXPRE . sub TERM
   33 FACTOR: po EXPRE . pf
   88 EXPLOGI: EXPRE . lt EXPRE
   89        | EXPRE . gt EXPRE
   90        | EXPRE . ge EXPRE
   91        | EXPRE . eq EXPRE
   92        | EXPRE . ne EXPRE
   93        | EXPRE . le EXPRE

    ge   shift, and go to state 125
    eq   shift, and go to state 126
    ne   shift, and go to state 127
    le   shift, and go to state 128
    add  shift, and go to state 109
    sub  shift, and go to state 110
    lt   shift, and go to state 129
    gt   shift, and go to state 130
    pf   shift, and go to state 143


state 124

   83 CONDI: CONDI . mc_or CONDIT
   84      | CONDI . mc_and CONDIT
   86 CONDIT: po CONDI . pf

    mc_or   shift, and go to state 131
    mc_and  shift, and go to state 132
    pf      shift, and go to state 156


state 125

   90 EXPLOGI: EXPRE ge . EXPRE

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    po        shift, and go to state 76

    EXPRE    go to state 157
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    LOGI     go to state 81


state 126

   91 EXPLOGI: EXPRE eq . EXPRE

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    po        shift, and go to state 76

    EXPRE    go to state 158
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    LOGI     go to state 81


state 127

   92 EXPLOGI: EXPRE ne . EXPRE

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    po        shift, and go to state 76

    EXPRE    go to state 159
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    LOGI     go to state 81


state 128

   93 EXPLOGI: EXPRE le . EXPRE

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    po        shift, and go to state 76

    EXPRE    go to state 160
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    LOGI     go to state 81


state 129

   88 EXPLOGI: EXPRE lt . EXPRE

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    po        shift, and go to state 76

    EXPRE    go to state 161
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    LOGI     go to state 81


state 130

   89 EXPLOGI: EXPRE gt . EXPRE

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    po        shift, and go to state 76

    EXPRE    go to state 162
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    LOGI     go to state 81


state 131

   83 CONDI: CONDI mc_or . CONDIT

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    po        shift, and go to state 93

    EXPRE    go to state 94
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    LOGI     go to state 81
    CONDIT   go to state 163
    EXPLOGI  go to state 97


state 132

   84 CONDI: CONDI mc_and . CONDIT

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    po        shift, and go to state 93

    EXPRE    go to state 94
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    LOGI     go to state 81
    CONDIT   go to state 164
    EXPLOGI  go to state 97


state 133

   68 if_statement: mc_if po CONDI pf . mc_then ENSINST else_clause mc_endif

    mc_then  shift, and go to state 165


state 134

   82 dowhile_statement: mc_dowhile po CONDI pf . ENSINST mc_enddo

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    ENSINST            go to state 166
    INST               go to state 35
    eqival_statement   go to state 36
    if_statement       go to state 37
    assignment         go to state 38
    OGassi             go to state 39
    read_statement     go to state 40
    write_statement    go to state 41
    dowhile_statement  go to state 42


state 135

   63 ens_list_var: po list_var pf .

    $default  reduce using rule 63 (ens_list_var)


state 136

   64 list_var: list_var verg . var

    idf  shift, and go to state 88

    var  go to state 167


state 137

   62 ens_list_var: ens_list_var verg po . list_var pf

    idf  shift, and go to state 88

    list_var  go to state 168
    var       go to state 100


state 138

   71 assignment: OGassi aff valeur pvg .

    $default  reduce using rule 71 (assignment)


state 139

    8 FCT: TYPE mc_rtin idf po IDFS pf DECS ENSINST . assignment mc_endr
   51 ENSINST: ENSINST . INST

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    INST               go to state 65
    eqival_statement   go to state 36
    if_statement       go to state 37
    assignment         go to state 169
    OGassi             go to state 39
    read_statement     go to state 40
    write_statement    go to state 41
    dowhile_statement  go to state 42


state 140

    9 FCT: TYPE mc_rtin idf po IDFS pf DECS assignment . mc_endr
   57 INST: assignment .

    mc_endr  shift, and go to state 170

    $default  reduce using rule 57 (INST)


state 141

   25 TAILLE: TAILLE . verg inti
   39 OPERAND: idf po TAILLE . pf

    pf    shift, and go to state 171
    verg  shift, and go to state 149


state 142

   40 OPERAND: mc_call idf po . ENSpara pf

    idf       shift, and go to state 69
    inti      shift, and go to state 70
    real      shift, and go to state 71
    mc_call   shift, and go to state 72
    mc_true   shift, and go to state 73
    mc_false  shift, and go to state 74
    str       shift, and go to state 75
    po        shift, and go to state 76

    EXPRE    go to state 77
    TERM     go to state 78
    FACTOR   go to state 79
    OPERAND  go to state 80
    ENSpara  go to state 172
    LOGI     go to state 81
    valeur   go to state 87


state 143

   33 FACTOR: po EXPRE pf .

    $default  reduce using rule 33 (FACTOR)


state 144

   27 EXPRE: EXPRE add TERM .
   30 TERM: TERM . mul FACTOR
   31     | TERM . divi FACTOR

    mul   shift, and go to state 111
    divi  shift, and go to state 112

    $default  reduce using rule 27 (EXPRE)


state 145

   28 EXPRE: EXPRE sub TERM .
   30 TERM: TERM . mul FACTOR
   31     | TERM . divi FACTOR

    mul   shift, and go to state 111
    divi  shift, and go to state 112

    $default  reduce using rule 28 (EXPRE)


state 146

   30 TERM: TERM mul FACTOR .

    $default  reduce using rule 30 (TERM)


state 147

   31 TERM: TERM divi FACTOR .

    $default  reduce using rule 31 (TERM)


state 148

   20 DEC: TYPE idf mc_dim po TAILLE pf . pvg

    pvg  shift, and go to state 173


state 149

   25 TAILLE: TAILLE verg . inti

    inti  shift, and go to state 174


state 150

   41 ENSpara: ENSpara verg valeur .

    $default  reduce using rule 41 (ENSpara)


state 151

   41 ENSpara: ENSpara . verg valeur
   67 var: idf po ENSpara . pf

    pf    shift, and go to state 175
    verg  shift, and go to state 118


state 152

   76 read_statement: mc_read po var pf pvg .

    $default  reduce using rule 76 (read_statement)


state 153

   77 write_statement: mc_write po ENS_PARA_WRITE pf pvg .

    $default  reduce using rule 77 (write_statement)


state 154

   78 ENS_PARA_WRITE: ENS_PARA_WRITE verg str .

    $default  reduce using rule 78 (ENS_PARA_WRITE)


state 155

   79 ENS_PARA_WRITE: ENS_PARA_WRITE verg var .

    $default  reduce using rule 79 (ENS_PARA_WRITE)


state 156

   86 CONDIT: po CONDI pf .

    $default  reduce using rule 86 (CONDIT)


state 157

   27 EXPRE: EXPRE . add TERM
   28      | EXPRE . sub TERM
   90 EXPLOGI: EXPRE ge EXPRE .

    add  shift, and go to state 109
    sub  shift, and go to state 110

    $default  reduce using rule 90 (EXPLOGI)


state 158

   27 EXPRE: EXPRE . add TERM
   28      | EXPRE . sub TERM
   91 EXPLOGI: EXPRE eq EXPRE .

    add  shift, and go to state 109
    sub  shift, and go to state 110

    $default  reduce using rule 91 (EXPLOGI)


state 159

   27 EXPRE: EXPRE . add TERM
   28      | EXPRE . sub TERM
   92 EXPLOGI: EXPRE ne EXPRE .

    add  shift, and go to state 109
    sub  shift, and go to state 110

    $default  reduce using rule 92 (EXPLOGI)


state 160

   27 EXPRE: EXPRE . add TERM
   28      | EXPRE . sub TERM
   93 EXPLOGI: EXPRE le EXPRE .

    add  shift, and go to state 109
    sub  shift, and go to state 110

    $default  reduce using rule 93 (EXPLOGI)


state 161

   27 EXPRE: EXPRE . add TERM
   28      | EXPRE . sub TERM
   88 EXPLOGI: EXPRE lt EXPRE .

    add  shift, and go to state 109
    sub  shift, and go to state 110

    $default  reduce using rule 88 (EXPLOGI)


state 162

   27 EXPRE: EXPRE . add TERM
   28      | EXPRE . sub TERM
   89 EXPLOGI: EXPRE gt EXPRE .

    add  shift, and go to state 109
    sub  shift, and go to state 110

    $default  reduce using rule 89 (EXPLOGI)


state 163

   83 CONDI: CONDI mc_or CONDIT .

    $default  reduce using rule 83 (CONDI)


state 164

   84 CONDI: CONDI mc_and CONDIT .

    $default  reduce using rule 84 (CONDI)


state 165

   68 if_statement: mc_if po CONDI pf mc_then . ENSINST else_clause mc_endif

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    ENSINST            go to state 176
    INST               go to state 35
    eqival_statement   go to state 36
    if_statement       go to state 37
    assignment         go to state 38
    OGassi             go to state 39
    read_statement     go to state 40
    write_statement    go to state 41
    dowhile_statement  go to state 42


state 166

   51 ENSINST: ENSINST . INST
   82 dowhile_statement: mc_dowhile po CONDI pf ENSINST . mc_enddo

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_enddo    shift, and go to state 177
    mc_equival  shift, and go to state 31

    INST               go to state 65
    eqival_statement   go to state 36
    if_statement       go to state 37
    assignment         go to state 38
    OGassi             go to state 39
    read_statement     go to state 40
    write_statement    go to state 41
    dowhile_statement  go to state 42


state 167

   64 list_var: list_var verg var .

    $default  reduce using rule 64 (list_var)


state 168

   62 ens_list_var: ens_list_var verg po list_var . pf
   64 list_var: list_var . verg var

    pf    shift, and go to state 178
    verg  shift, and go to state 136


state 169

    8 FCT: TYPE mc_rtin idf po IDFS pf DECS ENSINST assignment . mc_endr
   57 INST: assignment .

    mc_endr  shift, and go to state 179

    $default  reduce using rule 57 (INST)


state 170

    9 FCT: TYPE mc_rtin idf po IDFS pf DECS assignment mc_endr .

    $default  reduce using rule 9 (FCT)


state 171

   39 OPERAND: idf po TAILLE pf .

    $default  reduce using rule 39 (OPERAND)


state 172

   40 OPERAND: mc_call idf po ENSpara . pf
   41 ENSpara: ENSpara . verg valeur

    pf    shift, and go to state 180
    verg  shift, and go to state 118


state 173

   20 DEC: TYPE idf mc_dim po TAILLE pf pvg .

    $default  reduce using rule 20 (DEC)


state 174

   25 TAILLE: TAILLE verg inti .

    $default  reduce using rule 25 (TAILLE)


state 175

   67 var: idf po ENSpara pf .

    $default  reduce using rule 67 (var)


state 176

   51 ENSINST: ENSINST . INST
   68 if_statement: mc_if po CONDI pf mc_then ENSINST . else_clause mc_endif

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_else     shift, and go to state 181
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    $default  reduce using rule 70 (else_clause)

    INST               go to state 65
    eqival_statement   go to state 36
    if_statement       go to state 37
    else_clause        go to state 182
    assignment         go to state 38
    OGassi             go to state 39
    read_statement     go to state 40
    write_statement    go to state 41
    dowhile_statement  go to state 42


state 177

   82 dowhile_statement: mc_dowhile po CONDI pf ENSINST mc_enddo .

    $default  reduce using rule 82 (dowhile_statement)


state 178

   62 ens_list_var: ens_list_var verg po list_var pf .

    $default  reduce using rule 62 (ens_list_var)


state 179

    8 FCT: TYPE mc_rtin idf po IDFS pf DECS ENSINST assignment mc_endr .

    $default  reduce using rule 8 (FCT)


state 180

   40 OPERAND: mc_call idf po ENSpara pf .

    $default  reduce using rule 40 (OPERAND)


state 181

   69 else_clause: mc_else . ENSINST

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    ENSINST            go to state 183
    INST               go to state 35
    eqival_statement   go to state 36
    if_statement       go to state 37
    assignment         go to state 38
    OGassi             go to state 39
    read_statement     go to state 40
    write_statement    go to state 41
    dowhile_statement  go to state 42


state 182

   68 if_statement: mc_if po CONDI pf mc_then ENSINST else_clause . mc_endif

    mc_endif  shift, and go to state 184


state 183

   51 ENSINST: ENSINST . INST
   69 else_clause: mc_else ENSINST .

    idf         shift, and go to state 26
    mc_read     shift, and go to state 27
    mc_write    shift, and go to state 28
    mc_if       shift, and go to state 29
    mc_dowhile  shift, and go to state 30
    mc_equival  shift, and go to state 31

    $default  reduce using rule 69 (else_clause)

    INST               go to state 65
    eqival_statement   go to state 36
    if_statement       go to state 37
    assignment         go to state 38
    OGassi             go to state 39
    read_statement     go to state 40
    write_statement    go to state 41
    dowhile_statement  go to state 42


state 184

   68 if_statement: mc_if po CONDI pf mc_then ENSINST else_clause mc_endif .

    $default  reduce using rule 68 (if_statement)
